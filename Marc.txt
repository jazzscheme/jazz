- Comment obtenir la platform au runtime
- Would it be difficult to support compiling define-macro? It forces me to always seperate the code into 2 files when
  I want the expander to be compiled and it is very annoying: possible by using the underlying code used by define-macro
- Peut-on passer un (macro-absent) explicitement? NON
- Pourquoi le #\underscore fait-il une erreur et lui seul??? c'est un bug Gambit ou la notation #\u ne verifie pas la suite
- Is there an equiv to find-symbol in Gambit : ##find-interned-symbol
- Now that we are starting to dispatch on native Scheme types, we will really need a fast class-of
- When it's time to compile Jazz code, I'll clearly have correct code with circular symbol dependencies... We have to
  have a solution even if only to be able to load a binary file with suppressed warnings...
- Maintenant qu'on a une convergence des processeurs vers Intel a-t'il considere remettre une partie de code en assembleur?
- Comment ca marche? Je lit une string d'un fichier ouvert en UTF-8 et le repl ne peut l'afficher?
* We need a solution to exceptions that doesn't break Gambit's ability to debug. Seems like with-exception-* all unwind the
  stack before knowing we do not handle it and reraise...
- Is there a way to add Jazz's 2 initialized and destroyed bits to Jazz objects without paying a penalty : not really
* Rename meroon with jazz :)
- It seems that the construct that works for the loader doesn't work for the compiler :
  (parameterize ((current-readtable jazz.jazz-readtable))
    (compile-file-to src bindir "" cc-flags ld-flags))
(set! ##main-readtable ...)
- On ne peut faire ctrl-c quand on a un msg-loop surement car on capture les events a gambit? Y aurait-il une solution
  simple pour laisser le ctrl-c actif?
  - regarder si en faisant un GetMessage *juste* pour notre fenetre ca ne debloquerais pas le ctrl-c de la console
- Would be very nice to have a solution to Gambit's FFI not converting integers to real automatically
  ##fixnum->flonum qui test aussi que c'est bien un fixnum
- Serait pratique de pouvoir dire a l'option expansion de compile-file et gsc de ne pas generer de .o1
- Peut on utiliser statprof sur du code compile? oui mais bien mieux si -debug
- Le statprof est-il vraiment fiable (i.e. rejoin t-il tout le code?) : oui
- Tous les outils de Gambit sont totalement inutiles en presence de macros#!$!@#$ Y-aurais t'il moyen de faire qq chose?
  : define-macro recoit une version 100% strippe des infos de positionnement alors
    que ##define-syntax lui recoit l'info. Gambit etant la syntaxe de ##define-syntax pour permettre une lambda
    de transformation...
- Si besoin est, peut on accelerer le heartbeat de Gambit? oui mais deja au max qui est obtenu en passant 0 a la fonction qui le set
* Git serveur via SSH
* Envoyer nos chg Gambit a marc comme patch Mercurial
- real-time resolution on windows? - uses C library function that do not use windows performance counters
* (##define-macro (macro-subtype-pair) 1) ??? historical???

option pour disabler les warning de dependance circulaire
code snippet pour permettre la compilation d'un define-macro ou ##define-syntax
code snippet pour le ##main-readtable et corriger qui compile-file n'utilise pas le parametre current-readtable
corriger le bug du #\underscore
ajouter find-symbol
repl #0 pour la derniere valeur calcule ou imprime
Serait pratique de pouvoir dire a l'option expansion de compile-file et gsc de ne pas generer de .o1 ni de C
