JazzScheme is a programming language and development platform based on Scheme

***
*** This is an alpha release.
***
*** Note that Jazz is just emerging from a year long operation to have its C++
*** core replaced by a Scheme / Gambit core. During this time, the language also
*** evolved radically and the library was made multi-platform. Consequently, a
*** lot of modules and tools are still broken and the source code is currently a
*** mix of 'old style' and 'new style'. We are actively refactoring and cleaning
*** up the code to use the new features like libraries, tail-call recursion,
*** continuations, generics, type system, ...
***

Jazz is the programming language
Jedi is the IDE


License
=======

JazzScheme is released under a dual Mozilla Public License Version 1.1 or
GNU General Public License v2 or later. Choose whichever license you prefer.


Platforms
=========

Windows, Mac OS X, Linux / X11


Distribution
============

Readme.txt               :  Readme file
Install.txt              :  Installation instructions
.gambcini                :  Gambit code implementing the build system
.configurations          :  Save file for build configurations

bin                      :  Architecture binary directories
doc                      :  Preliminary documentation
doc/dev                  :  For developers of JazzScheme
etc                      :  Various resources like fonts
foreign                  :  Directory for foreign libraries
kernel                   :  Scheme code implementing the Jazz kernel
lib                      :  Installed packages


Building
========

Please see Install.txt for details and examples on building JazzScheme.


Jazz
====

Once you have built Jazz you can run the jazz executable to load Jazz modules.

<detail launch parameters>


Jedi IDE
========

Launch
  If you have built the Jedi IDE you can launch it using the jedi executable.

Debugging
  At the current time, the IDE relies totally on the underlying Scheme for
  debugging. This is not as painfull as would appear as JazzScheme code is very
  close to the generated Scheme code so that inspecting a Jazz stack inside the
  Gambit debugger is very easy. Having a lower level debugger is even a very
  nice feature as it is virtually impossible to crash the IDE even when
  modifying a critical piece of code (like inserting a bug in the view system
  for instance) as the Gambit debugger is completely self contained.

  If you get an error, you will find the IDE totally unresponsive as Gambit's
  debugger has now taken over. Just switch to the Gambit console. You can now
  use all of Gambit's debugging command to debug your Jazz code and when you
  want to resume the IDE's message loop, just clear the error level using
  Gambit's ,d command and then execute the (resume) command.


Documentation
=============

JazzScheme documentation is available in the doc directory and online at
www.jazzscheme.org


------------------------------------------
Send comments, suggestions, bugs,... to:
gcartier@jazzscheme.org
