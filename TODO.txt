JEREMIE
- test the new configuration on the mac!
- pour le mac separer le gui (windows + cairo) de jazz dans (lj) (ball) ...
- i moved the fonts dir inside the lib dir need to fix references
- put rect-intersects-region? at the right place
- how should we set up the new stable / dev ?
- es-ce qu'on devrait installer cairo 1.5.2?

GUILLAUME
- still have the damn problem of our changes not in the Gambit distrib
- distribute jazz with a gsc.exe in the architecture subdirs!?
- ummm with a restriction type we could have a type like fxstring that is a string that guaranties that
  its length is bounded in the range of fixnums!
- s&r complet de dc par surface
- remettre Rect a fx et faire une autre classe pour les number ou l'inverse
- when axis are working, simplify the code and make sure it is well optimized for the case of rows with not alot
  of sons
- i should be able to clean *alot* of not directly related code that i was forced to put inside classes because i
  didn't have generics. A class that needs big time cleanup like this is Component
- NEED to really think about the sharing of declarations when we do stuff like reload a file
- run r4rstest.scm under jazz

MARC
- #0
- change col of repl and other parameters
- gambit.h ___program_startup_info pour hInstance
- %GSC_CC_O_ARG3% %GSC_CC_O_REST%
- brainstorm the scheme "inelegance" of eq? eqv? string=? fx+ ...
- make output go to the jazz console
- jscm

R4RS
- f1.0 notation
- internal defines
- quasiquote
- =>
- semantics of declarations that are bound only after beeing defined vs jazz which binds declarations
  accross the whole module. another incompatibility that is related is that scheme code can define the
  same variable multiple times -> a possible solution would be to implement scheme semantics for define
  and jazz semantics for definition which seems very consistant with both names

GIT
- brainstorm with jeremie and do the right Git setup on the public repo
  - one thing i find strange is that if i clone a git repo i do not get its branches

OPTIMIZE
- why are WinUser, ... appearing as .jazz in statprof??
- optimize the interpreted caching would seem to be very critical
  - ahhh not really... why does it get always called is the right question!
  - look with marc at how can jazz.cache-dispatch-interpreted appear in the statprof report
    when it is even called! is it because of how we set! the dispatcher that gambit gets mixed up?

STATPROF
- should not index the buckets on file/line/col but rather on the continuation-code object itself
  so that 2 expressions on the same line are treated separately
- should keep the stack of callers so that in the report I can show that the 16% is divided between
  those 3 call branches
- the key is what gambit object represent static code and are stable?
