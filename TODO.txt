JEREMIE
- We have to think about and go through the code for what happens if we make for unix but no windowing
- Fix build on Cygwin / Windows that fails i think because Cygwin doesn't like just "jazz" just like unix
- Because of things like the text (for instance select all on a scrolled text), i do not see any other way
  than to restrict rectangles before the invalidate-rect to the platform. Do we also have to restrict so that
  if does not go further than the size of the window?
- Bug in the search window. Some parts of it do not display well.
- Negative invalidate-rect when we load jazz.ui.text.View-Text from the console.
- A second call of ctrl-f crash because of BadMatch in XSetInputFocus.
  This is a race condition in the X11 Server as putting XFlush in XMapWindow fix the problem.
  The problem is that it is an error to call XSetInputFocus on a window that is not viewable.
  As we call XMapWindow soon followed by XSetInputFocus the X11 server does not garantee
  the order of the events. We need to think about this seriously as it could appear elsewhere.
- Error in header-coordinates of Tree-Header called by mouse-down. - is called with 2 Points.
- When drawing selection in Text-View with the horizontal scroller moved we get a negative
  invalidate-rect
- Big bug in Text-View where a column of the View does not get updated + the selection is
  still buggy

STEPHANE
- save-as is buggy and can save as x.gLevel
- F8 is broken because of a bug that crashes specific handling even in debug mode


GUILLAUME
- bwinton@latte.ca interested in beta testing the web framework
- double-click on wb manager
- eval of more than 1 definition
- eval in user class
- save confirmation happens twice when quitting application
- Add a section about irc on the jazz website
- Implement high perf counters in Gambit which should solve the problem of timings beeing so inconsistant
  in Windows
- Implement Windows copy / paste in the Gambit console
- Maybe more natural (cfg default: wd)
- open-string-pipe read-substring input-port-timeout-set!
- need a clean solution to previously-focused-root management. One solution that looks clean would be to
  have the platform focus *always* to the overlapped and do the whole focus management ourselves with
  the Focus view. That way all the application activation events can be replaced in a platform independent
  maner by focus-gain/lose of the toplevel overlapped that can then set / reset the previously-focused-root
- go through every walk method to verify that it does *not* forward-expr when not needed
