{Formatted-Text
 formats:
 ({Format Base}
  {Format Base left-margin: 16 bulleted?: #t}
  {Format Base left-margin: 48 bulleted?: #t}
  {Format Base left-margin: 0 bulleted?: #f}
  {Format Base left-margin: 80 bulleted?: #t}
  {Format Base left-margin: 112 bulleted?: #t}
  {Format Base left-margin: 144 bulleted?: #t}
  {Format Heading2}
  {Format Heading2 left-margin: 16 bulleted?: #t}
  {Format Heading2 left-margin: 48 bulleted?: #t}
  {Format Heading2 left-margin: 0 bulleted?: #f}
  {Format Heading2 left-margin: 80 bulleted?: #t})

 styles:
 ({Text-Style Base}
  {Text-Style Heading2})

 paragraphs:
 ((7 ("Short Term" 1))
  (7)
  (8 ("Fix formatted text not having a context menu" 0))
  (8 ("Add shortcuts to Decrease Indent and Increase Indent" 0))
  (7)
  (7)
  (7 ("To File" 1))
  (7)
  (8 ("Complete the delayed evaluation" 0))
  (9 ("Evaluation with problems automatically goes into the Problems palette" 0))
  (9 ("Subsequent evaluations:" 0))
  (11 ("Remove evaluations in the Problems palette that are on the same declaration that we are evaluating" 0))
  (11 ("Try to redo the other ones" 0))
  (1 ("Experiment with launching application with an initial memory base using the -:d2 option" 0))
  (2 ("With the default memory base, there are alot of garbage collects occuring when launching" 0))
  (1 ("Add jazz.git to dependencies" 0))
  (1 ("Implement interning in parse-markup using domains!?" 0))
  (1 ("Update jam to latest Gambit being able to be build directly from its Git repo" 0))
  (1 ("Implement ftx as a formal object model" 0))
  (2 ("Convert Jazz doc and website to ftx" 0))
  (4 ("Integrate in the same place!?" 0))
  (5 ("todo" 0))
  (5 ("doc" 0))
  (6 ("examples" 0))
  (5 ("tests" 0))
  (4 ("Ideally, every example in the doc has a test implementing it" 0))
  (5 ("User can try it out" 0))
  (5 ("Easy to evolve and regenerate doc" 0))
  (5 ("Can be part of the automated test suite" 0))
  (1 ("Bring back all the useful code spread out in profiles into test suites" 0))
  (1 ("In Definition-Doc, present-text is commented out" 0))
  (1 ("Cleanup of the tree compare architecture to support comparing documentation trees" 0))
  (1 ("There is duplicated code in the fn that calls register-macro" 0))
  (1 ("Component expressivity" 0))
  (2 ("Integrate JML patterns and transformations!?" 0))
  (2 ("Integrate with code (macros, syntax-rules, ...) !?" 0))
  (2 ("JML patterns vs Quasiquotation" 0))
  (1 ("In SRFI code, error should expect a list of values" 0))
  (1 ("Browse the SRFI for interesting ones to integrate" 0))
  (1 ("Add digest / time to document controller (SLC)" 0))
  (1 ("Make c-s-F5 keyboard selectable" 0))
  (1 ("Fix clipboard ring bugs" 0))
  (1 ("Catalog internal defines to show them in the summary!?" 0))
  (1 ("Basic UI for choosing search directories" 0))
  (1 ("Search in directories doesn't check if text is empty" 0))
  (1 ("Need to catch when UI code is executed out of the primordial thread" 0))
  (1 ("Menu item for clear console" 0))
  (1 ("F12 on something, click and type some text, undo all -> we lose cursor" 0))
  (1 ("Should ctrl-0, 1, ... not be done in the debugger and sent to the debuggee!?" 0))
  (1 ("Finish the \"redefining warning\"" 0))
  (2 ("Problem is that some files get both" 0))
  (4 ("Loaded interpreted" 0))
  (4 ("Compiled" 0))
  (1 ("Fix kernel -compile jazz.test -force compiling twice because of the custom build" 0))
  (1 ("It is becoming key to be able to go from text-position to entry" 0))
  (2 ("Needed for a precise shift-F12 in the presence of hierarchycal structures" 0))
  (2 ("Will need start / end of the declaration" 0))
  (2 ("At the moment we having start / end of the declaration's name" 0))
  (1 ("Can shared binaries be made to work in the absence of source code?" 0))
  (3)
  (3)
  (7 ("X11" 1))
  (7)
  (8 ("Finish scroll2" 0))
  (8 ("Need to integrate Cairo 1.10 to Jazz" 0))
  (8 ("Quit -> Do you want to save -> No -> Assert failed in enable window" 0))
  (8 ("Manage Cairo regions memory" 0))
  (8 ("Shouldn't Jazz rectangle be h, v, width, height like Cairo!?" 0))
  (8 ("Use Cairo union, intersect, ... naming scheme for regions" 0))
  (8 ("Optimize set-clipper-region and make it cross-platform!?" 0))
  (8 ("Might as well also try the hint-metrics" 0))
  (8 ("Not crash on output to the terminal when terminal is not visible (MF)" 0))
  (8 ("I think that with set-clipper-region call from View-Player.paint, we can just scrap redraw-view-only!?" 0))
  (8 ("Fix Jedi showing launched C4 as \"C4\"" 0))
  (10)
  (10)
  (7 ("OpenGL" 1))
  (10)
  (8 ("Port to non-Windows platforms" 0))
  (3)
  (3)
  (7 ("Memory" 1))
  (3)
  (3 ("On Windows" 0))
  (2 ("gsi: 2.5M" 0))
  (2 ("gsc: 3.8M" 0))
  (2 ("kernel: 6.8M" 0))
  (2 ("kernel + (lj): 16.6M" 0))
  (2 ("kernel + (z): 91M" 0))
  (3))}
