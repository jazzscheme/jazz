;;;
;;;; Debugger
;;;


- If no exception-handler is installed then the underlying Scheme debugger will get used
- A debugger can be it's own debugger
- A GUI debugger can have as it's own debugger a console debugger
- I think it's much cleaner and robust if the debugger and debuggee never share the same process
  (the exception beeing the underlying Scheme debugger like Gambit). As it is easy to implement
  just in time debugging, it's really no limitation
- Pourrait avoir aussi une api genre pool-debugger pour un thread qui travaille longtemps...


;;;
;;;; Levels
;;;


Exception handlers of increasing power are progressively installed as bootstrapping progresses:


gambit:
  the gambit handler which starts up a console based repl

bootstrap:
  installed as soon as possible, just reports the exception into an external file and
  as soon as the kernel debug files are loaded adds stack output

jazz:
  remote rmi based exception handler


;;;
;;;; Concepts
;;;


- Debugger
- Debuggee
- Debuggee-Loop

- Process
  - local-debuggee
  - local-debugger
  - debugger


;;;
;;;; Stack Sample
;;;


debuggee A
  thread1
    break: user break
      p6
    error: 1 is not of the expected pair type
      p5
      p4
    error: operator is not a procedure
      p3
      p2
      p1
debuggee B
  thread1
  thread2
  thread3
