;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.project)
(jazz.editor.jazz))


(form
  (<Project>                     name: dialect
    (<Project-Directory>                       directory: {Directory :context "src"}
      (<Project-Directory>                     directory: {Directory :context "src" "dialect"}
        (<Project-Directory>                   directory: {Directory :context "src" "dialect" "base"}
          (<Project-Directory>                 directory: {Directory :context "src" "dialect" "base" "runtime"}
            (<Project-File>                    source: {File :context "src" "dialect" "base" "runtime" "_runtime.scm"}))
          (<Project-Directory>                 directory: {Directory :context "src" "dialect" "base" "syntax"}
            (<Project-Directory>               directory: {Directory :context "src" "dialect" "base" "syntax" "backend"}
              (<Project-File>                  source: {File :context "src" "dialect" "base" "syntax" "backend" "gambit.scm"}))
            (<Project-Directory>               directory: {Directory :context "src" "dialect" "base" "syntax" "dialect"}
              (<Project-File>                  source: {File :context "src" "dialect" "base" "syntax" "dialect" "runtime.scm"})
              (<Project-File>                  source: {File :context "src" "dialect" "base" "syntax" "dialect" "syntax.scm"}))
            (<Project-Directory>               directory: {Directory :context "src" "dialect" "base" "syntax" "walker"}
              (<Project-File>                  source: {File :context "src" "dialect" "base" "syntax" "walker" "runtime.scm"})
              (<Project-File>                  source: {File :context "src" "dialect" "base" "syntax" "walker" "syntax.scm"}))
            (<Project-File>                    source: {File :context "src" "dialect" "base" "syntax" "_syntax.scm"}))
          (<Project-File>                      source: {File :context "src" "dialect" "base" "_base.scm"}))
        (<Project-Directory>                   directory: {Directory :context "src" "dialect" "runtime"}
          (<Project-File>                      source: {File :context "src" "dialect" "runtime" "_runtime.scm"})
          (<Project-File>                      source: {File :context "src" "dialect" "runtime" "autoload.scm"})
          (<Project-File>                      source: {File :context "src" "dialect" "runtime" "initialize.scm"})
          (<Project-File>                      source: {File :context "src" "dialect" "runtime" "syntax.scm"}))
        (<Project-Directory>                   directory: {Directory :context "src" "dialect" "syntax"}
          (<Project-Directory>                 directory: {Directory :context "src" "dialect" "syntax" "backend"}
            (<Project-File>                    source: {File :context "src" "dialect" "syntax" "backend" "runtime.scm"})
            (<Project-File>                    source: {File :context "src" "dialect" "syntax" "backend" "syntax.scm"}))
          (<Project-Directory>                 directory: {Directory :context "src" "dialect" "syntax" "dialect"}
            (<Project-File>                    source: {File :context "src" "dialect" "syntax" "dialect" "runtime.scm"})
            (<Project-File>                    source: {File :context "src" "dialect" "syntax" "dialect" "syntax.scm"}))
          (<Project-Directory>                 directory: {Directory :context "src" "dialect" "syntax" "walker"}
            (<Project-File>                    source: {File :context "src" "dialect" "syntax" "walker" "expression.scm"})
            (<Project-File>                    source: {File :context "src" "dialect" "syntax" "walker" "ffi.scm"})
            (<Project-File>                    source: {File :context "src" "dialect" "syntax" "walker" "runtime.scm"})
            (<Project-File>                    source: {File :context "src" "dialect" "syntax" "walker" "syntax.scm"}))
          (<Project-File>                      source: {File :context "src" "dialect" "syntax" "_syntax.scm"}))
        (<Project-File>                        source: {File :context "src" "dialect" "_dialect.scm"})
        (<Project-File>                        source: {File :context "src" "dialect" "development.scm"}))))))
