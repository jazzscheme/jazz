;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Gambit Plot
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module gambit.logview.plot jazz


(import (gambit.logview)
        (jazz.graphic)
        (jazz.jml)
        (jazz.ui)
        (jazz.ui.view))


(definition public (plot-graph filename)
  (let ((frame (new-frame Plot host-visible?: #f host-title: (format "Plot: {a}" filename))))
    (let ((plot (get-guest~ frame)))
      (plot-view plot)
      (plot-setup filename)
      (set-visible?~ frame #t)
      (acquire-focus~ plot))))


(class Plot extends View
  
  
  (form
    (<install> background: {Color Gray}))
  
  
  (slot down-point)
  
  
  (method override (size-change size)
    (nextmethod size)
    (when (plot-view-ref)
      (plot-resize (get-width~ size) (get-height~ size))))
  
  
  (method override (mouse-move evt)
    (let ((pos (get-position~ evt)))
      (plot-move (get-h~ pos) (get-v~ pos))))
  
  
  (method override (mouse-down evt)
    (set! down-point (get-position~ evt)))
  
  
  (method override (mouse-up evt)
    (let ((down down-point)
          (up (get-position~ evt)))
      (plot-click (get-h~ down) (get-v~ down) (get-h~ up) (get-v~ up))))
  
  
  (method override (key-press evt)
    (plot-key (char->integer (get-key~ evt))))
  
  
  (method override (draw surface context)
    (parameterize ((current-surface surface))
      (plot-draw)))))
