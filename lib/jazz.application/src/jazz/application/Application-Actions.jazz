;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Application Actions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.application.Application-Actions jazz


(import (jazz.action)
        (jazz.handler)
        (jazz.markup))


(class undocumented Application-Actions extends Orphaned-Actions
  
  
  (form
    (<install>
      ;; File
      (<Action-Item> name: new                        action-handler: {Event-Handler :application on-new} shortcut: {Shortcut :control :alt #\N} alternate-shortcut: {Shortcut :meta #\N})
      (<Action-Item> name: open                       action-handler: {Event-Handler :application on-open} shortcut: {Shortcut :control :alt #\O} alternate-shortcut: {Shortcut :meta #\O})
      (<Action-Item> name: close                      action-handler: {Event-Handler :application on-close} shortcut: {Shortcut :control :alt #\W} alternate-shortcut: {Shortcut :meta #\W})
      (<Action-Item> name: close-all                  action-handler: {Event-Handler :application on-close-all})
      (<Action-Item> name: save-all                   action-handler: {Event-Handler :application on-save-all})
      (<Action-Item> name: print                      action-handler: {Event-Handler :application on-print} shortcut: {Shortcut :control :alt #\P} alternate-shortcut: {Shortcut :meta #\P})
      (<Action-Item> name: print-layout               action-handler: {Event-Handler :application on-print-layout})
      (<Action-Item> name: print-preview              action-handler: {Event-Handler :application on-print-preview})
      (<Action-Item> name: page-setup                 action-handler: {Event-Handler :application on-page-setup})
      (<Action-Item> name: quit                       action-handler: {Event-Handler :application on-quit-application} shortcut: {Shortcut :control :alt #\Q} alternate-shortcut: {Shortcut :meta #\Q})
      
      ;; Edit
      (<Action-Item> name: copy-formatted             action-handler: {Event-Handler :application on-copy-formatted} shortcut: {Shortcut :alt #\C})
      (<Action-Item> name: paste-cycle-ring           action-handler: {Event-Handler :application on-paste-cycle-ring})
      (<Action-Item> name: paste-cycle-ring-reversed  action-handler: {Event-Handler :application on-paste-cycle-ring-reversed})
      
      ;; History
      (<Action-Item> name: add-history                action-handler: {Event-Handler :application on-add-history} shortcut: {Shortcut :control #\-})
      (<Action-Item> name: backward-history           action-handler: {Event-Handler :application on-backward-history} shortcut: {Shortcut :control #\[})
      (<Action-Item> name: forward-history            action-handler: {Event-Handler :application on-forward-history} shortcut: {Shortcut :control #\]})
      
      ;; Source
      (<Action-Item> name: edit-next                  action-handler: {Event-Handler :application on-edit-next} shortcut: {Shortcut F4})
      (<Action-Item> name: edit-previous              action-handler: {Event-Handler :application on-edit-previous} shortcut: {Shortcut :shift F4})
      (<Action-Item> name: edit-current               action-handler: {Event-Handler :application on-edit-current} shortcut: {Shortcut :control F4})
      
      ;; Workspace
      (<Action-Item> name: zoom-horizontally          action-handler: {Event-Handler :application on-zoom-horizontally} shortcut: {Shortcut :alt :shift Return})
      (<Action-Item> name: zoom-vertically            action-handler: {Event-Handler :application on-zoom-vertically} shortcut: {Shortcut :alt :shift Space})
      (<Action-Item> name: maximize/restore           action-handler: {Event-Handler :application on-maximize/restore} shortcut: {Shortcut :alt :shift #\-})
      (<Action-Item> name: full-stage                 action-handler: {Event-Handler :application on-full-stage} shortcut: {Shortcut :alt :shift Delete})
      (<Action-Item> name: full-screen                action-handler: {Event-Handler :application on-full-screen} shortcut: {Shortcut :alt :shift Backspace})
      (<Action-Item> name: delete                     action-handler: {Event-Handler :application on-delete-stage} shortcut: {Shortcut :alt :shift #\0})
      (<Action-Item> name: delete-others              action-handler: {Event-Handler :application on-delete-other-stages} shortcut: {Shortcut :alt :shift #\1})
      (<Action-Item> name: split-horizontally         action-handler: {Event-Handler :application on-split-horizontally} shortcut: {Shortcut :alt :shift #\2})
      (<Action-Item> name: split-vertically           action-handler: {Event-Handler :application on-split-vertically} shortcut: {Shortcut :alt :shift #\3})
      (<Action-Item> name: move-frame                 action-handler: {Event-Handler :application on-move-frame} shortcut: {Shortcut :alt :shift #\X})
      (<Action-Item> name: clone-frame                action-handler: {Event-Handler :application on-clone-frame} shortcut: {Shortcut :alt :shift #\C})
      (<Action-Item> name: tie-frame-model            action-handler: {Event-Handler :application on-tie-frame-model} shortcut: {Shortcut :alt :shift #\T})
      (<Action-Item> name: untie-stage                action-handler: {Event-Handler :application on-untie-stage} shortcut: {Shortcut :alt :shift #\U})
      (<Action-Item> name: next-workspace             action-handler: {Event-Handler :application on-next-workspace} shortcut: {Shortcut :alt F6})
      (<Action-Item> name: previous-workspace         action-handler: {Event-Handler :application on-previous-workspace} shortcut: {Shortcut :alt :shift F6})

      ;; Frame
      (<Action-Item> name: next-frame                 action-handler: {Event-Handler :application on-next-frame} shortcut: {Shortcut F6})
      (<Action-Item> name: previous-frame             action-handler: {Event-Handler :application on-previous-frame} shortcut: {Shortcut :shift F6})
      (<Action-Item> name: current-frame              action-handler: {Event-Handler :application on-current-frame} shortcut: {Shortcut :control :alt #\D})
      (<Action-Item> name: next-stage                 action-handler: {Event-Handler :application on-next-stage} shortcut: {Shortcut :control F6})
      (<Action-Item> name: previous-stage             action-handler: {Event-Handler :application on-previous-stage} shortcut: {Shortcut :control :shift F6})
      (<Action-Item> name: tile-horizontally          action-handler: {Event-Handler :application on-tile-horizontally})
      (<Action-Item> name: tile-vertically            action-handler: {Event-Handler :application on-tile-vertically})
      
      ;; Help
      (<Action-Item> name: about                      action-handler: {Event-Handler :application on-about})))))
