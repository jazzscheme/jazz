;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Application Services
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.application.services jazz


(import (jazz.application)
        (jazz.locale))


(definition package (prepare-services)
  (prepare-feedback))


;;;
;;;; Feedback
;;;


(definition (prepare-feedback)
  (provide-service 'user-message user-message)
  (provide-service 'user-message/action-handler user-message/action-handler)
  (provide-service 'user-feedback user-feedback)
  (provide-service 'clear-user-message clear-user-message)
  (provide-service 'clear-user-feedback clear-user-feedback))


(definition package (user-message obj . rest)
  (let ((appl (get-application)))
    (when appl
      (set-status-message~ appl (if (is? obj Locales) obj (apply format obj rest)) #f #f))))


(definition package (user-message/action-handler message action-handler)
  (let ((appl (get-application)))
    (when appl
      (set-status-message~ appl message action-handler #f))))


(definition package (user-feedback obj . rest)
  (let ((appl (get-application)))
    (when appl
      (set-status-message~ appl (if (is? obj Locales) obj (apply format obj rest)) #f #t))))


(definition package (clear-user-message)
  (user-message ""))


(definition package (clear-user-feedback)
  (user-feedback "")))
