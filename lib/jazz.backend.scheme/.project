;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.project)
        (jazz.editor.jazz))


(form
  (<Project>                     name: jazz.backend.scheme description-file: {File :context ".package"}
    (<Project-Directory>                                   directory: {Directory :context "src"}
      (<Project-Directory>                                 directory: {Directory :context "src" "jazz"}
        (<Project-Directory>                               directory: {Directory :context "src" "jazz" "backend"}
          (<Project-Directory>                             directory: {Directory :context "src" "jazz" "backend" "scheme"}
            (<Project-Directory>                           directory: {Directory :context "src" "jazz" "backend" "scheme" "runtime"}
              (<Project-File>                              source: {File :context "src" "jazz" "backend" "scheme" "runtime" "_runtime.scm"})
              (<Project-File>                              source: {File :context "src" "jazz" "backend" "scheme" "runtime" "classes.scm"})
              (<Project-File>                              source: {File :context "src" "jazz" "backend" "scheme" "runtime" "syntax.scm"})
              (<Project-File>                              source: {File :context "src" "jazz" "backend" "scheme" "runtime" "core.scm"}))
            (<Project-File>                                source: {File :context "src" "jazz" "backend" "scheme" "_scheme.scm"})
            (<Project-File>                                source: {File :context "src" "jazz" "backend" "scheme" "emit.scm"}))))))))
