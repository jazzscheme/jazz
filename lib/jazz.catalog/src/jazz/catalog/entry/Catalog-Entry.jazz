;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Catalog Entry
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.catalog.entry.Catalog-Entry jazz


(class undocumented Catalog-Entry extends Object
  
  
  (slot parent          initialize #f)
  (slot root-definition initialize #f)
  (slot file-definition initialize #f)


  ;;;
  ;;;; Access
  ;;;


  (method public inline (get-parent self)
    parent)


  (method public inline (set-parent self p)
    (set! parent p))


  (method public virtual (get-root-definition self)
    root-definition)


  (method public virtual (set-root-definition self def)
    (set! root-definition def))


  (method public virtual (get-file-definition self)
    file-definition)


  (method public virtual (set-file-definition self def)
    (set! file-definition def))
  
  
  (method public virtual (for-each-descendant-entry self proc (include-self?: include-self? #t))
    (when include-self?
      (proc self)))


  ;;;
  ;;;; Virtual
  ;;;


  (method public virtual (get-kind self)
    #f)


  (method public virtual (get-file self)
    #f)


  (method public virtual (get-moniker self)
    #f)


  (method public virtual (get-title self)
    )


  (method public virtual (get-location-name self)
    )


  (method public virtual (get-name self)
    )


  (method public virtual (get-line self)
    )


  (method public virtual (get-column self)
    )
  
  
  (method public virtual (get-start self)
    )
  
  
  (method public virtual (get-end-line self)
    )
  
  
  (method public virtual (get-end-column self)
    )
  
  
  (method public virtual (get-end self)
    )
  
  
  (method public virtual (get-range self)
    )


  (method public virtual (get-definitions self)
    '())
  
  
  (method public virtual (get-image self)
    #f)


  ;;;
  ;;;; Present
  ;;;


  (method public virtual (present self)
    )


  (method public virtual (present-name self)
    )


  (method public virtual (present-identifier self)
    )


  (method public virtual (present-detailed self)
    (present-name self))


  ;;;
  ;;;; Indexes
  ;;;
  
  
  (method public virtual (update-indexes self definitions-index references-index)
    )))
