;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; ADO Connections
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.database.ado.connection.ADO-Connection jazz


(import (jazz.database)
        (jazz.database.ado)
        (jazz.platform)
        (jazz.platform.com)
        (jazz.schema))


(class ADO-Connection extends Connection
  
  
  (slot handle initialize #f getter generate)
  
  
  (method override (setup-connection self)
    (nextmethod self)
    (set! handle (com-create Connection-class))
    @convert
    (put-CommandTimeout handle 0))
  
  
  (method override (destroy-connection self)
    (when handle
      (Connection15$Close handle)
      (com-release handle)
      (set! handle #f))
    (nextmethod self))
  
  
  ;;;
  ;;;; Open
  ;;;
  
  
  (method override (open self data-source . rest)
    (let ((connection-string (get-connection-string data-source)))
      (Connection15$Open handle connection-string "" "" adConnectUnspecified))
    (nextmethod self data-source))
  
  
  ;;;
  ;;;; State
  ;;;
  
  
  (method override (get-state self)
    (let ((state (Connection15$get-State handle)))
      (cond ((= state adStateOpen) 'open)
            ((= state adStateClosed) 'closed)
            (else 'unknown))))
  
  
  ;;;
  ;;;; Request
  ;;;
  
  
  (method override (new-request self)
    (new ADO-Request self))
  
  
  ;;;
  ;;;; Execute
  ;;;
  
  
  (method override (execute self command)
    (let ((command (post-process-request data-source command)))
      (trace-ado command)
      (receive (affected recordset) (Connection15$Execute handle command (bitwise-ior adCmdText adExecuteNoRecords))
        affected)))
  
  
  ;;;
  ;;;; Transaction
  ;;;
  
  
  (method override (begin-transaction self)
    (Connection15$BeginTrans handle))
  
  
  (method override (commit-transaction self)
    (Connection15$CommitTrans handle))
  
  
  (method override (rollback-transaction self)
    (Connection15$RollbackTrans handle))))
