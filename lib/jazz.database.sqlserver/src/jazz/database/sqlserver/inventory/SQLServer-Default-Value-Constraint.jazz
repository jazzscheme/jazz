;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; SQLServer Default Value Constraint
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.database.sqlserver.inventory.SQLServer-Default-Value-Constraint jazz


(import (jazz.database))


(class SQLServer-Default-Value-Constraint extends Integrity-Constraint


  ;;;
  ;;;; Register
  ;;;
  
  
  (method meta (register-constraints manager)
    @commented-because-this-refers-to-metascoop-classes-metamodeler-to-convert
    (register-constraint manager (new self) Design-Column))


  ;;;
  ;;;; Validate
  ;;;
  
  
  (method (validate column architecture client context manager)
    @commented-because-this-refers-to-metascoop-classes-metamodeler-to-convert
    (when (get-visible? column)
      (let* ((architecture (find-ascendant column Design-Architecture))
             (schema (get-schema architecture (get-schema (get-table column))))
             (default-value (get-default-value column)))
        (when (and (is? schema SQLServer-Design-Schema)
                   (not-null? default-value))
          (let* ((len (length default-value))
                 (parentheses? (and (>= len 2)
                                    (= (subseq default-value 0 1) "(")
                                    (= (subseq default-value (- len 1) len) ")"))))
            (if (not parentheses?)
                (begin
                  (add-violation manager (new Integrity-Violation message: "Default-value must be placed in parentheses" property: 'default-value) column architecture client)
                  'stop-descent)
              (let* ((default-value (subseq default-value 1 (- len 1)))
                     (len (length default-value))
                     (apostrophes? (and (>= len 2)
                                        (= (subseq default-value 0 1) "'")
                                        (= (subseq default-value (- len 1) len) "'"))))
                (when apostrophes?
                  (let* ((default-value (subseq default-value 1 (- len 1)))
                         (apostrophe-alone? (some? (lambda (text)
                                                     (search text "'"))
                                                   (split default-value "''"))))
                    (when apostrophe-alone?
                      (add-violation manager (new Integrity-Violation message: "Les apostrophes doivent etre double dans le texte" property: 'default-value) column architecture client)
                      'stop-descent))))))))))))
