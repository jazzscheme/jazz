;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; SQLServer Widget
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.database.sqlserver.inventory.SQLServer-Widget jazz


(import (jazz.database)
        (jazz.database.sqlserver)
        (jazz.markup)
        (jazz.ui))


(class SQLServer-Widget extends Data-Source-Widget


  (form
    (<install>                                              size: {Dimension 278 129}
      (<Label-View>                   name: server-label    title: "Server:" position: {Point 0 3} size: {Dimension 59 16})
      (<Border-View>                  name: server-border   position: {Point 67 1} size: {Dimension 203 19} border-type: edge style: ()
        (<SQLServer-Server-Browser>   name: server          content-change-handler: {Event-Handler :form on-server-change}
          (<!>                        name: scroller
            (<!>                      name: content
              (<!>                    name: body            left-padding: 2 top-padding: 2)))))
      (<Label-View>                   name: username-label  title: "Username:" position: {Point 0 29} size: {Dimension 59 16})
      (<Border-View>                  name: username-border position: {Point 67 26} size: {Dimension 203 21} border-type: edge style: ()
        (<Scroller-View>                                    hscroll?: #f vscroll?: #f
          (<!>                        name: content         layout-type: fill
            (<Entry-Text-View>        name: username        return-press-handler: {Event-Handler :form on-return-press}))))
      (<Label-View>                   name: password-label  title: "Password:" position: {Point 0 52} size: {Dimension 56 16})
      (<Border-View>                  name: password-border position: {Point 67 49} size: {Dimension 203 21} border-type: edge style: ()
        (<Scroller-View>                                    hscroll?: #f vscroll?: #f
          (<!>                        name: content         layout-type: fill
            (<Password-Text-View>     name: password        return-press-handler: {Event-Handler :form on-return-press}))))
      (<Label-View>                   name: database-label  title: "Database:" position: {Point 0 81} size: {Dimension 56 16})
      (<Border-View>                  name: database-border position: {Point 67 79} size: {Dimension 203 19} border-type: edge style: ()
        (<SQLServer-Database-Browser> name: database
          (<!>                        name: scroller
            (<!>                      name: content
              (<!>                    name: body            left-padding: 2 top-padding: 2)))))))
  
  
  (method (install rest)
    (nextmethod rest)
    (set-choices-updater (locate 'database) database-choices-updater))
  
  
  (method (database-choices-updater combo-box)
    (set-data-source combo-box (get-data-source))
    #t)
 

  ;;;
  ;;;; Source
  ;;;
  
  
  (method (get-data-source)
    (new SQLServer-Data-Source
      server:   (get-entry (locate 'server))
      username: (get-string-content (locate 'username))
      password: (get-string-content (locate 'password))
      database: (get-entry (locate 'database))))
  
  
  (method (set-data-source source)
    (set-entry (locate 'server) (get-server source))
    (set-string-content (locate 'username) (get-username source))
    (set-string-content (locate 'password) (get-password source))
    (set-entry (locate 'database) (get-database source)))
  
  
  (method (setup-username/password-mode)
    (set-enabled? (locate 'server) #f)
    (set-enabled? (locate 'database) #f)
    (acquire-focus (locate 'username))
    (select-all (locate 'username)))

  
  ;;;
  ;;;; Enabled
  ;;;
  
  
  (method (set-enabled? flag)
    (set! enabled? flag)
    (set-enabled? (locate 'server) flag)
    (set-enabled? (locate 'username) flag)
    (set-enabled? (locate 'password) flag)
    (set-enabled? (locate 'database) flag)
    (invalidate-view))
  

  ;;;
  ;;;; Events
  ;;;
  
  
  (method (get-tab-stops)
    (list
      (locate 'server)
      (locate 'username)
      (locate 'password)
      (locate 'database)))
  
  
  (method public (set-default-focus)
    (acquire-focus (locate 'server)))
  
  
  (method (on-server-change evt)
    (set-data-source (locate 'database) #f))
  
  
  (method (on-return-press evt)
    (when return-press-handler
      (invoke-handler self return-press-handler evt)))

  
  ;;;
  ;;;; Modal
  ;;;
  
  
  (method (validate-content)
    @popup-always-empty-in-MM
    (validate-content (locate 'server))
    (validate-content (locate 'database)))))
