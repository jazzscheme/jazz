;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Data-Source Chooser
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.database.view.Data-Source-Chooser jazz


(import (jazz.database)
        (jazz.graphic)
        (jazz.handler)
        (jazz.markup)
        (jazz.ui)
        (jazz.view))


(class undocumented Data-Source-Chooser extends View


  (property provider initialize #f)


  (form
    (<install>                                     size: {Dimension 500 202}
      (<Label-View>              name: title       title: "Choose Database" position: {Point 10 9} size: {Dimension 350 16} font: {Font Caption})
      (<Label-View>              name: description title: "Please specify the database" position: {Point 30 27} size: {Dimension 350 16} font: {Font Label})
      (<Group-Box>               name: database    position: {Point -2 44} size: {Dimension 604 116} layout-type: fill layout-insets: {Rect 16 22 0 0}
        (<content~>
          (<Data-Source-Browser> name: browser)))
      (<Push-Button>             name: update      title: "Choose" position: {Point 105 170} size: {Dimension 80 24} default?: #t action-handler: {Event-Handler :guest on-update})
      (<Push-Button>             name: cancel      title: "Cancel" position: {Point 195 170} size: {Dimension 80 24} action-handler: {Event-Handler :host on-cancel})))
  
  
  (method override (finish self rest)
    (nextmethod self rest)
    (setup-browser self (target-provider self)))
  
  
  (method protected virtual (target-provider self)
    provider)

  
  ;;;
  ;;;; Host
  ;;;
  
  
  (method meta override (host-title self)
    "Database Chooser")
  
  
  (method meta override (host-size self)
    {Dimension 650 250})
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-provider self)
    provider)
  
  
  (method public (set-provider self value)
    (set! provider value)
    (set-provider (get-browser self) value))
  
  
  (method public (get-data-source self)
    (get-data-source (get-browser self)))
  
  
  (method public (set-data-source self value)
    (set-data-source (get-browser self) value))
  
  
  (method public (get-browser self)
    (locate self 'browser))
  

  ;;;
  ;;;; Setup
  ;;;
  
  
  (method (setup-browser self provider)
    (set-provider (locate self 'browser) provider)
    (set-default-focus (locate self 'browser)))
  

  ;;;
  ;;;; Events
  ;;;
  
  
  (method override (resize self dh dv)
    (nextmethod self dh dv)
    (size-figure (locate self 'database) dh dv)
    (move-figure (locate self 'update) dh dv)
    (move-figure (locate self 'cancel) dh dv))
  
  
  (method override (get-tab-stops self)
    (get-tab-stops (get-browser self)))
  
  
  (method override (on-return-press self evt)
    (update-database self))
  
  
  (method (on-update self evt)
    (update-database self))
  
  
  (method package (on-close self evt)
    (close (get-host self)))


  ;;;
  ;;;; Update
  ;;;
  
  
  (method protected virtual (update-database self)
    (let ((dialog (get-host self))
          (source (get-data-source self)))
      (end-modal dialog source)))
  

  ;;;
  ;;;; Drawing
  ;;;
  
  
  (definition Header-Color
    (new Color red: 120 green: 120 blue: 255))

  
  (method override (draw self surface context)
    (let ((size (get-size self)))
      (gradient-fill-rect surface (new Rect 0 0 (get-width size) 50) (list (list 0 {Color White}) (list 1 Header-Color)))))))
