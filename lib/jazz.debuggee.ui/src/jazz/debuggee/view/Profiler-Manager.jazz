;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Profiler Manager
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.debuggee.view.Profiler-Manager jazz


(import (jazz.debuggee.view)
        (jazz.handler)
        (jazz.jml)
        (jazz.layout)
        (jazz.resource)
        (jazz.ui)
        (profiler))


(class Profiler-Manager extends Layout-View


  (form
    (<install>                                       size: {Dimension 800 500} layout-type: border layout-insets: {Rect 2 2 2 2}
      (<Layout-View>                                 size: {Dimension 100 33} layout-type: flow layout-insets: {Rect 2 6 2 0} location: north
        (<Push-Tool>       name: update              size: {Dimension 22 22} tooltip?: #t tooltip-text: "Update" resource: {Image-Resource "Refresh"} portfolio: :images action-handler: {Event-Handler :form on-update})
        (<Separator>)
        (<Push-Tool>       name: delete              size: {Dimension 22 22} tooltip?: #t tooltip-text: "Clear" resource: {Image-Resource "Clear"} portfolio: :images action-handler: {Event-Handler :form on-reset})
        (<Separator>                                 size: {Dimension 64 0} location: tail)
        (<Toggle-Tool>     name: on/off              size: {Dimension 22 22} location: tail tooltip?: #t tooltip-text: "On/Off" portfolio: :images resource: {Image-Resource "Log"} action-handler: {Event-Handler :form on-on/off})
        (<Separator>                                 size: {Dimension 2 0} location: tail))
      (<Layout-View>                                 location: center layout-type: fill layout-insets: {Rect 1 0 1 1}
        (<Border-View>     name: profile-border      location: center border-type: edge style: entry
          (<Profiler-View> name: profile-view
            (<!>           name: scroller
              (<!>         name: content
                (<!>       name: header
                  (<!>     name: content
                    (<!>   name: profile             double-click-handler: {Event-Handler :form on-double-click}))))))))))
  
  
  (method meta override (external-name self . rest)
    'profiler-manager)


  (method override (conclude self rest)
    (nextmethod self rest)
    (set-selected? (locate self 'on/off) (profiler-on?))
    (update-profile self))
  
  
  ;;;
  ;;;; Host
  ;;;
  
  
  (method meta override (host-title self)
    "Profiler Manager")
  
  
  (method meta override (host-icon self)
    {Image-Resource "Trait"})
  
  
  (method meta override (host-size self)
    {Dimension 800 420})
  
  
  (method override (client-activate self)
    (update-profile self))
  
  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method (on-update self evt)
    (update-profile self))
  
  
  (method (on-reset self evt)
    (reset-profile)
    (update-profile self))
  
  
  (method (on-on/off self evt)
    (profiler-on? (not (profiler-on?))))
  
  
  (method (on-double-click self evt)
    @cant-find
    (edit-profile (locate self 'profile-view)))
  
  
  ;;;
  ;;;; Setup
  ;;;
  
  
  (method package (update-profile self)
    (update-profile (locate self 'profile-view)))))
