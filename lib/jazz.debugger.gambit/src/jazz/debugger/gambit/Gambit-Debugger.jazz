;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Gambit Debugger
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.debugger.gambit.Gambit-Debugger jazz


(import @wait (gambit)
        (jazz.console)
        (jazz.debugger)
        (jazz.debugger.gambit)
        (jazz.system))


(class Gambit-Debugger extends Debugger
  
  
  ;;;
  ;;;; Debugger
  ;;;
  
  
  (method override (start-debugger)
    (user-message "Starting gambit debugger...")
    (rdi-init rdi-function)
    (thread-start!
      (new-system-thread
        (lambda ()
          (rdi-debugger-init))
        'gambit-debugger-server)))
  
  
  (method override (stop-debugger)
    )
  
  
  (method override (get-processes (validate-liveness?: validate-liveness? #f))
    )
  
  
  (method override (detach-processes)
    )
  
  
  ;;;
  ;;;; Process
  ;;;
  
  
  (method override (process=? x y)
    )
  
  
  (method override (process-live? process)
    )
  
  
  (method override (process-title process)
    )
  
  
  (method override (process-icon process)
    )
  
  
  (method override (process-threads process)
    )
  
  
  (method override (present-process process)
    )
  
  
  (method override (evaluate-expressions process syntax string container line col evaluation-mode walk-debugger walk-cookie)
    )
  
  
  (method override (process-detach process)
    )
  
  
  (method override (process-exit process)
    )
  
  
  ;;;
  ;;;; Thread
  ;;;
  
  
  (method override (thread-name thread)
    )
  
  
  (method override (thread-state thread)
    )
  
  
  (method override (thread-stops thread)
    )
  
  
  (method override (break-thread process thread)
    )
  
  
  (method override (terminate-thread process thread preserve-console?)
    )
  
  
  (method override (thread-debugged-continuation? thread)
    #f)
  
  
  ;;;
  ;;;; Restart
  ;;;

  
  (method override (restart-stop process restart)
    )
  
  
  ;;;
  ;;;; Stop
  ;;;
  
  
  (method override (stop-kind stop)
    )
  
  
  (method override (stop-reason stop)
    )
  
  
  (method override (stop-frames stop)
    )
  
  
  (method override (continue-stop process stop)
    )
  
  
  (method override (step-stop process stop command)
    )
  
  
  ;;;
  ;;;; Frame
  ;;;
  
  
  (method override (frame-name frame)
    )
  
  
  (method override (frame-location frame)
    )
  
  
  (method override (frame-variables frame)
    )
  
  
  (method override (frame-variable-name frame variable)
    )
  
  
  (method override (frame-variable-value frame variable)
    )))
