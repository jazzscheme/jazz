;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Gambit Projects
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.debugger.gambit.Gambit-Project jazz


(import (jazz.debugger.gambit)
        (jazz.ide)
        (jazz.jml)
        (jazz.library)
        (jazz.project))


(class Gambit-Project extends Project
  
  
  (property minimum-heap initialize #f accessors generate)
  (property maximum-heap initialize #f accessors generate)


  ;;;
  ;;;; Concrete
  ;;;
  
  
  (method override (concrete?)
    #t)
  
  
  ;;;
  ;;;; Debugger
  ;;;
  
  
  @wait
  (definition started?
    #f)
  
  
  @wait
  (method (start-debugger)
    (when (not started?)
      (let ((debugger (new Gambit-Debugger)))
        (start-debugger~ debugger)
        (register-debugger debugger))
      (set! started? #t)))


  ;;;
  ;;;; Debug
  ;;;
  
  
  @wait
  (method (project-debug . rest)
    (start-debugger)
    (open-process
      (list
        path: "gsi"
        arguments: (list "-:darR" "-debug")
        stdin-redirection: #f
        stdout-redirection: #f
        stderr-redirection: #f
        show-console: #f)))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Gambit-Project-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer))


(class Gambit-Project-Descriptor extends Project-Descriptor
  
  
  (form
    (<install>                 image: {Image-Resource "ConcreteProject"}
      (<properties~>           categorized: (title minimum-heap maximum-heap)
        (<Property-Descriptor> name: minimum-heap)
        (<Property-Descriptor> name: maximum-heap)))))))
