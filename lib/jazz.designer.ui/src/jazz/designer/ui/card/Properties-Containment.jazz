;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Properties Containment
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.designer.ui.card.Properties-Containment jazz


(import (jazz.application)
        (jazz.designer)
        (jazz.designer.ui)
        (jazz.markup)
        (jazz.workspace))


(class undocumented Properties-Containment extends Properties-Manager


  (form
    (<install>
      (<Containment-View> name: containment size: {Dimension 100 32} location: north)))
  
  
  (method meta override (external-name self . rest)
    'Containment)

  
  ;;;
  ;;;; Host
  ;;;
  
  
  (method override (on-selected-change self evt)
    (nextmethod self evt)
    (let ((owner (get-owner evt)))
      (typecase owner
        ((Designer Text-Editor)
         (set-containment-editor self #f))
        ((Component-Editor)
         (set-containment-editor self owner))
        (else
         (set-containment-editor self #f)))))
  
  
  (method override (client-activate self)
    (nextmethod self)
    (let ((guest (current-document)))
      (typecase guest
        ((Text-Editor)
         (set-containment-editor self #f))
        ((Component-Editor)
         (set-containment-editor self guest))
        (else
         (set-containment-editor self #f)))))
  
  
  (method override (client-deactivate self)
    (nextmethod self)
    (set-containment-editor self #f))
  
  
  (method (set-containment-editor self editor)
    (let ((view (locate self 'containment)))
      (set-editor view editor)))))
