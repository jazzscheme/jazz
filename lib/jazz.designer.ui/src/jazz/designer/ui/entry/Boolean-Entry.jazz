;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Boolean Entry
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.designer.ui.entry.Boolean-Entry jazz


(import (jazz.designer)
        (jazz.designer.ui)
        (jazz.markup)
        (jazz.ui))


(class Boolean-Entry extends Property-Entry
  
  
  (form
    (<install>                          auto-size?: #t
      (<Entry-Check-Box> name: checkbox selectable?: #t)))
  
  
  (method override (preferred-size self)
    {Dimension 16 16})
  
  
  (method override (finish self rest)
    (nextmethod self rest)
    (set-editor (locate self 'checkbox) self))
  
  
  ;;;
  ;;;; Tab
  ;;;
  
  
  (method override (tab-view self)
    (locate self 'checkbox))
  
  
  ;;;
  ;;;; Validate
  ;;;
  
  
  (method override (presentation-violation self)
    #f)
  
  
  ;;;
  ;;;; Value
  ;;;
  
  
  (method override (get-value self)
    (get-checked? (locate self 'checkbox)))
  
  
  (method override (set-value self value)
    (set-checked? (locate self 'checkbox) value))
  
  
  (method override (get-modified? self)
    (get-modified? (locate self 'checkbox)))
  
  
  (method override (set-modified? self value)
    (set-modified? (locate self 'checkbox) value))
  
  
  ;;;
  ;;;; Editable
  ;;;
  
  
  (method override (set-editable? self value)
    (set-editable? (locate self 'checkbox) value))
  
  
  ;;;
  ;;;; Enabled
  ;;;
  
  
  (method override (set-enabled? self value)
    (set-enabled? (locate self 'checkbox) value)))


;;;
;;;; Check-Box
;;;


(class Entry-Check-Box extends Check-Box
  
  
  (property editor initialize #f accessors generate)
  
  
  (method override (focus-gained self)
    (nextmethod self)
    (when (and editor selectable?)
      (let ((manager (get-manager editor)))
        (when manager
          (editor-focus-gained manager editor)))))
  
  
  (method override (focus-lose self)
    (nextmethod self)
    (when (and editor selectable?)
      (let ((manager (get-manager editor)))
        (when manager
          (editor-focus-lose manager editor)))))))
