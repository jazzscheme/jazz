;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Property Entry
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.designer.ui.entry.Property-Entry jazz


(import (jazz.descriptor)
        (jazz.designer)
        (jazz.designer.ui)
        (jazz.domain)
        (jazz.geometry)
        (jazz.markup)
        (jazz.ui))


(class Property-Entry extends Layout-View implements Property-Editor
  
  
  (property manager initialize #f accessors (override generate))
  (property domain  initialize #f accessors generate)
  
  
  (slot violation initialize #f)
  
  
  (form
    (<install> layout-type: fill))
  
  
  ;;;
  ;;;; Validate
  ;;;
  
  
  (method public virtual (presentation-violation self)
    (presentation-violation domain (get-presentation self)))
  
  
  (method override (get-presentation self)
    (present domain (get-value self)))
  
   
  (method override (set-presentation self text)
    (set-value self (parse domain text)))
  
  
  (method override (get-violation self)
    violation)
  
  
  (method override (set-violation self value)
    (set! violation value)
    (invalidate-entry self))
  
  
  (method public (invalidate-entry self)
    (invalidate-rect self (inflate-rect (get-bounds self) 1 1)))
  
  
  ;;;
  ;;;; Import
  ;;;
  
  
  (method override (get-imports self)
    #f)
  
  
  ;;;
  ;;;; Tab
  ;;;
  
  
  (method package virtual (tab-view self)
    )
  
  
  ;;;
  ;;;; Grid
  ;;;
  
  
  (method package virtual (setup-for-grid self)
    )
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor self (context: context #f))
    (new Property-Entry-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer)
        (jazz.designer.ui)
        (jazz.ui.descriptors))


(class Property-Entry-Descriptor extends Layout-View-Descriptor
  
  
  (form
    (<install>
      (<properties~>
        (<Property-Descriptor> name: manager
          (<Value-Domain>      name: domain))
        (<Property-Descriptor> name: domain
          (<Value-Domain>      name: domain)))))
  
  
  @wait
  (method override (component-get-presentation component)
    (get-value component))
  
  
  @wait
  (method override (component-set-presentation component presentation)
    (set-value component presentation)))))
