;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Text-View Surrogate
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.designer.ui.surrogate.Text-View-Surrogate jazz


(import (jazz.designer)
        (jazz.designer.ui)
        (jazz.view))


(class undocumented Text-View-Surrogate extends View-Surrogate
  
  
  (slot edit? initialize #f)


  ;;;
  ;;;; Edit
  ;;;
  
  
  (method override (editing? self)
    edit?)
  
  
  (method (start-edit self)
    (set! edit? #t)
    (acquire-focus client)
    (invalidate-view client))
  
  
  (method (stop-edit self)
    (set! edit? #f)
    (invalidate-view client))


  ;;;
  ;;;; Focus
  ;;;
  
  
  (method override (on-focus-gained self evt)
    (if (editing? self)
        (focus-gained client)
      (nextmethod self evt)))
  
  
  (method override (on-focus-lose self evt)
    (if (editing? self)
        (begin
          (focus-lose client)
          (stop-edit self))
      (nextmethod self evt)))


  ;;;
  ;;;; Cursor
  ;;;
  
  
  (method override (on-cursor-update self evt)
    (if (editing? self)
        (cursor-update client evt)
      (nextmethod self evt)))


  ;;;
  ;;;; Mouse
  ;;;
  
  
  (method override (on-mouse-down self evt)
    (if (editing? self)
        (begin
          (when (select? self)
            (select editor client))
          (mouse-down client evt))
      (nextmethod self evt)))
  
  
  (method override (on-mouse-up self evt)
    (if (editing? self)
        (mouse-up client evt)
      (nextmethod self evt)))
  
  
  (method override (on-drag-move self evt)
    (if (editing? self)
        (drag-move client (get-position evt))
      (nextmethod self evt)))
  
  
  (method override (on-drag-up self evt)
    (if (editing? self)
        (drag-up client evt)
      (nextmethod self evt)))
  
  
  (method override (on-double-click self evt)
    (if (editing? self)
        (double-click client evt)
      (start-edit self)))


  (method override (on-context-menu self evt)
    (if (editing? self)
        (context-menu client evt)
      (nextmethod self evt)))


  ;;;
  ;;;; Keyboard
  ;;;
  
  
  (method override (on-key-press self evt)
    (if (editing? self)
        (key-press client evt)
      (nextmethod self evt)))
  
  
  (method override (on-return-press self evt)
    (if (editing? self)
        (return-press client evt)
      (start-edit self)))))
