;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Toolbox
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.designer.ui.toolbox.Toolbox jazz


(import (jazz.component)
        (jazz.component.designer)
        (jazz.descriptor)
        (jazz.domain)
        (jazz.jml)
        (jazz.resource))


(class undocumented Toolbox extends Group
  
  
  (property kind initialize #f accessors generate)
  
  
  (form
    (<install> title: "Toolbox"))
  
  
  
  ;;;
  ;;;; Models
  ;;;
  
  
  (method public (find-model locator unit)
    (find-if (lambda (toolbox-model)
               (and (equal? locator (get-model~ toolbox-model))
                    (eq? unit (get-unit~ toolbox-model))))
             (collect-descendants Toolbox-Model)
             return: 'item))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new Toolbox-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer.ui))


(class Toolbox-Descriptor extends Group-Descriptor
  
  
  (form
    (<install>                               title: "Toolbox" image: {Image-Resource "Toolbox"} can-rename?: #f can-delete?: #f can-relocate?: #f can-copy?: #f
      (<properties~>
        (<Property-Descriptor>  name: kind
          (<Enumeration-Domain> name: domain nil-presentation: "Framework" choices: ((user "User")))))))
  
  
  (method override (component-get-presentation component)
    (get-title~ component))
  
  
  (method override (component-get-categorized-addable-classes component)
    (list
      (list
        (reference Toolbox-Group)
        (reference Toolbox-Module))
      (list
        (reference Toolbox-Model)
        (reference Toolbox-Form)))))))
