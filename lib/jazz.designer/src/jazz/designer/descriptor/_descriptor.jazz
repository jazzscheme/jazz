;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Descriptors
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.designer.descriptor jazz


(import (jazz.designer)
        (jazz.jml)
        (jazz.library))


;;;
;;;; Class
;;;


(definition public Component-Meta-Descriptor
  (<form>
    (<Component-Descriptor>                           title: "Component Descriptor" image: {Image-Resource "Info"} name-mandatory?: #t name-unicity?: #t categorized-classes: (({Reference jazz.designer:Properties-Descriptor} {Reference jazz.designer:Children-Descriptor}))
      (<properties~>
        (<Property-Descriptor> name: title
          (<Value-Domain>      name: domain))
        (<Property-Descriptor> name: image
          (<Value-Domain>      name: domain))
        (<Property-Descriptor> name: name-prohibited?
          (<Value-Domain>      name: domain))
        (<Property-Descriptor> name: name-mandatory?
          (<Value-Domain>      name: domain))
        (<Property-Descriptor> name: name-unicity?
          (<Value-Domain>      name: domain))))))


;;;
;;;; Properties
;;;


(definition public Properties-Meta-Descriptor
  (<form>
    (<Component-Descriptor> title: "Properties Descriptor" image: {Image-Resource "OpenedFolder"} name-mandatory?: #t name-unicity?: #t)))


;;;
;;;; Property
;;;


(definition public Property-Meta-Descriptor
  (<form>
    (<Component-Descriptor>                title: "Property Descriptor" image: {Image-Resource "Slot"} name-mandatory?: #t name-unicity?: #t
      (<properties~>
        (<Property-Descriptor> name: title
          (<Value-Domain>      name: domain))))))


;;;
;;;; Children
;;;


(definition public Children-Meta-Descriptor
  (<form>
    (<Component-Descriptor> title: "Children Descriptor"))))
