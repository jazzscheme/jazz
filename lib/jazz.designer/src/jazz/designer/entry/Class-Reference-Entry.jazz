(module jazz.designer.entry.Class-Reference-Entry jazz


(import (jazz.designer)
        (jazz.graphic)
        (jazz.jml)
        (jazz.library)
        (jazz.runtime)
        (jazz.ui)
        (jazz.ui.view))


(definition (runtime-reference->reference runtime-reference)
  (let ((ref (new Reference #f)))
    (setup-context~ ref (new Environment #f (lambda (sym) runtime-reference)))
    ref))


(class Class-Combo extends Combo-Box
  
  
  (slot reference initialize #f getter generate)
  (slot classes   initialize #f accessors generate)
  
  
  (form
    (<install> kind: choose))

  
  (method public (set-reference reference)
    (set! reference~self reference)
    (set-string-content~ (locate 'body) (present~ (get-domain~ parent) reference)))
  
  
  (method (initialize-manager host manager)
    (when reference
      (bind (unit symbol) (parse-runtime-reference reference)
        (setup~ manager unit symbol))))
  
  
  (method override (button-action)
    (bind (symbol unit) (get-modal Class-Dialog-Toolbox initialize: initialize-manager references: (map runtime-reference->reference classes))
      (set-reference (deserialize-runtime-reference (list 'module-public unit symbol)))
      (set-modified? #t))))


(class Class-Reference-Entry extends Property-Entry
  
  
  (property classes initialize #f accessors generate)
  
  
  (form
    (<install>                   layout-type: border background: {Color White}
      (<Class-Combo> name: combo selectable?: #t location: center
        (<!>         name: body  left-padding: 0 top-padding: 1))))
  
  
  (method override (finish rest)
    (nextmethod rest)
    (set-classes~ (locate 'combo) classes))
  
  
  (method override (tab-view)
    (locate '(combo body)))
  
  
  (method override (get-value)
    (get-reference~ (locate 'combo)))
  
  
  (method override (set-value value)
    (set-reference~ (locate 'combo) value))
  
  
  (method override (get-imports)
    (list (get-import~ (locate 'combo))))
  
  
  (method override (get-modified?)
    (get-modified?~ (locate 'combo)))
  
  
  (method override (set-modified? value)
    (set-modified?~ (locate 'combo) value))
  
  
  (method override (set-editable? value)
    (set-editable?~ (locate 'combo) value))))
