;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Property Moniker
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.designer.moniker.Property-Moniker jazz


(import (jazz.designer)
        (jazz.io))


(class undocumented Property-Moniker extends Moniker
  
  
  ;; Keeping the reference is a simple solution to the problem of search results surviving a document
  ;; that gets closed after a search was done on it. The best solution would be to keep a moniker on
  ;; either the pathname of the document or the window if it unsaved. But the unsaved case is not nice
  ;; if the user then double-clicks on one of these results, so for now a simple solution will do...
  
  
  (slot protected designer  getter generate)
  (slot protected reference getter generate)
  (slot protected trait     getter generate)
  (slot protected class     getter generate)
  (slot protected path      accessors generate)
  (slot protected property)
  (slot protected image     getter generate)
  (slot protected presented)
  (slot protected location  getter generate)
  (slot protected extension)
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a} {a}" path property))))
  

  (method override (compare-object self target)
    (cond ((is-not? target (class-of self))
           :incompatible)
          ((and (eq? designer (get-designer target))
                (eq? trait (get-trait target))
                (= path (get-path target))
                (= property (get-property target)))
           :equal)
          (else
           :not-equal)))
  
  
  (method override (compare-pathname self object)
    (eq? (compare-object self object) :equal))
  
  
  ;;;
  ;;;; Initialization
  ;;;
  
  
  (method override (initialize self designer reference trait class path property image presented location extension)
    (nextmethod self)
    (set! self.designer designer)
    (set! self.reference reference)
    (set! self.trait trait)
    (set! self.class class)
    (set! self.path path)
    (set! self.property property)
    (set! self.image image)
    (set! self.presented presented)
    (set! self.location location)
    (set! self.extension extension))
  
  
  ;;;
  ;;;; Property
  ;;;
  
  
  (method public (get-component-name self)
    (get-name designer path trait: trait))
  
  
  (method public (get-component-property self property)
    (get-property designer path property trait: trait))
  
  
  (method public (set-component-property self property value)
    (set-property designer path property value trait: trait))
  
  
  ;;;
  ;;;; Moniker
  ;;;
  
  
  (method override (get-writable? self)
    #t)
  
  
  (method override (exists? self)
    #t)
  
  
  (method override (get-base self)
    presented)


  (method override (get-file self)
    #f)
  
  
  (method override (get-name self)
    presented)
  
  
  (method override (get-extension self)
    extension)
  
  
  (method override (get-modification-time self)
    #f)
  
  
  (method override (present self)
    (format "{a} {a}" path property))
  
  
  (method override (present-base self)
    presented)
  
  
  (method override (present-location self)
    (join location " "))
  
  
  (method override (load-lines self . rest)
    @convert
    (JzLoadLines (get-component-property property)))


  (method override (save-lines self lines . rest)
    (set-component-property self property (join-lines lines)))))
