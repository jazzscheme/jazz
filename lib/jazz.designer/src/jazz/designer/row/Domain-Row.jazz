;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Domain Row
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.designer.row.Domain-Row jazz


(import (jazz.designer)
        (jazz.graphic)
        (jazz.ui))


(class undocumented Domain-Row extends Value-Row
  
  
  (property domain initialize {} accessors generate)
  
  
  ;;;
  ;;;; Presentation
  ;;;
  
  
  (method override (present value)
    )
  
  
  ;;;
  ;;;; Edition
  ;;;
  
  
  (method override (new-editor)
    (let ((editor (new Domain-Editor value-row: self)))
      ))
  
  
  @convert-and-what-are-colors-doing-here???
  (method (editor-class)
    Color-Row-Editor)
  
  
  (method override (get-edited-value)
    (let ((content (get-string-content~ (locate~ editor 'body))))
      (parse-string~ Color content)))
  
  
  (method override (set-edited-value value)
    (set-string-content~ (locate~ editor 'body) (present value))
    (set-background~ (locate~ editor 'color) value))
  
  
  (method override (get-edited-modified?)
    (get-modified?~ (get-controller~ (locate~ editor 'body))))
  
  
  (method override (set-edited-modified? flag)
    (set-modified?~ (get-controller~ (locate~ editor 'body)) flag))
  
  
  (method override (show-cursor)
    (show-text-cursor~ (locate~ editor 'body)))
  
  
  (method override (focused-editor)
    (locate~ editor 'body)))


;;;
;;;; Editor
;;;


(class Domain-Editor extends Layout-View
  
  
  (property value-row initialize {} getter get-value-row setter set-value-row)
  
  
  (method public (get-value-row)
    value-row)
  
  
  (method public (set-value-row value)
    (set! value-row value)
    @w
    (set-value-row~ (locate 'body) value-row))))
