;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Text Row
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.designer.row.Text-Row jazz


(import (jazz.designer)
        (jazz.ui))


(class undocumented Text-Row extends Value-Row
  
  
  ;;;
  ;;;; Presentation
  ;;;
  
  
  (method override (present value)
    (if (not value)
        "{}"
      (if (is? value Text)
          (first (get-paragraphs~ value))
        (format "{a} (...)" (car value)))))
  
  
  ;;;
  ;;;; Value
  ;;;
  
  
  (method override (get-edited-value)
    (get-content~ editor))
  
  
  (method override (get-edited-modified?)
    (get-modified?~ (get-controller~ editor)))
  
  
  ;;;
  ;;;; Editor
  ;;;
  
  
  (method override (edit)
    (edit-in-row)
    (set-content~ editor value)
    (set-visible?~ editor #t))
  
  
  (method override (close-editor)
    (close-in-row-editor))
  
  
  (method override (select-editor)
    (focus-editor))
  
  
  (method override (focus-editor . rest)
    (acquire-focus~ editor))
  
  
  (method override (editor-height)
    200)
  
  
  (method override (new-editor)
    (new (editor-class)
      left-padding: 0))
  
  
  (method override (editor-class)
    Row-Text-View)
  
  
  (method override (update value)
    (set-value value)
    (let ((tree (get-tree))
          (data (second (get-children))))
      (set-property-modified? #t)
      (set-title~ data (present value))
      (invalidate-cell~ tree (new Cell (row-rank~ tree self) 1))))
  
  
  (method override (in-edition?)
    (> (cardinality (get-sons)) 0))))
