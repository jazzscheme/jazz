;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Text-View Surrogate
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.designer.surrogate.Text-View-Surrogate jazz


(import (jazz.designer))


(class undocumented Text-View-Surrogate extends View-Surrogate
  
  
  (slot edit? initialize #f)


  ;;;
  ;;;; Edit
  ;;;
  
  
  (method override (editing?)
    edit?)
  
  
  (method (start-edit)
    (set! edit? #t)
    (invalidate-view~ client))
  
  
  (method (stop-edit)
    (set! edit? #f)
    (invalidate-view~ client))


  ;;;
  ;;;; Focus
  ;;;
  
  
  (method override (focus-gained)
    (if (editing?)
        (focus-gained~ client)
      (nextmethod)))
  
  
  (method override (focus-lose)
    (if (editing?)
        (begin
          (focus-lose~ client)
          (stop-edit))
      (nextmethod)))


  ;;;
  ;;;; Cursor
  ;;;
  
  
  (method override (cursor-update pos)
    (if (editing?)
        (cursor-update~ client pos)
      (nextmethod pos)))


  ;;;
  ;;;; Mouse
  ;;;
  
  
  (method override (mouse-down pos)
    (if (editing?)
        (begin
          (when (select?)
            (select-in-editor))
          (mouse-down~ client pos))
      (nextmethod pos)))
  
  
  (method override (mouse-up pos)
    (if (editing?)
        (mouse-up~ client pos)
      (nextmethod pos)))
  
  
  (method override (drag-move pos)
    (if (editing?)
        (drag-move~ client pos)
      (nextmethod pos)))
  
  
  (method override (drag-up pos . rest)
    (if (editing?)
        (apply (~ drag-up client) pos rest)
      (apply nextmethod pos rest)))
  
  
  (method override (double-click pos)
    (if (editing?)
        (double-click~ client pos)
      (start-edit)))


  (method override (context-menu pos)
    (if (editing?)
        (context-menu~ client pos)
      (nextmethod pos)))


  ;;;
  ;;;; Keyboard
  ;;;
  
  
  (method override (key-press key)
    (if (editing?)
        (key-press~ client key)
      (nextmethod key)))
  
  
  (method override (return-press key)
    (if (editing?)
        (return-press~ client key)
      (start-edit)))))
