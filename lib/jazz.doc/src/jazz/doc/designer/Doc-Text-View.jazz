;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Doc Text View
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.doc.designer.Doc-Text-View jazz


(import (jazz.action)
        (jazz.designer)
        (jazz.graphic)
        (jazz.jml)
        (jazz.text))


(class Doc-Text-View extends Row-Formatted-Text-View
  
  
  (form
    (<install> left-padding: 4 base-style: {Text-Style font: {Font Text}}))
  
  
  (method override (install self rest)
    (nextmethod self rest)
    ;; Screen Formats
    (add-format self 'Heading1 {Format Base})
    (add-format self 'Heading2 {Format Base})
    (add-format self 'Heading3 {Format Base})
    (add-format self 'Heading4 {Format Base})
    ;; Screen Styles
    (add-style self 'Heading1  {Text-Style Base font: {Font Heading1}})
    (add-style self 'Heading2  {Text-Style Base font: {Font Heading2}})
    (add-style self 'Heading3  {Text-Style Base font: {Font Heading3}})
    (add-style self 'Heading4  {Text-Style Base font: {Font Heading4}})
    (add-style self 'Title     {Text-Style Base color: {Color Dark-Red}})
    (add-style self 'Comment   {Text-Style Base color: {Color Purple}})
    (add-style self 'Reference {Text-Style Base font: {Font Link} color: {Color Dark-Blue}})
    (add-style self 'Link      {Text-Style Base font: {Font Link} color: {Color Dark-Blue}})
    (add-style self 'Code      {Text-Style Base font: {Font Code} color: {Color Dark-Red}})
    (add-style self 'Variable  {Text-Style Code color: {Color Dark-Red}}))


  ;;;
  ;;;; Actions
  ;;;
  

  (method override (focus-actions self)
    (cons (find-actions 'doc-text)
          (nextmethod self)))


  ;;;
  ;;;; Events
  ;;;
  
  
  (method override (get-context-menu self)
    #f)
  
  
  (method (on-parameter self evt)
    (if (empty-selection? self)
        (begin
          (insert-string self "{parameter }")
          (set-caret self (- (get-start self) 1)))
      (let ((start (copy (get-start self)))
            (end (copy (get-end self))))
        (set-caret self end)
        (insert-string self "}")
        (set-caret self start)
        (insert-string self "{parameter ")
        (set-caret self (+ end 12)))))))
