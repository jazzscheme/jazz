;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; CLike Text Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.editor.clike.text.CLike-Text-Preferences jazz


(import (jazz.designer)
        (jazz.jml)
        (jazz.library)
        (jazz.ui))


(class CLike-Text-Preferences extends Code-Text-Preferences


  (property title-color            initialize {}  accessors generate)
  (property definition-color       initialize {}  accessors generate)
  (property line-comment-color     initialize {}  accessors generate)
  (property balanced-comment-color initialize {}  accessors generate)
  (property keyword-color          initialize {}  accessors generate)
  (property profile-macro-color    initialize {}  accessors generate)
  (property profile-keyword-color  initialize {}  accessors generate)
  (property profile-type-color     initialize {}  accessors generate)
  (property macros                 initialize '() accessors generate)
  (property keywords               initialize '() accessors generate)
  (property types                  initialize '() accessors generate)
  (property completions            initialize '() accessors generate)
  
  
  (form
    (<install> title: "C Text"))


  ;;;
  ;;;; Designer
  ;;;
  
  
  (method (get-categorized-properties)
    '(macros keywords types completions
      title-color definition-color line-comment-color balanced-comment-color keyword-color profile-keyword-color profile-macro-color profile-type-color))
  
  
  (method (get-row-instance property)
    (case (field-name property)
      ((title-color definition-color line-comment-color balanced-comment-color keyword-color profile-keyword-color profile-macro-color profile-type-color) (new Color-Row))
      ((macros keywords types) (new Macro/Keyword/Type-List-Row))
      ((completions) (new Completion-List-Row))
      (else (nextmethod property)))))


;;;
;;;; Macro/Keyword/Type-List-Row
;;;


(class Macro/Keyword/Type-List-Row extends List-Row
  
  
  (method (get-subrow-class)
    Macro/Keyword/Type-Row))


;;;
;;;; Macro/Keyword/Type-Row
;;;


(class Macro/Keyword/Type-Row extends Value-Row
  
  
  ))
