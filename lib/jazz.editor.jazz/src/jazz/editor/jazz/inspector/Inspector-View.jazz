;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Inspector View
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.editor.jazz.inspector.Inspector-View jazz


(import (jazz.editor.jazz)
        (jazz.jml)
        (jazz.library)
        (jazz.ui))


(class Inspector-View extends Layout-View
  
  
  (property process initialize {} getter get-process setter set-process)
  (property client  initialize {} getter get-client  setter set-client)


  (form
    (<install>                                    layout-type: fill
      (<Scroller-View>                            vscroll?: #t hscroll?: #t flat?: #t
        (<!>               name: content          layout-type: fill
          (<Tree-Header>                          flat?: #t
            (<!>           name: content
              (<Inspector> name: inspector        selection-mode: row
                (<!>       name: name             width: 170)
                (<!>       name: value            width: 261))))))))
    
  
  ;;;
  ;;;; Host
  ;;;
  
  
  (method meta (host-title)
    "Inspector")
  
  
  (method meta (host-position)
    {Point 378 60})
  
  
  (method meta (host-size)
    {Dimension 446 641})

  
  ;;;
  ;;;; Access
  ;;;


  (method public (get-process)
    (get-process~ (locate 'inspector)))


  (method public (set-process process)
    (set-process~ (locate 'inspector) process))


  (method public (get-client)
    (get-client~ (locate 'inspector)))


  (method public (set-client client)
    (update-title client)
    (set-client~ (locate 'inspector) client))

  
  ;;;
  ;;;; Update
  ;;;
  
  
  (definition Max-Title
    50)
  
  
  (method (update-title client)
    (let ((title (format "Inspector for {a}" (car client))))
      (if (< (cardinality title) Max-Title)
          (set-title title)
        (set-title (format "{a} ..." (subseq title 0 Max-Title))))))))
