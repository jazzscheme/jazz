;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Logs Manager
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.editor.jazz.log.Logs-Manager jazz


(import (jazz.debuggee.ui)
        (jazz.debuggee.view)
        (jazz.handler)
        (jazz.layout)
        (jazz.markup)
        (jazz.resource)
        (jazz.ui))


(class undocumented Logs-Manager extends Navigable-Results


  (form
    (<install>
      (<!>           name: tools
        (<Push-Tool> name: open     size: {Dimension 22 22} before: edit tooltip?: #t tooltip-text: "Open..." resource: {Image-Resource "Open"} portfolio: :images action-handler: {Event-Handler :guest on-open})
        (<Separator>                size: {Dimension 10 0} before: edit)
        (<!>         name: edit     resource: {Image-Resource "Edit"})
        @wait
        (<Separator>                size: {Dimension 6 0} location: tail)
        @wait
        (<Push-Tool> name: clear    size: {Dimension 22 22} location: tail tooltip?: #t tooltip-text: "Clear" resource: {Image-Resource "Clear"} portfolio: :images action-handler: {Event-Handler :guest on-clear})
        (<Separator>                size: {Dimension 2 0} location: tail)
        (<Push-Tool> name: refresh  size: {Dimension 22 22} location: tail tooltip?: #t tooltip-text: "Refresh" resource: {Image-Resource "Refresh"} portfolio: :images action-handler: {Event-Handler :guest on-refresh}))))
  
  
  (method meta override (external-name self . rest)
    'Logs)
  
  
  (method override (form-model self form)
    (case (get-name form)
      ((results) Log-Tree)
      (else (nextmethod self form))))

  
  ;;;
  ;;;; Host
  ;;;
  
  
  (method meta override (host-icon self)
    {Image-Resource "Script"})
  
  
  (method meta override (host-title self)
    "Logs")

  
  ;;;
  ;;;; Input / Output
  ;;;
  
  
  (method package (open-log self file)
    (open-log-file (get-tree self) file))

  
  ;;;
  ;;;; Edit
  ;;;
  

  (method override (edit-selection self select)
    (edit-selection (get-tree self)))

  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method package (on-open self evt)
    (on-open (get-tree self) evt))
  
  
  (method package (on-edit self evt)
    (on-edit (get-tree self) evt))


  (method package (on-clear self evt)
    (on-clear (get-tree self) evt))
  
  
  (method package (on-refresh self evt)
    (on-refresh (get-tree self) evt))))
