;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Jazz Text Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.editor.jazz.text.Jazz-Text-Preferences jazz


(import (jazz.designer)
        (jazz.editor.jazz)
        (jazz.editor.lisp)
        (jazz.graphic)
        (jazz.jml)
        (jazz.locale)
        (jazz.ui))


(class Jazz-Text-Preferences extends Lisp-Text-Preferences


  (property named-comment-style            initialize {} accessors generate)
  (property documented-declaration-style   initialize {} accessors generate)
  (property undocumented-declaration-style initialize {} accessors generate)
  (property literal-style                  initialize {} accessors generate)
  
  
  (form
    (<install>
      title: "Jazz Text"
      title-style:                    {Text-Style-Preference color: Dark-Red}
      comment-style:                  {Text-Style-Preference color: Purple}
      expr-comment-style:             {Text-Style-Preference color: Text-Gray}
      named-comment-style:            {Text-Style-Preference color: Text-Gray}
      declaration-keyword-style:      {Text-Style-Preference color: Dark-Blue}
      documented-declaration-style:   {Text-Style-Preference color: Dark-Green}
      undocumented-declaration-style: {Text-Style-Preference color: Dark-Green}
      keyword-style:                  {Text-Style-Preference color: Dark-Blue}
      tag-style:                      {Text-Style-Preference color: Dark-Purple}
      specifier-style:                {Text-Style-Preference color: Text-Gray}
      literal-style:                  {Text-Style-Preference color: Ochre}
      char-style:                     {Text-Style-Preference color: Ochre}
      number-style:                   {Text-Style-Preference color: Ochre}
      boolean-style:                  {Text-Style-Preference color: Ochre}
      string-style:                   {Text-Style-Preference color: Ochre}
      delimited-string-style:         {Text-Style-Preference color: Ochre}
      named-string-style:             {Text-Style-Preference color: Ochre}
      quotation-style:                {Text-Style-Preference color: Ochre}
      feature-style:                  {Text-Style-Preference color: Dark-Orange}
      completions: ((":co" . ":console")
                    (":en" . ":english")
                    (":ex" . ":expand")
                    (":fo " . ":form")
                    (":foc" . ":focus")
                    (":fr" . ":french")
                    (":pa" . ":parent")
                    (":se" . ":self")
                    ("<i" . "<in>")
                    ("<o" . "<out>")
                    ("App" . "Application")
                    ("Co" . "Component")
                    ("De" . "Debug")
                    ("Deb" . "Debugger")
                    ("Desi" . "Design")
                    ("Desig" . "Designer")
                    ("Di" . "Directory")
                    ("Je" . "Jedi")
                    ("Ja" . "Jazz")
                    ("Lo" . "Locales")
                    ("NU" . "NULL")
                    ("Ob" . "Object")
                    ("Ou" . "Outline")
                    ("Pr" . "Process")
                    ("Pro" . "Project")
                    ("Prop" . "Property")
                    ("Prope" . "Properties")
                    ("Re" . "Remote")
                    ("Reg" . "Register")
                    ("Rem" . "Remotable")
                    ("Rep" . "Repository")
                    ("Repo" . "Repositories")
                    ("Res" . "Resource")
                    ("Sc" . "Scheme")
                    ("Se" . "Search")
                    ("Set" . "Setup")
                    ("So" . "Socket")
                    ("St" . "State")
                    ("Te" . "Text")
                    ("Tex" . "Text-View")
                    ("Tr" . "Tree")
                    ("Vi" . "View")
                    ("Wi" . "Window")
                    ("ab" . "abstract")
                    ("acc" . "accessors")
                    ("as" . "assert")
                    ("ass" . "assertion")
                    ("att" . "attribute")
                    ("attr" . "attributes")
                    ("be" . "begin")
                    ("bu" . "build")
                    ("ch" . "chained")
                    ("chi" . "child")
                    ("chil" . "children")
                    ("cl" . "class")
                    ("cla" . "class-of")
                    ("co" . "console")
                    ("con" . "constant")
                    ("conti" . "continuation")
                    ("de" . "debug")
                    ("deb" . "debuggee")
                    ("debu" . "debugger")
                    ("dec" . "declare")
                    ("decr" . "decrease!")
                    ("def" . "define")
                    ("defi" . "definition")
                    ("defin" . "define-syntax")
                    ("des" . "design")
                    ("ei" . "either")
                    ("el" . "else")
                    ("es" . "essay")
                    ("ex" . "export")
                    ("ext" . "extends")
                    ("fo" . "format")
                    ("form" . "form")
                    ("gen" . "generic")
                    ("gene" . "generate")
                    ("ge" . "get")
                    ("get-a" . "get-application")
                    ("get-ch" . "get-child")
                    ("get-chi" . "get-children")
                    ("get-h" . "get-host")
                    ("get-ho" . "get-guest")
                    ("get-l" . "get-loop")
                    ("get-p" . "get-process")
                    ("get-pr" . "get-property")
                    ("set-pr" . "set-property")
                    ("set-pro" . "set-properties")
                    ("get-pro" . "get-properties")
                    ("get-pre" . "get-preferences")
                    ("gett" . "getter")
                    ("im" . "import")
                    ("imp" . "implements")
                    ("in" . "in")
                    ("inl" . "inline")
                    ("incr" . "increase!")
                    ("ini" . "initialize")
                    ("inte" . "interface")
                    ("irr" . "irregex")
                    ("ja" . "jazz")
                    ("la" . "lambda")
                    ("le" . "length")
                    ("let" . "let")
                    ("li" . "list")
                    ("lo" . "loop")
                    ("loc" . "locate")
                    ("loca" . "localize")
                    ("ma" . "macro")
                    ("me" . "method")
                    ("meta" . "meta")
                    ("mes" . "message-box")
                    ("mo" . "module")
                    ("na" . "native")
                    ("ne" . "nextmethod")
                    ("nu" . "nu")
                    ("nul" . "null?")
                    ("ov" . "override")
                    ("pa" . "package")
                    ("par" . "parameterize")
                    ("pr" . "process")
                    ("pri" . "private")
                    ("prim" . "primordial")
                    ("pro" . "profile")
                    ("prop" . "property")
                    ("prope" . "properties")
                    ("prot" . "protected")
                    ("pu" . "public")
                    ("qu" . "quit")
                    ("re" . "require")
                    ("rep" . "repository")
                    ("sc" . "scheme")
                    ("sch" . "scheduler")
                    ("se" . "set!")
                    ("sel" . "self")
                    ("sett" . "setter")
                    ("si" . "signal")
                    ("sin" . "singleton")
                    ("sl" . "slot")
                    ("spe" . "specific")
                    ("sub" . "substitution")
                    ("syn" . "syntax-rules")
                    ("te" . "test")
                    ("tem" . "template")
                    ("ter" . "terminal")
                    ("th" . "thunk")
                    ("un" . "unless")
                    ("user" . "user-message")
                    ("va" . "values")
                    ("vi" . "virtual")
                    ("wh" . "when")
                    ("wi" . "with")
                    ("#t" . "#t")
                    ("#f" . "#f")
                    (">>" . ">>")
                    ("<<" . "<<"))))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Jazz-Text-Preferences-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer))


(class Jazz-Text-Preferences-Descriptor extends Document-Preferences-Descriptor

  
  (method override (component-get-categorized-properties component)
    '(completions title-style comment-style expr-comment-style named-comment-style documented-declaration-style undocumented-declaration-style keyword-style specifier-style string-style translate-keys? match-action))
  
  
  (method override (class-get-domain class property)
    (case (field-name property)
      @wait
      ((title-style comment-style expr-comment-style named-comment-style documented-declaration-style undocumented-declaration-style keyword-style specifier-style string-style) (new Style-Row))
      ((completions) (new Completion-List-Domain))
      ((translate-keys?) (new Boolean-Domain))
      (else (nextmethod class property)))))))
