;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Python Text View
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.editor.python.text.Python-Text-View jazz


(import (jazz.action)
        (jazz.application)
        (jazz.clipboard)
        (jazz.editor)
        (jazz.editor.clike)
        (jazz.editor.python)
        (jazz.feedback)
        (jazz.ide)
        (jazz.locale)
        (jazz.markup)
        (jazz.menu)
        (jazz.preferences)
        (jazz.resource)
        (jazz.text))


(class Python-Text-View extends CLike-Text-View
  
  
  (method meta override (external-name self . rest)
    'python)
  
  
  (method override (preferences self)
    (current-preferences '(documents python-text)))
  
  
  (method override (new-syntax self)
    (new Python-Syntax model))

  
  ;;;
  ;;;; Save
  ;;;
  
  
  (method override (save-content self moniker)
    (nextmethod self moniker)
    (let ((pref (current-preferences 'catalog error?: false)))
      (when (and pref (get-recolorize-on-save? pref))
        (recolorize-syntax self))))

  
  ;;;
  ;;;; Chapters
  ;;;
  
  
  (method override (get-first-special? self)
    #f)

  
  ;;;
  ;;;; Highlights
  ;;;
  
  
  (method public (highlight-reference self direction range search-result)
    (select-command-highlight (current-application) direction range search-result self))
    
  
  ;;;
  ;;;; Menu
  ;;;
  
  
  (method override (get-context-menu self)
    (new Python-Text-Menu)))


(class Python-Text-Menu extends Context-Menu
  
  
  (form
    (<install>
      (<Label-Item>     name: cut               title: {Locales english: "Cut" french: "Couper"} icon: {Image-Resource "Cut"} action-handler: {Action view cut})
      (<Label-Item>     name: copy              title: {Locales english: "Copy" french: "Copier"} icon: {Image-Resource "Copy"} action-handler: {Action view copy})
      (<Label-Item>     name: paste             title: {Locales english: "Paste" french: "Coller"} icon: {Image-Resource "Paste"} action-handler: {Action view paste})
      (<Separator-Item>)
      (<Label-Item>                             title: "Column"
        (<Column-Menu>))
      (<Label-Item>                             title: "Format"
        (<Format-Menu>))))))
