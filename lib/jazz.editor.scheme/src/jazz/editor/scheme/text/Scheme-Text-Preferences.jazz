;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Scheme Text Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.editor.scheme.text.Scheme-Text-Preferences jazz


(import (jazz.editor.lisp)
        (jazz.jml)
        (jazz.ui))


(class Scheme-Text-Preferences extends Lisp-Text-Preferences
  
  
  (form
    (<install>
      title: "Scheme Text"
      completions: (("be" . "begin")
                    ("co" . "compile")
                    ("de" . "debug")
                    ("deb" . "debugger")
                    ("def" . "define")
                    ("defin" . "define-syntax")
                    ("el" . "else")
                    ("ex" . "export")
                    ("im" . "import")
                    ("la" . "lambda")
                    ("le" . "length")
                    ("let" . "let")
                    ("li" . "list")
                    ("na" . "native")
                    ("nu" . "not")
                    ("par" . "parameterize")
                    ("re" . "require")
                    ("syn" . "syntax-rules")
                    ("va" . "values")
                    ("#t" . "#t")
                    ("#f" . "#f"))))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Scheme-Text-Preferences-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer))


(class Scheme-Text-Preferences-Descriptor extends Document-Preferences-Descriptor
  
  
  (form
    (<install>
      (<properties~> categorized: (completions title-style comment-style expr-comment-style declaration-style keyword-style translate-keys? match-action)))))))
