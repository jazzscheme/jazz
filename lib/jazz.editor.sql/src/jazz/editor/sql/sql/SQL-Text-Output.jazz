;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; SQL Text Output
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.editor.sql.sql.SQL-Text-Output jazz


(import (jazz.editor.sql)
        (jazz.editor.sql.view)
        (jazz.handler)
        (jazz.markup)
        (jazz.resource)
        (jazz.text)
        (jazz.ui))


(class SQL-Text-Output extends Layout-View


  (form
    (<install>                                   size: {Dimension 650 400} layout-type: border
      (<Layout-View>              name: tools
        (<Push-Tool>              name: clear    size: {Dimension 22 22} location: tail tooltip?: #t tooltip-text: "Clear" resource: {Image-Resource "Clear"} portfolio: :images action-handler: {Event-Handler :guest on-clear}))
      (<Scroller-View>            name: scroller location: center vscroll?: #t hscroll?: #t style: tool
        (<!>                      name: content
          (<SQL-Output-Text-View> name: text)))))
               
  
  (method meta override (external-name self . rest)
    'SQL-Text-Output)

  
  ;;;
  ;;;; Host
  ;;;
  
  
  (method meta override (host-icon self)
    {Image-Resource "Info"})
  
  
  (method meta override (host-title self)
    "Text Output")

  
  ;;;
  ;;;; Docked
  ;;;
  
  
  (method override (get-tools-view self)
    (locate self 'tools))
  
  
  (method override (focus-default self)
    (let ((text (get-text self)))
      (acquire-focus text)))
  
  
  ;;;
  ;;;; Access
  ;;;

  
  (method public (get-text self)
    (locate self 'text))
  
  
  ;;;
  ;;;; Edition
  ;;;


  (method override (delete-selection self)
    (let ((text (get-text self)))
      (clear-all text)))
  
  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method package (on-clear self evt)
    (let ((console (get-sql-console-text)))
      (clear-table console)))))
