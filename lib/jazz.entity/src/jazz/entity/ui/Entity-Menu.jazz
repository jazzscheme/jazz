;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Entity Menu
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.entity.ui.Entity-Menu jazz


(import (jazz.action)
        (jazz.entity)
        (jazz.handler)
        (jazz.locale)
        (jazz.markup)
        (jazz.menu)
        (jazz.resource))


(class undocumented Entity-Menu extends Context-Menu

  
  (form
    (<install>
      (<Label-Item>     name: add-item          title: "Add" icon: {Image-Resource "Add"}
        (<Add-Menu>     name: add-menu))
      (<Separator-Item> name: end-add-group)
      (<Label-Item>     name: cut               title: "Cut" icon: {Image-Resource "Cut"} action-handler: {Action view cut})
      (<Label-Item>     name: copy              title: "Copy" icon: {Image-Resource "Copy"} action-handler: {Action view copy})
      (<Label-Item>     name: paste             title: "Paste" icon: {Image-Resource "Paste"} action-handler: {Action view paste})
      (<Separator-Item> name: end-edit-group)
      (<Label-Item>     name: delete-selection  title: "Delete" icon: {Image-Resource "Remove"} action-handler: {Action view delete})
      (<Label-Item>     name: rename-selection  title: "Rename" action-handler: {Action components-tree rename})
      (<Separator-Item> name: before-properties)
      (<Label-Item>     name: properties        title: "Properties" action-handler: {Action components-tree properties})))
  
  
  (method override (finish self rest)
    (nextmethod self rest)
    (update-menu client self)))


;;;
;;;; Add-Menu
;;;


(class Add-Menu extends Context-Menu
  
  
  (method package (add-entities self client)
    (with-update-locked self
      (lambda ()
        (let ((factories (get-factories client)))
          (for-each (lambda (factory)
                      (if (null? factory)
                          (new Separator-Item parent: self)
                        (let ((icon (get-factory-image factory))
                              (title (format "{a}..." (localize (get-factory-presentation factory)))))
                          (new Label-Item parent: self icon: icon title: title action-handler: (new Event-Handler target: self method-name: 'on-add properties: (list client: client :factory factory))))))
                    factories)
          factories))))
  
  
  (method (on-add self evt)
    (let ((client (get-property evt client:))
          (factory (get-property evt factory:)))
      (add-entity client factory)))))
