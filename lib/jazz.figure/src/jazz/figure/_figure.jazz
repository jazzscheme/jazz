;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Figure
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.figure jazz


(hub apply-root)
(hub find-located)
(hub get-center)
(hub get-effective-position)
(hub get-effective-size)
(hub get-location)
(hub get-location-choices)
(hub get-position)
(hub get-size)
(hub move-figure)
(hub set-location)
(hub set-position)
(hub set-size)
(hub size-figure)


(import (jazz.component))


(class Figure extends Component
  
  
  (property location             initialize #f accessors explicit)
  (property position <Point>                   accessors explicit)
  (property size     <Dimension>               accessors explicit)
  
  
  (method override (initialize self . rest)
    (set! position (default-position self))
    (set! size (default-size self))
    (apply nextmethod self rest))
  
  
  ;;;
  ;;;; Location
  ;;;
  

  (method public virtual (get-location self)
    location)
  

  (method public virtual (set-location self loc)
    (set! location loc))
  
  
  (method public (find-located self location)
    (find-if (lambda (child)
               (eq? (get-location child) location))
             children))
  
  
  ;;;
  ;;;; Position
  ;;;
  
  
  (method (default-position self) <Point>
    {Point 0 0})
  

  (method public virtual (get-position self) <Point>
    position)
  
  
  (method public virtual (get-effective-position self) <Point>
    (get-position self))
  

  (method public virtual (set-position self pos <Point>) <void>
    (set! position pos))
  

  (method public (move-figure self dh <fx> dv <fx>) <void>
    (let ((pos <Point> (get-position self)))
      (set-position self (new Point (+ (get-h pos) dh) (+ (get-v pos) dv)))))
  
  
  (method public (get-center self) <Point>
    (new Point
      (+ (get-h position) (quotient (get-width size) 2))
      (+ (get-v position) (quotient (get-height size) 2))))
  
  
  (method public (get-bottom-right self) <Point>
    (new Point
      (+ (get-h position) (get-width size))
      (+ (get-v position) (get-height size))))

  
  ;;;
  ;;;; Size
  ;;;
  
  
  (method protected virtual (default-size self) <Dimension>
    {Dimension 100 100})


  (method public virtual (get-size self) <Dimension>
    size)
  
  
  (method public virtual (get-effective-size self) <Dimension>
    (get-size self))
  

  (method public virtual (set-size self sz <Dimension>) <void>
    (set! size sz))


  (method public (size-figure self dw <fx> dh <fx>) <void>
    (let ((size (get-size self)))
      (set-size self (new Dimension (+ (get-width size) dw) (+ (get-height size) dh)))))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method public virtual (get-location-choices self)
    #f)
      
  
  (method meta override (get-class-descriptor self (context: context #f))
    (new jazz.figure.descriptors:Figure-Descriptor))))
