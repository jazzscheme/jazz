;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Libgit2 Interface
;;;


(module jazz.git.interface jazz


(export (jazz.git.foreign))
(import (jazz.git.foreign))


;;;
;;;; Pull
;;;


(definition public (git-pull repo remote)
  (git-remote-fetch remote)
  (let ((upstream (git-reference-lookup repo "refs/remotes/origin/master"))
        (local (git-branch-lookup repo "master" GIT_BRANCH_LOCAL)))
    (if (and local (not (git-graph-fast-forward? repo (git-reference->id repo local) (git-reference->id repo upstream))))
        'not-fast-forward
      (if (not (git-workdir-clean? repo))
          'workdir-not-clean
        (let ((commit (git-object-lookup repo (git-reference->id repo upstream) GIT_OBJ_COMMIT)))
          (git-reset repo commit GIT_RESET_HARD))
        #f))))


;;;
;;;; Status
;;;


(definition public (git-workdir-clean? repo)
  (= 0 (git-status-for-each-stoppable repo
         (lambda (path flags)
           #t)))))
