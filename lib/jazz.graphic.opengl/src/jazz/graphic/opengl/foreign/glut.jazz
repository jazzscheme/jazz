(library protected jazz.graphic.opengl.foreign.glut jazz


(export (jazz.graphic.opengl.foreign.glut-header))
(import (jazz.graphic.opengl.foreign.glut-header)
        (jazz.platform))


(c-include "<GL/gl.h>")
(c-include "<GL/glu.h>")
(c-include "<GL/glut.h>")


;;;
;;;; os dependent macros:
;;;


(definition package GLUT_STROKE_ROMAN ((c-function () void* "___result_voidstar = GLUT_STROKE_ROMAN;")))
(definition package GLUT_STROKE_MONO_ROMAN ((c-function () void* "___result_voidstar = GLUT_STROKE_MONO_ROMAN;")))
(definition package GLUT_BITMAP_9_BY_15 ((c-function () void* "___result_voidstar = GLUT_BITMAP_9_BY_15;")))
(definition package GLUT_BITMAP_8_BY_13 ((c-function () void* "___result_voidstar = GLUT_BITMAP_8_BY_13;")))
(definition package GLUT_BITMAP_TIMES_ROMAN_10 ((c-function () void* "___result_voidstar = GLUT_BITMAP_TIMES_ROMAN_10;")))
(definition package GLUT_BITMAP_TIMES_ROMAN_24 ((c-function () void* "___result_voidstar = GLUT_BITMAP_TIMES_ROMAN_24;")))
(definition package GLUT_BITMAP_HELVETICA_10 ((c-function () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_10;")))
(definition package GLUT_BITMAP_HELVETICA_12 ((c-function () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_12;")))
(definition package GLUT_BITMAP_HELVETICA_18 ((c-function () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_18;")))


;;;
;;;; Initialization see fglut_init.c
;;;


(definition package glutInit (c-function (int* nonnull-char-string-list) void "glutInit"))
(definition package glutInitWindowPosition (c-function (int int) void "glutInitWindowPosition"))
(definition package glutInitWindowSize (c-function (int int) void "glutInitWindowSize"))
(definition package glutInitDisplayMode (c-function (unsigned-int) void "glutInitDisplayMode"))
(definition package glutInitDisplayString (c-function (char-string) void "glutInitDisplayString"))


(definition package (glut-init)
  (c-function () void
    "int argc = 0;
     glutInit(&argc, NULL);"))


;;;
;;;; Process loop see freeglut_main.c
;;;


(definition package glutMainLoop (c-function () void "glutMainLoop"))


;;;
;;;; Window management see freeglut_window.c
;;;


(definition package glutCreateWindow (c-function (char-string) int "glutCreateWindow"))
(definition package glutCreateSubWindow (c-function (int int int int int) int "glutCreateSubWindow"))
(definition package glutDestroyWindow (c-function (int) void "glutDestroyWindow"))
(definition package glutSetWindow (c-function (int) void "glutSetWindow"))
(definition package glutGetWindow (c-function () int "glutGetWindow"))
(definition package glutSetWindowTitle (c-function (char-string) void "glutSetWindowTitle"))
(definition package glutSetIconTitle (c-function (char-string) void "glutSetIconTitle"))
(definition package glutReshapeWindow (c-function (int int) void "glutReshapeWindow"))
(definition package glutPositionWindow (c-function (int int) void "glutPositionWindow"))
(definition package glutShowWindow (c-function () void "glutShowWindow"))
(definition package glutHideWindow (c-function () void "glutHideWindow"))
(definition package glutIconifyWindow (c-function () void "glutIconifyWindow"))
(definition package glutPushWindow (c-function () void "glutPushWindow"))
(definition package glutPopWindow (c-function () void "glutPopWindow"))
(definition package glutFullScreen (c-function () void "glutFullScreen"))


;;;
;;;; Display-connected see freeglut_display.c
;;;


(definition package glutPostWindowRedisplay (c-function (int) void "glutPostWindowRedisplay"))
(definition package glutPostRedisplay (c-function () void "glutPostRedisplay"))
(definition package glutSwapBuffers (c-function () void "glutSwapBuffers"))


;;;
;;;; Mouse cursor see freeglut_cursor.c
;;;


(definition package glutWarpPointer (c-function (int int) void "glutWarpPointer"))
(definition package glutSetCursor (c-function (int) void "glutSetCursor"))


;;;
;;;; Overlay see freeglut_overlay.c
;;;


(definition package glutEstablishOverlay (c-function () void "glutEstablishOverlay"))
(definition package glutRemoveOverlay (c-function () void "glutRemoveOverlay"))
(definition package glutUseLayer (c-function (GLenum) void "glutUseLayer"))
(definition package glutPostOverlayRedisplay (c-function () void "glutPostOverlayRedisplay"))
(definition package glutPostWindowOverlayRedisplay (c-function (int) void "glutPostWindowOverlayRedisplay"))
(definition package glutShowOverlay (c-function () void "glutShowOverlay"))
(definition package glutHideOverlay (c-function () void "glutHideOverlay"))


;;;
;;;; Menu see freeglut_menu.c
;;;


(definition package glutCreateMenu (c-function ((function (int) void)) int "glutCreateMenu"))
(definition package glutDestroyMenu (c-function (int) void "glutDestroyMenu"))
(definition package glutGetMenu (c-function () int "glutGetMenu"))
(definition package glutSetMenu (c-function (int) void "glutSetMenu"))
(definition package glutAddMenuEntry (c-function (char-string int) void "glutAddMenuEntry"))
(definition package glutAddSubMenu (c-function (char-string int) void "glutAddSubMenu"))
(definition package glutChangeToMenuEntry (c-function (int char-string int) void "glutChangeToMenuEntry"))
(definition package glutChangeToSubMenu (c-function (int char-string int) void "glutChangeToSubMenu"))
(definition package glutRemoveMenuItem (c-function (int) void "glutRemoveMenuItem"))
(definition package glutAttachMenu (c-function (int) void "glutAttachMenu"))
(definition package glutDetachMenu (c-function (int) void "glutDetachMenu"))


;;;
;;;; Global callback see freeglut_callbacks.c
;;;


(definition package glutTimerFunc (c-function (unsigned-int (function (int) void) int) void "glutTimerFunc"))
(definition package glutIdleFunc (c-function ((function () void)) void "glutIdleFunc"))


(c-definition (glut-timer-callback value) (int) void "glut_timer_callback" ""
  (*glut-timer-callback* value))

(definition package *glut-timer-callback*
  #f)

(definition package (glut-timer-callback-set! wait proc value)
  (cond (proc
          (set! *glut-timer-callback* proc)
          (glutTimerFunc wait glut-timer-callback value))
        (else
          (glutTimerFunc 0 #f 0)
          (set! *glut-timer-callback* #f))))


(c-definition (glut-idle-callback) () void "glut_idle_callback" ""
  (*glut-idle-callback*))

(definition package *glut-idle-callback*
  #f)

(definition package (glut-idle-callback-set! proc)
  (cond (proc
          (set! *glut-idle-callback* proc)
          (glutIdleFunc glut-idle-callback))
        (else
          (glutIdleFunc #f)
          (set! *glut-idle-callback* #f))))


;;;
;;;; Window-specific callback see freeglut_callbacks.c
;;;


(definition package glutKeyboardFunc (c-function ((function (unsigned-char int int) void)) void "glutKeyboardFunc"))
(definition package glutSpecialFunc (c-function ((function (int int int) void)) void "glutSpecialFunc"))
(definition package glutReshapeFunc (c-function ((function (int int) void)) void "glutReshapeFunc"))
(definition package glutVisibilityFunc (c-function ((function (int) void)) void "glutVisibilityFunc"))
(definition package glutDisplayFunc (c-function ((function () void)) void "glutDisplayFunc"))
(definition package glutMouseFunc (c-function ((function (int int int int) void)) void "glutMouseFunc"))
(definition package glutMotionFunc (c-function ((function (int int) void)) void "glutMotionFunc"))
(definition package glutPassiveMotionFunc (c-function ((function (int int) void)) void "glutPassiveMotionFunc"))
(definition package glutEntryFunc (c-function ((function (int) void)) void "glutEntryFunc"))

(definition package glutKeyboardUpFunc (c-function ((function (unsigned-char int int) void)) void "glutKeyboardUpFunc"))
(definition package glutSpecialUpFunc (c-function ((function (int int int) void)) void "glutSpecialUpFunc"))
(definition package glutJoystickFunc (c-function ((function (unsigned-int int int int) void) int) void "glutJoystickFunc"))
(definition package glutMenuStateFunc (c-function ((function (int) void)) void "glutMenuStateFunc"))
(definition package glutMenuStatusFunc (c-function ((function (int int int) void)) void "glutMenuStatusFunc"))
(definition package glutOverlayDisplayFunc (c-function ((function () void)) void "glutOverlayDisplayFunc"))
(definition package glutWindowStatusFunc (c-function ((function (int) void)) void "glutWindowStatusFunc"))

(definition package glutSpaceballMotionFunc (c-function ((function (int int int) void)) void "glutSpaceballMotionFunc"))
(definition package glutSpaceballRotateFunc (c-function ((function (int int int) void)) void "glutSpaceballRotateFunc"))
(definition package glutSpaceballButtonFunc (c-function ((function (int int) void)) void "glutSpaceballButtonFunc"))
(definition package glutButtonBoxFunc (c-function ((function (int int) void)) void "glutButtonBoxFunc"))
(definition package glutDialsFunc (c-function ((function (int int) void)) void "glutDialsFunc"))
(definition package glutTabletMotionFunc (c-function ((function (int int) void)) void "glutTabletMotionFunc"))
(definition package glutTabletButtonFunc (c-function ((function (int int int int) void)) void "glutTabletButtonFunc"))


(c-definition (glut-display-callback) () void "glut_display_callback" ""
  (*glut-display-callback*))

(definition package *glut-display-callback*
  #f)

(definition package (glut-display-callback-set! proc)
  (cond (proc
          (set! *glut-display-callback* proc)
          (glutDisplayFunc glut-display-callback))
        (else
          (glutDisplayFunc #f)
          (set! *glut-display-callback* #f))))


;;;
;;;; State setting and retrieval see freeglut_state.c
;;;


(definition package glutGet (c-function (GLenum) int "glutGet"))
(definition package glutDeviceGet (c-function (GLenum) int "glutDeviceGet"))
(definition package glutGetModifiers (c-function () int "glutGetModifiers"))
(definition package glutLayerGet (c-function (GLenum) int "glutLayerGet"))


;;;
;;;; Font see freeglut_font.c
;;;


(definition package glutBitmapCharacter (c-function (void* int) void "glutBitmapCharacter"))
(definition package glutBitmapWidth (c-function (void* int) int "glutBitmapWidth"))
(definition package glutStrokeCharacter (c-function (void* int) void "glutStrokeCharacter"))
(definition package glutStrokeWidth (c-function (void* int) int "glutStrokeWidth"))
(definition package glutBitmapLength (c-function (void* (pointer unsigned-char)) int "glutBitmapLength"))
(definition package glutStrokeLength (c-function (void* (pointer unsigned-char)) int "glutStrokeLength"))


;;;
;;;; Geometry see freeglut_geometry.c
;;;


(definition package glutWireCube (c-function (GLdouble) void "glutWireCube"))
(definition package glutSolidCube (c-function (GLdouble) void "glutSolidCube"))
(definition package glutWireSphere (c-function (GLdouble GLint GLint) void "glutWireSphere"))
(definition package glutSolidSphere (c-function (GLdouble GLint GLint) void "glutSolidSphere"))
(definition package glutWireCone (c-function (GLdouble GLdouble GLint GLint) void "glutWireCone"))
(definition package glutSolidCone (c-function (GLdouble GLdouble GLint GLint) void "glutSolidCone"))

(definition package glutWireTorus (c-function (GLdouble GLdouble GLint GLint) void "glutWireTorus"))
(definition package glutSolidTorus (c-function (GLdouble GLdouble GLint GLint) void "glutSolidTorus"))
(definition package glutWireDodecahedron (c-function () void "glutWireDodecahedron"))
(definition package glutSolidDodecahedron (c-function () void "glutSolidDodecahedron"))
(definition package glutWireOctahedron (c-function () void "glutWireOctahedron"))
(definition package glutSolidOctahedron (c-function () void "glutSolidOctahedron"))
(definition package glutWireTetrahedron (c-function () void "glutWireTetrahedron"))
(definition package glutSolidTetrahedron (c-function () void "glutSolidTetrahedron"))
(definition package glutWireIcosahedron (c-function () void "glutWireIcosahedron"))
(definition package glutSolidIcosahedron (c-function () void "glutSolidIcosahedron"))


;;;
;;;; Teapot rendering found in freeglut_teapot.c
;;;


(definition package glutWireTeapot (c-function (GLdouble) void "glutWireTeapot"))
(definition package glutSolidTeapot (c-function (GLdouble) void "glutSolidTeapot"))


;;;
;;;; Game mode see freeglut_gamemode.c
;;;


(definition package glutGameModeString (c-function (char-string) void "glutGameModeString"))
(definition package glutEnterGameMode (c-function () int "glutEnterGameMode"))
(definition package glutLeaveGameMode (c-function () void "glutLeaveGameMode"))
(definition package glutGameModeGet (c-function (GLenum) int "glutGameModeGet"))


;;;
;;;; Video resize see freeglut_videoresize.c
;;;


(definition package glutVideoResizeGet (c-function (GLenum) int "glutVideoResizeGet"))
(definition package glutSetupVideoResizing (c-function () void "glutSetupVideoResizing"))
(definition package glutStopVideoResizing (c-function () void "glutStopVideoResizing"))
(definition package glutVideoResize (c-function (int int int int) void "glutVideoResize"))
(definition package glutVideoPan (c-function (int int int int) void "glutVideoPan"))


;;;
;;;; Colormap see freeglut_misc.c
;;;


(definition package glutSetColor (c-function (int GLfloat GLfloat GLfloat) void "glutSetColor"))
(definition package glutGetColor (c-function (int int) GLfloat "glutGetColor"))
(definition package glutCopyColormap (c-function (int) void "glutCopyColormap"))


;;;
;;;; Misc keyboard and joystick see freeglut_misc.c
;;;


(definition package glutIgnoreKeyRepeat (c-function (int) void "glutIgnoreKeyRepeat"))
(definition package glutSetKeyRepeat (c-function (int) void "glutSetKeyRepeat"))
(definition package glutForceJoystickFunc (c-function () void "glutForceJoystickFunc"))


;;;
;;;; Misc see freeglut_misc.c
;;;


(definition package glutExtensionSupported (c-function (char-string) int "glutExtensionSupported"))
(definition package glutReportErrors (c-function () void "glutReportErrors")))
