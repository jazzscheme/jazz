(library jazz.graphic.opengl.gl jazz


(export (jazz.graphic.opengl.gl-header))
(import (jazz.graphic.opengl.gl-header))


(c-include "<GL/gl.h>")


;;;
;;;; Miscellaneous
;;;


(define glClearIndex (c-function (GLfloat) void "glClearIndex"))
(define glClearColor (c-function (GLclampf GLclampf GLclampf GLclampf) void "glClearColor"))
(define glClear (c-function (GLbitfield) void "glClear"))
(define glIndexMask (c-function (GLuint) void "glIndexMask"))
(define glColorMask (c-function (GLboolean GLboolean GLboolean GLboolean) void "glColorMask"))
(define glAlphaFunc (c-function (GLenum GLclampf) void "glAlphaFunc"))
(define glBlendFunc (c-function (GLenum GLenum) void "glBlendFunc"))
(define glLogicOp (c-function (GLenum) void "glLogicOp"))
(define glCullFace (c-function (GLenum) void "glCullFace"))
(define glFrontFace (c-function (GLenum) void "glFrontFace"))
(define glPointSize (c-function (GLfloat) void "glPointSize"))
(define glLineWidth (c-function (GLfloat) void "glLineWidth"))
(define glLineStipple (c-function (GLint GLushort) void "glLineStipple"))
(define glPolygonMode (c-function (GLenum GLenum) void "glPolygonMode"))
(define glPolygonOffset (c-function (GLfloat GLfloat) void "glPolygonOffset"))
(define glPolygonStipple (c-function (GLubyte*) void "glPolygonStipple"))
(define glGetPolygonStipple (c-function (GLubyte*) void "glGetPolygonStipple"))
(define glEdgeFlag (c-function (GLboolean) void "glEdgeFlag"))
(define glEdgeFlagv (c-function (GLboolean*) void "glEdgeFlagv"))
(define glScissor (c-function (GLint GLint GLsizei GLsizei) void "glScissor"))
(define glClipPlane (c-function (GLenum GLdouble*) void "glClipPlane"))
(define glGetClipPlane (c-function (GLenum GLdouble*) void "glGetClipPlane"))
(define glDrawBuffer (c-function (GLenum) void "glDrawBuffer"))
(define glReadBuffer (c-function (GLenum) void "glReadBuffer"))
(define glEnable (c-function (GLenum) void "glEnable"))
(define glDisable (c-function (GLenum) void "glDisable"))
(define glIsEnabled (c-function (GLenum) GLboolean "glIsEnabled"))
(define glEnableClientState (c-function (GLenum) void "glEnableClientState"))
(define glDisableClientState (c-function (GLenum) void "glDisableClientState"))
(define glGetBooleanv (c-function (GLenum GLboolean*) void "glGetBooleanv"))
(define glGetDoublev (c-function (GLenum GLdouble*) void "glGetDoublev"))
(define glGetFloatv (c-function (GLenum GLfloat*) void "glGetFloatv"))
(define glGetIntegerv (c-function (GLenum GLint*) void "glGetIntegerv"))
(define glPushAttrib (c-function (GLbitfield) void "glPushAttrib"))
(define glPopAttrib (c-function () void "glPopAttrib"))
(define glPushClientAttrib (c-function (GLbitfield) void "glPushClientAttrib"))
(define glPopClientAttrib (c-function () void "glPopClientAttrib"))
(define glRenderMode (c-function (GLenum) GLint "glRenderMode"))
(define glGetError (c-function () GLenum "glGetError"))
(define glGetString (c-function (GLenum) GLubyte* "glGetString"))
(define glFinish (c-function () void "glFinish"))
(define glFlush (c-function () void "glFlush"))
(define glHint (c-function (GLenum GLenum) void "glHint"))


;;;
;;;; Depth Buffer
;;;


(define glClearDepth (c-function (GLclampd) void "glClearDepth"))
(define glDepthFunc (c-function (GLenum) void "glDepthFunc"))
(define glDepthMask (c-function (GLboolean) void "glDepthMask"))
(define glDepthRange (c-function (GLclampd GLclampd) void "glDepthRange"))


;;;
;;;; Accumulation Buffer
;;;


(define glClearAccum (c-function (GLfloat GLfloat GLfloat GLfloat) void "glClearAccum"))
(define glAccum (c-function (GLenum GLfloat) void "glAccum"))


;;;
;;;; Transformation
;;;


(define glMatrixMode (c-function (GLenum) void "glMatrixMode"))
(define glOrtho (c-function (GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble) void "glOrtho"))
(define glFrustum (c-function (GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble) void "glFrustum"))
(define glViewport (c-function (GLint GLint GLsizei GLsizei) void "glViewport"))
(define glPushMatrix (c-function () void "glPushMatrix"))
(define glPopMatrix (c-function () void "glPopMatrix"))
(define glLoadIdentity (c-function () void "glLoadIdentity"))
(define glLoadMatrixd (c-function (GLdouble*) void "glLoadMatrixd"))
(define glLoadMatrixf (c-function (GLfloat*) void "glLoadMatrixf"))
(define glMultMatrixd (c-function (GLdouble*) void "glMultMatrixd"))
(define glMultMatrixf (c-function (GLfloat*) void "glMultMatrixf"))
(define glRotated (c-function (GLdouble GLdouble GLdouble GLdouble) void "glRotated"))
(define glRotatef (c-function (GLfloat GLfloat GLfloat GLfloat) void "glRotatef"))
(define glScaled (c-function (GLdouble GLdouble GLdouble) void "glScaled"))
(define glScalef (c-function (GLfloat GLfloat GLfloat) void "glScalef"))
(define glTranslated (c-function (GLdouble GLdouble GLdouble) void "glTranslated"))
(define glTranslatef (c-function (GLfloat GLfloat GLfloat) void "glTranslatef"))


;;;
;;;; Display Lists
;;;


(define glIsList (c-function (GLuint) GLboolean "glIsList"))
(define glDeleteLists (c-function (GLuint GLsizei) void "glDeleteLists"))
(define glGenLists (c-function (GLsizei) GLuint "glGenLists"))
(define glNewList (c-function (GLuint GLenum) void "glNewList"))
(define glEndList (c-function () void "glEndList"))
(define glCallList (c-function (GLuint) void "glCallList"))
(define glCallLists (c-function (GLsizei GLenum GLvoid*) void "glCallLists"))
(define glListBase (c-function (GLuint) void "glListBase"))


;;;
;;;; Drawing Functions
;;;


(define glBegin (c-function (GLenum) void "glBegin"))
(define glEnd (c-function () void "glEnd"))

(define glVertex2d (c-function (GLdouble GLdouble) void "glVertex2d"))
(define glVertex2f (c-function (GLfloat GLfloat) void "glVertex2f"))
(define glVertex2i (c-function (GLint GLint) void "glVertex2i"))
(define glVertex2s (c-function (GLshort GLshort) void "glVertex2s"))

(define glVertex3d (c-function (GLdouble GLdouble GLdouble) void "glVertex3d"))
(define glVertex3f (c-function (GLfloat GLfloat GLfloat) void "glVertex3f"))
(define glVertex3i (c-function (GLint GLint GLint) void "glVertex3i"))
(define glVertex3s (c-function (GLshort GLshort GLshort) void "glVertex3s"))

(define glVertex4d (c-function (GLdouble GLdouble GLdouble GLdouble) void "glVertex4d"))
(define glVertex4f (c-function (GLfloat GLfloat GLfloat GLfloat) void "glVertex4f"))
(define glVertex4i (c-function (GLint GLint GLint GLint) void "glVertex4i"))
(define glVertex4s (c-function (GLshort GLshort GLshort GLshort) void "glVertex4s"))

(define glVertex2dv (c-function (GLdouble*) void "glVertex2dv"))
(define glVertex2fv (c-function (GLfloat*) void "glVertex2fv"))
(define glVertex2iv (c-function (GLint*) void "glVertex2iv"))
(define glVertex2sv (c-function (GLshort*) void "glVertex2sv"))

(define glVertex3dv (c-function (GLdouble*) void "glVertex3dv"))
(define glVertex3fv (c-function (GLfloat*) void "glVertex3fv"))
(define glVertex3iv (c-function (GLint*) void "glVertex3iv"))
(define glVertex3sv (c-function (GLshort*) void "glVertex3sv"))

(define glVertex4dv (c-function (GLdouble*) void "glVertex4dv"))
(define glVertex4fv (c-function (GLfloat*) void "glVertex4fv"))
(define glVertex4iv (c-function (GLint*) void "glVertex4iv"))
(define glVertex4sv (c-function (GLshort*) void "glVertex4sv"))

(define glNormal3b (c-function (GLbyte GLbyte GLbyte) void "glNormal3b"))
(define glNormal3d (c-function (GLdouble GLdouble GLdouble) void "glNormal3d"))
(define glNormal3f (c-function (GLfloat GLfloat GLfloat) void "glNormal3f"))
(define glNormal3i (c-function (GLint GLint GLint) void "glNormal3i"))
(define glNormal3s (c-function (GLshort GLshort GLshort) void "glNormal3s"))

(define glNormal3bv (c-function (GLbyte*) void "glNormal3bv"))
(define glNormal3dv (c-function (GLdouble*) void "glNormal3dv"))
(define glNormal3fv (c-function (GLfloat*) void "glNormal3fv"))
(define glNormal3iv (c-function (GLint*) void "glNormal3iv"))
(define glNormal3sv (c-function (GLshort*) void "glNormal3sv"))

(define glIndexd (c-function (GLdouble) void "glIndexd"))
(define glIndexf (c-function (GLfloat) void "glIndexf"))
(define glIndexi (c-function (GLint) void "glIndexi"))
(define glIndexs (c-function (GLshort) void "glIndexs"))
(define glIndexub (c-function (GLubyte) void "glIndexub"))

(define glIndexdv (c-function (GLdouble*) void "glIndexdv"))
(define glIndexfv (c-function (GLfloat*) void "glIndexfv"))
(define glIndexiv (c-function (GLint*) void "glIndexiv"))
(define glIndexsv (c-function (GLshort*) void "glIndexsv"))
(define glIndexubv (c-function (GLubyte*) void "glIndexubv"))

(define glColor3b (c-function (GLbyte GLbyte GLbyte) void "glColor3b"))
(define glColor3d (c-function (GLdouble GLdouble GLdouble) void "glColor3d"))
(define glColor3f (c-function (GLfloat GLfloat GLfloat) void "glColor3f"))
(define glColor3i (c-function (GLint GLint GLint) void "glColor3i"))
(define glColor3s (c-function (GLshort GLshort GLshort) void "glColor3s"))
(define glColor3ub (c-function (GLubyte GLubyte GLubyte) void "glColor3ub"))
(define glColor3ui (c-function (GLuint GLuint GLuint) void "glColor3ui"))
(define glColor3us (c-function (GLushort GLushort GLushort) void "glColor3us"))

(define glColor4b (c-function (GLbyte GLbyte GLbyte GLbyte) void "glColor4b"))
(define glColor4d (c-function (GLdouble GLdouble GLdouble GLdouble) void "glColor4d"))
(define glColor4f (c-function (GLfloat GLfloat GLfloat GLfloat) void "glColor4f"))
(define glColor4i (c-function (GLint GLint GLint GLint) void "glColor4i"))
(define glColor4s (c-function (GLshort GLshort GLshort GLshort) void "glColor4s"))
(define glColor4ub (c-function (GLubyte GLubyte GLubyte GLubyte) void "glColor4ub"))
(define glColor4ui (c-function (GLuint GLuint GLuint GLuint) void "glColor4ui"))
(define glColor4us (c-function (GLushort GLushort GLushort GLushort) void "glColor4us"))

(define glColor3bv (c-function (GLbyte*) void "glColor3bv"))
(define glColor3dv (c-function (GLdouble*) void "glColor3dv"))
(define glColor3fv (c-function (GLfloat*) void "glColor3fv"))
(define glColor3iv (c-function (GLint*) void "glColor3iv"))
(define glColor3sv (c-function (GLshort*) void "glColor3sv"))
(define glColor3ubv (c-function (GLubyte*) void "glColor3ubv"))
(define glColor3uiv (c-function (GLuint*) void "glColor3uiv"))
(define glColor3usv (c-function (GLushort*) void "glColor3usv"))

(define glColor4bv (c-function (GLbyte*) void "glColor4bv"))
(define glColor4dv (c-function (GLdouble*) void "glColor4dv"))
(define glColor4fv (c-function (GLfloat*) void "glColor4fv"))
(define glColor4iv (c-function (GLint*) void "glColor4iv"))
(define glColor4sv (c-function (GLshort*) void "glColor4sv"))
(define glColor4ubv (c-function (GLubyte*) void "glColor4ubv"))
(define glColor4uiv (c-function (GLuint*) void "glColor4uiv"))
(define glColor4usv (c-function (GLushort*) void "glColor4usv"))

(define glTexCoord1d (c-function (GLdouble) void "glTexCoord1d"))
(define glTexCoord1f (c-function (GLfloat) void "glTexCoord1f"))
(define glTexCoord1i (c-function (GLint) void "glTexCoord1i"))
(define glTexCoord1s (c-function (GLshort) void "glTexCoord1s"))

(define glTexCoord2d (c-function (GLdouble GLdouble) void "glTexCoord2d"))
(define glTexCoord2f (c-function (GLfloat GLfloat) void "glTexCoord2f"))
(define glTexCoord2i (c-function (GLint GLint) void "glTexCoord2i"))
(define glTexCoord2s (c-function (GLshort GLshort) void "glTexCoord2s"))

(define glTexCoord3d (c-function (GLdouble GLdouble GLdouble) void "glTexCoord3d"))
(define glTexCoord3f (c-function (GLfloat GLfloat GLfloat) void "glTexCoord3f"))
(define glTexCoord3i (c-function (GLint GLint GLint) void "glTexCoord3i"))
(define glTexCoord3s (c-function (GLshort GLshort GLshort) void "glTexCoord3s"))

(define glTexCoord4d (c-function (GLdouble GLdouble GLdouble GLdouble) void "glTexCoord4d"))
(define glTexCoord4f (c-function (GLfloat GLfloat GLfloat GLfloat) void "glTexCoord4f"))
(define glTexCoord4i (c-function (GLint GLint GLint GLint) void "glTexCoord4i"))
(define glTexCoord4s (c-function (GLshort GLshort GLshort GLshort) void "glTexCoord4s"))

(define glTexCoord1dv (c-function (GLdouble*) void "glTexCoord1dv"))
(define glTexCoord1fv (c-function (GLfloat*) void "glTexCoord1fv"))
(define glTexCoord1iv (c-function (GLint*) void "glTexCoord1iv"))
(define glTexCoord1sv (c-function (GLshort*) void "glTexCoord1sv"))

(define glTexCoord2dv (c-function (GLdouble*) void "glTexCoord2dv"))
(define glTexCoord2fv (c-function (GLfloat*) void "glTexCoord2fv"))
(define glTexCoord2iv (c-function (GLint*) void "glTexCoord2iv"))
(define glTexCoord2sv (c-function (GLshort*) void "glTexCoord2sv"))

(define glTexCoord3dv (c-function (GLdouble*) void "glTexCoord3dv"))
(define glTexCoord3fv (c-function (GLfloat*) void "glTexCoord3fv"))
(define glTexCoord3iv (c-function (GLint*) void "glTexCoord3iv"))
(define glTexCoord3sv (c-function (GLshort*) void "glTexCoord3sv"))

(define glTexCoord4dv (c-function (GLdouble*) void "glTexCoord4dv"))
(define glTexCoord4fv (c-function (GLfloat*) void "glTexCoord4fv"))
(define glTexCoord4iv (c-function (GLint*) void "glTexCoord4iv"))
(define glTexCoord4sv (c-function (GLshort*) void "glTexCoord4sv"))

(define glRasterPos2d (c-function (GLdouble GLdouble) void "glRasterPos2d"))
(define glRasterPos2f (c-function (GLfloat GLfloat) void "glRasterPos2f"))
(define glRasterPos2i (c-function (GLint GLint) void "glRasterPos2i"))
(define glRasterPos2s (c-function (GLshort GLshort) void "glRasterPos2s"))

(define glRasterPos3d (c-function (GLdouble GLdouble GLdouble) void "glRasterPos3d"))
(define glRasterPos3f (c-function (GLfloat GLfloat GLfloat) void "glRasterPos3f"))
(define glRasterPos3i (c-function (GLint GLint GLint) void "glRasterPos3i"))
(define glRasterPos3s (c-function (GLshort GLshort GLshort) void "glRasterPos3s"))

(define glRasterPos4d (c-function (GLdouble GLdouble GLdouble GLdouble) void "glRasterPos4d"))
(define glRasterPos4f (c-function (GLfloat GLfloat GLfloat GLfloat) void "glRasterPos4f"))
(define glRasterPos4i (c-function (GLint GLint GLint GLint) void "glRasterPos4i"))
(define glRasterPos4s (c-function (GLshort GLshort GLshort GLshort) void "glRasterPos4s"))

(define glRasterPos2dv (c-function (GLdouble*) void "glRasterPos2dv"))
(define glRasterPos2fv (c-function (GLfloat*) void "glRasterPos2fv"))
(define glRasterPos2iv (c-function (GLint*) void "glRasterPos2iv"))
(define glRasterPos2sv (c-function (GLshort*) void "glRasterPos2sv"))

(define glRasterPos3dv (c-function (GLdouble*) void "glRasterPos3dv"))
(define glRasterPos3fv (c-function (GLfloat*) void "glRasterPos3fv"))
(define glRasterPos3iv (c-function (GLint*) void "glRasterPos3iv"))
(define glRasterPos3sv (c-function (GLshort*) void "glRasterPos3sv"))

(define glRasterPos4dv (c-function (GLdouble*) void "glRasterPos4dv"))
(define glRasterPos4fv (c-function (GLfloat*) void "glRasterPos4fv"))
(define glRasterPos4iv (c-function (GLint*) void "glRasterPos4iv"))
(define glRasterPos4sv (c-function (GLshort*) void "glRasterPos4sv"))

(define glRectd (c-function (GLdouble GLdouble GLdouble GLdouble) void "glRectd"))
(define glRectf (c-function (GLfloat GLfloat GLfloat GLfloat) void "glRectf"))
(define glRecti (c-function (GLint GLint GLint GLint) void "glRecti"))
(define glRects (c-function (GLshort GLshort GLshort GLshort) void "glRects"))

(define glRectdv (c-function (GLdouble* GLdouble*) void "glRectdv"))
(define glRectfv (c-function (GLfloat* GLfloat*) void "glRectfv"))
(define glRectiv (c-function (GLint* GLint*) void "glRectiv"))
(define glRectsv (c-function (GLshort* GLshort*) void "glRectsv"))


;;;
;;;; Vertex Arrays
;;;


(define glVertexPointer (c-function (GLint GLenum GLsizei GLvoid*) void "glVertexPointer"))
(define glNormalPointer (c-function (GLenum GLsizei GLvoid*) void "glNormalPointer"))
(define glColorPointer (c-function (GLint GLenum GLsizei GLvoid*) void "glColorPointer"))
(define glIndexPointer (c-function (GLenum GLsizei GLvoid*) void "glIndexPointer"))
(define glTexCoordPointer (c-function (GLint GLenum GLsizei GLvoid*) void "glTexCoordPointer"))
(define glEdgeFlagPointer (c-function (GLsizei GLvoid*) void "glEdgeFlagPointer"))
(define glGetPointerv (c-function (GLenum GLvoid**) void "glGetPointerv"))
(define glArrayElement (c-function (GLint) void "glArrayElement"))
(define glDrawArrays (c-function (GLenum GLint GLsizei) void "glDrawArrays"))
(define glDrawElements (c-function (GLenum GLsizei GLenum GLvoid*) void "glDrawElements"))
(define glInterleavedArrays (c-function (GLenum GLsizei GLvoid*) void "glInterleavedArrays"))


;;;
;;;; Lighting
;;;


(define glShadeModel (c-function (GLenum) void "glShadeModel"))
(define glLightf (c-function (GLenum GLenum GLfloat) void "glLightf"))
(define glLighti (c-function (GLenum GLenum GLint) void "glLighti"))
(define glLightfv (c-function (GLenum GLenum GLfloat*) void "glLightfv"))
(define glLightiv (c-function (GLenum GLenum GLint*) void "glLightiv"))
(define glGetLightfv (c-function (GLenum GLenum GLfloat*) void "glGetLightfv"))
(define glGetLightiv (c-function (GLenum GLenum GLint*) void "glGetLightiv"))
(define glLightModelf (c-function (GLenum GLfloat) void "glLightModelf"))
(define glLightModeli (c-function (GLenum GLint) void "glLightModeli"))
(define glLightModelfv (c-function (GLenum GLfloat*) void "glLightModelfv"))
(define glLightModeliv (c-function (GLenum GLint*) void "glLightModeliv"))
(define glMaterialf (c-function (GLenum GLenum GLfloat) void "glMaterialf"))
(define glMateriali (c-function (GLenum GLenum GLint) void "glMateriali"))
(define glMaterialfv (c-function (GLenum GLenum GLfloat*) void "glMaterialfv"))
(define glMaterialiv (c-function (GLenum GLenum GLint*) void "glMaterialiv"))
(define glGetMaterialfv (c-function (GLenum GLenum GLfloat*) void "glGetMaterialfv"))
(define glGetMaterialiv (c-function (GLenum GLenum GLint*) void "glGetMaterialiv"))
(define glColorMaterial (c-function (GLenum GLenum) void "glColorMaterial"))


;;;
;;;; Raster functions
;;;


(define glPixelZoom (c-function (GLfloat GLfloat) void "glPixelZoom"))
(define glPixelStoref (c-function (GLenum GLfloat) void "glPixelStoref"))
(define glPixelStorei (c-function (GLenum GLint) void "glPixelStorei"))
(define glPixelTransferf (c-function (GLenum GLfloat) void "glPixelTransferf"))
(define glPixelTransferi (c-function (GLenum GLint) void "glPixelTransferi"))
(define glPixelMapfv (c-function (GLenum GLsizei GLfloat*) void "glPixelMapfv"))
(define glPixelMapuiv (c-function (GLenum GLsizei GLuint*) void "glPixelMapuiv"))
(define glPixelMapusv (c-function (GLenum GLsizei GLushort*) void "glPixelMapusv"))
(define glGetPixelMapfv (c-function (GLenum GLfloat*) void "glGetPixelMapfv"))
(define glGetPixelMapuiv (c-function (GLenum GLuint*) void "glGetPixelMapuiv"))
(define glGetPixelMapusv (c-function (GLenum GLushort*) void "glGetPixelMapusv"))
(define glBitmap (c-function (GLsizei GLsizei GLfloat GLfloat GLfloat GLfloat GLubyte*) void "glBitmap"))
(define glReadPixels (c-function (GLint GLint GLsizei GLsizei GLenum GLenum GLvoid*) void "glReadPixels"))
(define glDrawPixels (c-function (GLsizei GLsizei GLenum GLenum GLvoid*) void "glDrawPixels"))
(define glCopyPixels (c-function (GLint GLint GLsizei GLsizei GLenum) void "glCopyPixels"))


;;;
;;;; Stenciling
;;;


(define glStencilFunc (c-function (GLenum GLint GLuint) void "glStencilFunc"))
(define glStencilMask (c-function (GLuint) void "glStencilMask"))
(define glStencilOp (c-function (GLenum GLenum GLenum) void "glStencilOp"))
(define glClearStencil (c-function (GLint) void "glClearStencil"))


;;;
;;;; Texture mapping
;;;

(define glTexGend (c-function (GLenum GLenum GLdouble) void "glTexGend"))
(define glTexGenf (c-function (GLenum GLenum GLfloat) void "glTexGenf"))
(define glTexGeni (c-function (GLenum GLenum GLint) void "glTexGeni"))

(define glTexGendv (c-function (GLenum GLenum GLdouble*) void "glTexGendv"))
(define glTexGenfv (c-function (GLenum GLenum GLfloat*) void "glTexGenfv"))
(define glTexGeniv (c-function (GLenum GLenum GLint*) void "glTexGeniv"))

(define glGetTexGendv (c-function (GLenum GLenum GLdouble*) void "glGetTexGendv"))
(define glGetTexGenfv (c-function (GLenum GLenum GLfloat*) void "glGetTexGenfv"))
(define glGetTexGeniv (c-function (GLenum GLenum GLint*) void "glGetTexGeniv"))

(define glTexEnvf (c-function (GLenum GLenum GLfloat) void "glTexEnvf"))
(define glTexEnvi (c-function (GLenum GLenum GLint) void "glTexEnvi"))

(define glTexEnvfv (c-function (GLenum GLenum GLfloat*) void "glTexEnvfv"))
(define glTexEnviv (c-function (GLenum GLenum GLint*) void "glTexEnviv"))

(define glGetTexEnvfv (c-function (GLenum GLenum GLfloat*) void "glGetTexEnvfv"))
(define glGetTexEnviv (c-function (GLenum GLenum GLint*) void "glGetTexEnviv"))

(define glTexParameterf (c-function (GLenum GLenum GLfloat) void "glTexParameterf"))
(define glTexParameteri (c-function (GLenum GLenum GLint) void "glTexParameteri"))

(define glTexParameterfv (c-function (GLenum GLenum GLfloat*) void "glTexParameterfv"))
(define glTexParameteriv (c-function (GLenum GLenum GLint*) void "glTexParameteriv"))

(define glGetTexParameterfv (c-function (GLenum GLenum GLfloat*) void "glGetTexParameterfv"))
(define glGetTexParameteriv (c-function (GLenum GLenum GLint*) void "glGetTexParameteriv"))

(define glGetTexLevelParameterfv (c-function (GLenum GLint GLenum GLfloat*) void "glGetTexLevelParameterfv"))
(define glGetTexLevelParameteriv (c-function (GLenum GLint GLenum GLint*) void "glGetTexLevelParameteriv"))

(define glTexImage1D (c-function (GLenum GLint GLint GLsizei GLint GLenum GLenum GLvoid*) void "glTexImage1D"))
(define glTexImage2D (c-function (GLenum GLint GLint GLsizei GLsizei GLint GLenum GLenum GLvoid*) void "glTexImage2D"))
(define glGetTexImage (c-function (GLenum GLint GLenum GLenum GLvoid*) void "glGetTexImage"))


;;;
;;;; Textures
;;;


(define glGenTextures (c-function (GLsizei GLuint*) void "glGenTextures"))
(define glDeleteTextures (c-function (GLsizei GLuint*) void "glDeleteTextures"))
(define glBindTexture (c-function (GLenum GLuint) void "glBindTexture"))
(define glPrioritizeTextures (c-function (GLsizei GLuint* GLclampf*) void "glPrioritizeTextures"))
(define glAreTexturesResident (c-function (GLsizei GLuint* GLboolean*) GLboolean "glAreTexturesResident"))
(define glIsTexture (c-function (GLuint) GLboolean "glIsTexture"))
(define glTexSubImage1D (c-function (GLenum GLint GLint GLsizei GLenum GLenum GLvoid*) void "glTexSubImage1D"))
(define glTexSubImage2D (c-function (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum GLvoid*) void "glTexSubImage2D"))
(define glCopyTexImage1D (c-function (GLenum GLint GLenum GLint GLint GLsizei GLint) void "glCopyTexImage1D"))
(define glCopyTexImage2D (c-function (GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint) void "glCopyTexImage2D"))
(define glCopyTexSubImage1D (c-function (GLenum GLint GLint GLint GLint GLsizei) void "glCopyTexSubImage1D"))
(define glCopyTexSubImage2D (c-function (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei) void "glCopyTexSubImage2D"))


;;;
;;;; Evaluators
;;;


(define glMap1d (c-function (GLenum GLdouble GLdouble GLint GLint GLdouble*) void "glMap1d"))
(define glMap1f (c-function (GLenum GLfloat GLfloat GLint GLint GLfloat*) void "glMap1f"))
(define glMap2d (c-function (GLenum GLdouble GLdouble GLint GLint GLdouble GLdouble GLint GLint GLdouble*) void "glMap2d"))
(define glMap2f (c-function (GLenum GLfloat GLfloat GLint GLint GLfloat GLfloat GLint GLint GLfloat*) void "glMap2f"))
(define glGetMapdv (c-function (GLenum GLenum GLdouble*) void "glGetMapdv"))
(define glGetMapfv (c-function (GLenum GLenum GLfloat*) void "glGetMapfv"))
(define glGetMapiv (c-function (GLenum GLenum GLint*) void "glGetMapiv"))
(define glEvalCoord1d (c-function (GLdouble) void "glEvalCoord1d"))
(define glEvalCoord1f (c-function (GLfloat) void "glEvalCoord1f"))
(define glEvalCoord1dv (c-function (GLdouble*) void "glEvalCoord1dv"))
(define glEvalCoord1fv (c-function (GLfloat*) void "glEvalCoord1fv"))
(define glEvalCoord2d (c-function (GLdouble GLdouble) void "glEvalCoord2d"))
(define glEvalCoord2f (c-function (GLfloat GLfloat) void "glEvalCoord2f"))
(define glEvalCoord2dv (c-function (GLdouble*) void "glEvalCoord2dv"))
(define glEvalCoord2fv (c-function (GLfloat*) void "glEvalCoord2fv"))
(define glMapGrid1d (c-function (GLint GLdouble GLdouble) void "glMapGrid1d"))
(define glMapGrid1f (c-function (GLint GLfloat GLfloat) void "glMapGrid1f"))
(define glMapGrid2d (c-function (GLint GLdouble GLdouble GLint GLdouble GLdouble) void "glMapGrid2d"))
(define glMapGrid2f (c-function (GLint GLfloat GLfloat GLint GLfloat GLfloat) void "glMapGrid2f"))
(define glEvalPoint1 (c-function (GLint) void "glEvalPoint1"))
(define glEvalPoint2 (c-function (GLint GLint) void "glEvalPoint2"))
(define glEvalMesh1 (c-function (GLenum GLint GLint) void "glEvalMesh1"))
(define glEvalMesh2 (c-function (GLenum GLint GLint GLint GLint) void "glEvalMesh2"))


;;;
;;;; Fog
;;;


(define glFogf (c-function (GLenum GLfloat) void "glFogf"))
(define glFogi (c-function (GLenum GLint) void "glFogi"))
(define glFogfv (c-function (GLenum GLfloat*) void "glFogfv"))
(define glFogiv (c-function (GLenum GLint*) void "glFogiv"))


;;;
;;;; Selection and Feedback
;;;


(define glFeedbackBuffer (c-function (GLsizei GLenum GLfloat*) void "glFeedbackBuffer"))
(define glPassThrough (c-function (GLfloat) void "glPassThrough"))
(define glSelectBuffer (c-function (GLsizei GLuint*) void "glSelectBuffer"))
(define glInitNames (c-function () void "glInitNames"))
(define glLoadName (c-function (GLuint) void "glLoadName"))
(define glPushName (c-function (GLuint) void "glPushName"))
(define glPopName (c-function () void "glPopName")))
