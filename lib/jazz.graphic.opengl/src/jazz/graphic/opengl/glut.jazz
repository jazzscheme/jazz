(library jazz.graphic.opengl.glut jazz


(export (jazz.graphic.opengl.glut-header))
(import (jazz.graphic.opengl.glut-header))


(c-include "<GL/gl.h>")
(c-include "<GL/glu.h>")
(c-include "<GL/glut.h>")


;;;
;;;; os dependent macros:
;;;


(define GLUT_STROKE_ROMAN ((c-function () void* "___result_voidstar = GLUT_STROKE_ROMAN;")))
(define GLUT_STROKE_MONO_ROMAN ((c-function () void* "___result_voidstar = GLUT_STROKE_MONO_ROMAN;")))
(define GLUT_BITMAP_9_BY_15 ((c-function () void* "___result_voidstar = GLUT_BITMAP_9_BY_15;")))
(define GLUT_BITMAP_8_BY_13 ((c-function () void* "___result_voidstar = GLUT_BITMAP_8_BY_13;")))
(define GLUT_BITMAP_TIMES_ROMAN_10 ((c-function () void* "___result_voidstar = GLUT_BITMAP_TIMES_ROMAN_10;")))
(define GLUT_BITMAP_TIMES_ROMAN_24 ((c-function () void* "___result_voidstar = GLUT_BITMAP_TIMES_ROMAN_24;")))
(define GLUT_BITMAP_HELVETICA_10 ((c-function () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_10;")))
(define GLUT_BITMAP_HELVETICA_12 ((c-function () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_12;")))
(define GLUT_BITMAP_HELVETICA_18 ((c-function () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_18;")))


;;;
;;;; Initialization see fglut_init.c
;;;


(define glutInit (c-function (int* nonnull-char-string-list) void "glutInit"))
(define glutInitWindowPosition (c-function (int int) void "glutInitWindowPosition"))
(define glutInitWindowSize (c-function (int int) void "glutInitWindowSize"))
(define glutInitDisplayMode (c-function (unsigned-int) void "glutInitDisplayMode"))
(define glutInitDisplayString (c-function (char-string) void "glutInitDisplayString"))


(define (glut-init)
  (c-function () void
    "int argc = 0;
     glutInit(&argc, NULL);"))


;;;
;;;; Process loop see freeglut_main.c
;;;


(define glutMainLoop (c-function () void "glutMainLoop"))


;;;
;;;; Window management see freeglut_window.c
;;;


(define glutCreateWindow (c-function (char-string) int "glutCreateWindow"))
(define glutCreateSubWindow (c-function (int int int int int) int "glutCreateSubWindow"))
(define glutDestroyWindow (c-function (int) void "glutDestroyWindow"))
(define glutSetWindow (c-function (int) void "glutSetWindow"))
(define glutGetWindow (c-function () int "glutGetWindow"))
(define glutSetWindowTitle (c-function (char-string) void "glutSetWindowTitle"))
(define glutSetIconTitle (c-function (char-string) void "glutSetIconTitle"))
(define glutReshapeWindow (c-function (int int) void "glutReshapeWindow"))
(define glutPositionWindow (c-function (int int) void "glutPositionWindow"))
(define glutShowWindow (c-function () void "glutShowWindow"))
(define glutHideWindow (c-function () void "glutHideWindow"))
(define glutIconifyWindow (c-function () void "glutIconifyWindow"))
(define glutPushWindow (c-function () void "glutPushWindow"))
(define glutPopWindow (c-function () void "glutPopWindow"))
(define glutFullScreen (c-function () void "glutFullScreen"))


;;;
;;;; Display-connected see freeglut_display.c
;;;


(define glutPostWindowRedisplay (c-function (int) void "glutPostWindowRedisplay"))
(define glutPostRedisplay (c-function () void "glutPostRedisplay"))
(define glutSwapBuffers (c-function () void "glutSwapBuffers"))


;;;
;;;; Mouse cursor see freeglut_cursor.c
;;;


(define glutWarpPointer (c-function (int int) void "glutWarpPointer"))
(define glutSetCursor (c-function (int) void "glutSetCursor"))


;;;
;;;; Overlay see freeglut_overlay.c
;;;


(define glutEstablishOverlay (c-function () void "glutEstablishOverlay"))
(define glutRemoveOverlay (c-function () void "glutRemoveOverlay"))
(define glutUseLayer (c-function (GLenum) void "glutUseLayer"))
(define glutPostOverlayRedisplay (c-function () void "glutPostOverlayRedisplay"))
(define glutPostWindowOverlayRedisplay (c-function (int) void "glutPostWindowOverlayRedisplay"))
(define glutShowOverlay (c-function () void "glutShowOverlay"))
(define glutHideOverlay (c-function () void "glutHideOverlay"))


;;;
;;;; Menu see freeglut_menu.c
;;;


(define glutCreateMenu (c-function ((function (int) void)) int "glutCreateMenu"))
(define glutDestroyMenu (c-function (int) void "glutDestroyMenu"))
(define glutGetMenu (c-function () int "glutGetMenu"))
(define glutSetMenu (c-function (int) void "glutSetMenu"))
(define glutAddMenuEntry (c-function (char-string int) void "glutAddMenuEntry"))
(define glutAddSubMenu (c-function (char-string int) void "glutAddSubMenu"))
(define glutChangeToMenuEntry (c-function (int char-string int) void "glutChangeToMenuEntry"))
(define glutChangeToSubMenu (c-function (int char-string int) void "glutChangeToSubMenu"))
(define glutRemoveMenuItem (c-function (int) void "glutRemoveMenuItem"))
(define glutAttachMenu (c-function (int) void "glutAttachMenu"))
(define glutDetachMenu (c-function (int) void "glutDetachMenu"))


;;;
;;;; Global callback see freeglut_callbacks.c
;;;


(define glutTimerFunc (c-function (unsigned-int (function (int) void) int) void "glutTimerFunc"))
(define glutIdleFunc (c-function ((function () void)) void "glutIdleFunc"))


(c-definition (glut-timer-callback value) (int) void "glut_timer_callback" ""
  (*glut-timer-callback* value))

(define *glut-timer-callback*
  #f)

(define (glut-timer-callback-set! wait proc value)
  (cond (proc
          (set! *glut-timer-callback* proc)
          (glutTimerFunc wait glut-timer-callback value))
        (else
          (glutTimerFunc 0 #f 0)
          (set! *glut-timer-callback* #f))))


(c-definition (glut-idle-callback) () void "glut_idle_callback" ""
  (*glut-idle-callback*))

(define *glut-idle-callback*
  #f)

(define (glut-idle-callback-set! proc)
  (cond (proc
          (set! *glut-idle-callback* proc)
          (glutIdleFunc glut-idle-callback))
        (else
          (glutIdleFunc #f)
          (set! *glut-idle-callback* #f))))


;;;
;;;; Window-specific callback see freeglut_callbacks.c
;;;


(define glutKeyboardFunc (c-function ((function (unsigned-char int int) void)) void "glutKeyboardFunc"))
(define glutSpecialFunc (c-function ((function (int int int) void)) void "glutSpecialFunc"))
(define glutReshapeFunc (c-function ((function (int int) void)) void "glutReshapeFunc"))
(define glutVisibilityFunc (c-function ((function (int) void)) void "glutVisibilityFunc"))
(define glutDisplayFunc (c-function ((function () void)) void "glutDisplayFunc"))
(define glutMouseFunc (c-function ((function (int int int int) void)) void "glutMouseFunc"))
(define glutMotionFunc (c-function ((function (int int) void)) void "glutMotionFunc"))
(define glutPassiveMotionFunc (c-function ((function (int int) void)) void "glutPassiveMotionFunc"))
(define glutEntryFunc (c-function ((function (int) void)) void "glutEntryFunc"))

(define glutKeyboardUpFunc (c-function ((function (unsigned-char int int) void)) void "glutKeyboardUpFunc"))
(define glutSpecialUpFunc (c-function ((function (int int int) void)) void "glutSpecialUpFunc"))
(define glutJoystickFunc (c-function ((function (unsigned-int int int int) void) int) void "glutJoystickFunc"))
(define glutMenuStateFunc (c-function ((function (int) void)) void "glutMenuStateFunc"))
(define glutMenuStatusFunc (c-function ((function (int int int) void)) void "glutMenuStatusFunc"))
(define glutOverlayDisplayFunc (c-function ((function () void)) void "glutOverlayDisplayFunc"))
(define glutWindowStatusFunc (c-function ((function (int) void)) void "glutWindowStatusFunc"))

(define glutSpaceballMotionFunc (c-function ((function (int int int) void)) void "glutSpaceballMotionFunc"))
(define glutSpaceballRotateFunc (c-function ((function (int int int) void)) void "glutSpaceballRotateFunc"))
(define glutSpaceballButtonFunc (c-function ((function (int int) void)) void "glutSpaceballButtonFunc"))
(define glutButtonBoxFunc (c-function ((function (int int) void)) void "glutButtonBoxFunc"))
(define glutDialsFunc (c-function ((function (int int) void)) void "glutDialsFunc"))
(define glutTabletMotionFunc (c-function ((function (int int) void)) void "glutTabletMotionFunc"))
(define glutTabletButtonFunc (c-function ((function (int int int int) void)) void "glutTabletButtonFunc"))


(c-definition (glut-display-callback) () void "glut_display_callback" ""
  (*glut-display-callback*))

(define *glut-display-callback*
  #f)

(define (glut-display-callback-set! proc)
  (cond (proc
          (set! *glut-display-callback* proc)
          (glutDisplayFunc glut-display-callback))
        (else
          (glutDisplayFunc #f)
          (set! *glut-display-callback* #f))))


;;;
;;;; State setting and retrieval see freeglut_state.c
;;;


(define glutGet (c-function (GLenum) int "glutGet"))
(define glutDeviceGet (c-function (GLenum) int "glutDeviceGet"))
(define glutGetModifiers (c-function () int "glutGetModifiers"))
(define glutLayerGet (c-function (GLenum) int "glutLayerGet"))


;;;
;;;; Font see freeglut_font.c
;;;


(define glutBitmapCharacter (c-function (void* int) void "glutBitmapCharacter"))
(define glutBitmapWidth (c-function (void* int) int "glutBitmapWidth"))
(define glutStrokeCharacter (c-function (void* int) void "glutStrokeCharacter"))
(define glutStrokeWidth (c-function (void* int) int "glutStrokeWidth"))
(define glutBitmapLength (c-function (void* (pointer unsigned-char)) int "glutBitmapLength"))
(define glutStrokeLength (c-function (void* (pointer unsigned-char)) int "glutStrokeLength"))


;;;
;;;; Geometry see freeglut_geometry.c
;;;


(define glutWireCube (c-function (GLdouble) void "glutWireCube"))
(define glutSolidCube (c-function (GLdouble) void "glutSolidCube"))
(define glutWireSphere (c-function (GLdouble GLint GLint) void "glutWireSphere"))
(define glutSolidSphere (c-function (GLdouble GLint GLint) void "glutSolidSphere"))
(define glutWireCone (c-function (GLdouble GLdouble GLint GLint) void "glutWireCone"))
(define glutSolidCone (c-function (GLdouble GLdouble GLint GLint) void "glutSolidCone"))

(define glutWireTorus (c-function (GLdouble GLdouble GLint GLint) void "glutWireTorus"))
(define glutSolidTorus (c-function (GLdouble GLdouble GLint GLint) void "glutSolidTorus"))
(define glutWireDodecahedron (c-function () void "glutWireDodecahedron"))
(define glutSolidDodecahedron (c-function () void "glutSolidDodecahedron"))
(define glutWireOctahedron (c-function () void "glutWireOctahedron"))
(define glutSolidOctahedron (c-function () void "glutSolidOctahedron"))
(define glutWireTetrahedron (c-function () void "glutWireTetrahedron"))
(define glutSolidTetrahedron (c-function () void "glutSolidTetrahedron"))
(define glutWireIcosahedron (c-function () void "glutWireIcosahedron"))
(define glutSolidIcosahedron (c-function () void "glutSolidIcosahedron"))


;;;
;;;; Teapot rendering found in freeglut_teapot.c
;;;


(define glutWireTeapot (c-function (GLdouble) void "glutWireTeapot"))
(define glutSolidTeapot (c-function (GLdouble) void "glutSolidTeapot"))


;;;
;;;; Game mode see freeglut_gamemode.c
;;;


(define glutGameModeString (c-function (char-string) void "glutGameModeString"))
(define glutEnterGameMode (c-function () int "glutEnterGameMode"))
(define glutLeaveGameMode (c-function () void "glutLeaveGameMode"))
(define glutGameModeGet (c-function (GLenum) int "glutGameModeGet"))


;;;
;;;; Video resize see freeglut_videoresize.c
;;;


(define glutVideoResizeGet (c-function (GLenum) int "glutVideoResizeGet"))
(define glutSetupVideoResizing (c-function () void "glutSetupVideoResizing"))
(define glutStopVideoResizing (c-function () void "glutStopVideoResizing"))
(define glutVideoResize (c-function (int int int int) void "glutVideoResize"))
(define glutVideoPan (c-function (int int int int) void "glutVideoPan"))


;;;
;;;; Colormap see freeglut_misc.c
;;;


(define glutSetColor (c-function (int GLfloat GLfloat GLfloat) void "glutSetColor"))
(define glutGetColor (c-function (int int) GLfloat "glutGetColor"))
(define glutCopyColormap (c-function (int) void "glutCopyColormap"))


;;;
;;;; Misc keyboard and joystick see freeglut_misc.c
;;;


(define glutIgnoreKeyRepeat (c-function (int) void "glutIgnoreKeyRepeat"))
(define glutSetKeyRepeat (c-function (int) void "glutSetKeyRepeat"))
(define glutForceJoystickFunc (c-function () void "glutForceJoystickFunc"))


;;;
;;;; Misc see freeglut_misc.c
;;;


(define glutExtensionSupported (c-function (char-string) int "glutExtensionSupported"))
(define glutReportErrors (c-function () void "glutReportErrors")))
