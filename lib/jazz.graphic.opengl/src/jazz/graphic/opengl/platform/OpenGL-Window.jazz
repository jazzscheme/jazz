;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; OpenGL Windows
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.graphic.opengl.platform.OpenGL-Window jazz


(import (jazz.debuggee)
        (jazz.graphic.opengl)
        (jazz.system)
        (jazz.ui))


(class OpenGL-Window extends Window
  
  
  (property fullscreen? initialize #f accessors generate)
  
  
  (slot device initialize #f accessors generate)
  (slot render initialize #f accessors generate)
  
  
  (method protected virtual (initialize-opengl)
    (gl-shade-model GL_SMOOTH)
    (gl-clear-color 0.0 0.0 0.0 0.5)
    (gl-clear-depth 1.0)
    (gl-enable GL_LINE_SMOOTH)
    (gl-enable GL_POLYGON_SMOOTH)
    (gl-enable GL_COLOR_MATERIAL)
    ;(gl-enable #x809D)
    ;(gl-enable GL_BLEND)
    ;(gl-enable GL_SRC_COLOR)
    (gl-enable GL_DEPTH_TEST)
    (gl-depth-func GL_LEQUAL)
    (glPolygonMode GL_FRONT_AND_BACK GL_FILL)
    (gl-hint GL_PERSPECTIVE_CORRECTION_HINT GL_NICEST))
  
  
  (method protected virtual (resize-scene width height)
    (gl-viewport 0 0 width height)
    (gl-matrix-mode GL_PROJECTION)
    (gl-load-identity)
    (glu-perspective 45.0 (fl/ width height) 0.1 100.0)
    (gl-matrix-mode GL_MODELVIEW)
    (gl-load-identity))
  
  
  (method override (close-window)
    (nextmethod)
    (let ((toplevel (get-toplevel)))
      (when (or (not toplevel) (eq? self toplevel))
        (exit))))
  
  
  (method protected virtual (draw-scene)
    )
  
  
  (method protected virtual (render-scene)
    (make-render-current self render)
    (draw-scene)
    (swap-buffers self))
  
  
  (method override (timer-pulse)
    (unless (> (current-repl-level) 0)
      (render-scene)))))
