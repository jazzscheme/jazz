;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Compare Nodes
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Alain Marcotte.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;    Guillaume Cartier
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.groupware.compare.Compare-Node jazz


(class Compare-Node extends Object
    
    
  (slot protected lines    <list>  initialize '() getter generate)
  (slot protected children <list>  initialize '() getter generate)
  (slot protected key      <char+> initialize {}  getter generate)
  
  
  (method override (initialize l k)
    (nextmethod)
    (set! lines l)
    (set! key k))
  
  
  (method protected (set-lines l)
    (set! lines l))
  
  
  (method override (print printer readably)
    (print-unreadable self printer
      (lambda (printer)
        (format printer "{s} {a} {a}"
                (string key)
                (length lines)
                (length children)))))
  
  
  (method protected (add-line line)
    (set! lines (cons line lines)))
  
  
  (method protected (add-child node)
    (set! children (cons node children)))
  
  
  (method (get-moniker-line moniker)
    (find-in lines moniker key: (lambda (line) (get-moniker~ line)) test: eq?))
  
  
  (method protected (extract-diff moniker1 moniker2)
    (list
      (get-moniker-line moniker1)
      (get-moniker-line moniker2)))))
