;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Favorite Compare-Directories
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.groupware.favorite.Favorite-Compare-Directories jazz


(import (jazz.designer)
        (jazz.groupware)
        (jazz.library)
        (jazz.ui.view))


(definition Mode-Values
  '((backup "Backup")
    (merge  "Merge")))

(definition Check-Algorithm-Values
  '((timestamp "Timestamp")
    (content   "Content")
    (user      "Whitespace")))


(class Favorite-Compare-Directories extends Favorite
  
  
  (property mode               initialize {}  accessors generate)
  (property left               initialize {}  accessors generate)
  (property right              initialize {}  accessors generate)
  (property ignored-nodes      initialize '() accessors generate)
  (property ignored-leaves     initialize '() accessors generate)
  (property ignored-extensions initialize '() accessors generate)
  (property check-algorithm    initialize {}  accessors generate)

  
  ;;;
  ;;;; Launch
  ;;;
  
  
  (method override (launch)
    (let* ((frame (new-frame Compare-Directories))
           (guest (get-guest~ frame)))
      (install-configuration~ guest self)))


  ;;;
  ;;;; Domain
  ;;;
  
  
  (method meta override (get-domain property)
    (case (field-name property)
      ((mode)            (new Enumeration-Domain choices: Mode-Values))
      ((check-algorithm) (new Enumeration-Domain choices: Check-Algorithm-Values))
      (else              (nextmethod property))))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Favorite-Compare-Directories-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer))


(class Favorite-Compare-Directories-Descriptor extends Favorite-Descriptor

  
  (method override (class-property-presentation class property)
    (case (field-name property)
      ((mode) "Mode")
      ((left) "Left")
      ((right) "Right")
      ((ignored-nodes) "Ignored Nodes")
      ((ignored-leaves) "Ignored Leaves")
      ((ignored-extensions) "Ignored Extensions")
      ((check-algorithm) "Check Algorithm")
      (else (nextmethod class property))))
  
  
  (method override (component-get-categorized-properties component)
    '(mode left right ignored-nodes ignored-leaves ignored-extensions check-algorithm))
    
  
  (method override (class-get-domain class property)
    (case (field-name property)
      ((mode) (new Combo-Row choices: Mode-Values))
      ((check-algorithm) (new Combo-Row choices: Check-Algorithm-Values))
      ((left right) (new Directory-Row))
      (else (nextmethod class property)))))))
