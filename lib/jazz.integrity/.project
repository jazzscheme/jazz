;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.editor.jazz))


(form
  (<Project>                 name: jazz.integrity       description-file: {File :context ".package"}
    (<Project-Directory>                                directory: {Directory :context "src"}
      (<Project-Directory>                              directory: {Directory :context "src" "jazz"}
        (<Project-Directory>                            directory: {Directory :context "src" "jazz" "integrity"}
          (<Jazz-File>       name: Integrity-Constraint source: {File :context "src" "jazz" "integrity" "Integrity-Constraint.jazz"})
          (<Jazz-File>       name: Integrity-Log-Node   source: {File :context "src" "jazz" "integrity" "Integrity-Log-Node.jazz"})
          (<Jazz-File>       name: Integrity-Manager    source: {File :context "src" "jazz" "integrity" "Integrity-Manager.jazz"})
          (<Jazz-File>       name: Integrity-Violation  source: {File :context "src" "jazz" "integrity" "Integrity-Violation.jazz"})
          (<Jazz-File>       name: Violations-Found     source: {File :context "src" "jazz" "integrity" "Violations-Found.jazz"})
          (<Jazz-File>       name: Violations-Manager   source: {File :context "src" "jazz" "integrity" "Violations-Manager.jazz"})
          (<Jazz-File>       name: _integrity           source: {File :context "src" "jazz" "integrity" "_integrity.jazz"})
          (<Jazz-File>       name: autoload             source: {File :context "src" "jazz" "integrity" "autoload.jazz"})))))))
