;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.project)
        (jazz.editor.jazz))


(form
  (<Project>                 name: jazz.io          documentation: {File :context "doc" "io.jml"} description-file: {File :context ".package"}
    (<Project-Directory>                            directory: {Directory :context "src"}
      (<Project-Directory>                          directory: {Directory :context "src" "jazz"}
        (<Project-Directory>                        directory: {Directory :context "src" "jazz" "io"}
          (<Jazz-File>       name: _io              source: {File :context "src" "jazz" "io" "_io.jazz"})
          (<Jazz-File>       name: protocol         source: {File :context "src" "jazz" "io" "protocol.jazz"})
          (<Project-File>                           source: {File :context "src" "jazz" "io" "install.scm"})
          (<Jazz-File>       name: literals         source: {File :context "src" "jazz" "io" "literals.jazz"})
          (<Jazz-File>       name: Path             source: {File :context "src" "jazz" "io" "Path.jazz"})
          (<Jazz-File>       name: Category-Moniker source: {File :context "src" "jazz" "io" "Category-Moniker.jazz"})
          (<Jazz-File>       name: Directory-Group  source: {File :context "src" "jazz" "io" "Directory-Group.jazz"})
          (<Jazz-File>       name: Manifest         source: {File :context "src" "jazz" "io" "Manifest.jazz"})
          (<Jazz-File>       name: URL              source: {File :context "src" "jazz" "io" "URL.jazz"}))))
    (<Project-Directory>                            directory: {Directory :context "doc"}
      (<Project-File>                               source: {File :context "doc" "io.jml"})))))
