;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.editor.jazz))


(form
  (<Project>                   name: jazz.jml           catalog?: #t catalog-extensions: :text include-extensions: :text
    (<Project-Directory>                                directory: {Directory :context "src"}
      (<Project-Directory>                              directory: {Directory :context "src" "jazz"}
        (<Project-Directory>                            directory: {Directory :context "src" "jazz" "jml"}
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "jml" "experiments"}
            (<Jazz-File>       name: Experiments        source: {File :context "src" "jazz" "jml" "experiments" "Experiments.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "jml" "model"}
            (<Jazz-File>       name: JML-Element        source: {File :context "src" "jazz" "jml" "model" "JML-Element.jazz"})
            (<Jazz-File>       name: JML-Node           source: {File :context "src" "jazz" "jml" "model" "JML-Node.jazz"})
            (<Jazz-File>       name: JML-Text           source: {File :context "src" "jazz" "jml" "model" "JML-Text.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "jml" "parser"}
            (<Jazz-File>       name: JML-Parser         source: {File :context "src" "jazz" "jml" "parser" "JML-Parser.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "jml" "preference"}
            (<Jazz-File>       name: JML-Preferences    source: {File :context "src" "jazz" "jml" "preference" "JML-Preferences.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "jml" "renderer"}
            (<Jazz-File>       name: JML-Renderer       source: {File :context "src" "jazz" "jml" "renderer" "JML-Renderer.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "jml" "syntax"}
            (<Jazz-File>       name: _syntax            source: {File :context "src" "jazz" "jml" "syntax" "_syntax.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "jml" "transformation"}
            (<Jazz-File>       name: JML-Transformation source: {File :context "src" "jazz" "jml" "transformation" "JML-Transformation.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "jml" "xhtml"}
            (<Jazz-File>       name: XHTML-Parser       source: {File :context "src" "jazz" "jml" "xhtml" "XHTML-Parser.jazz"})
            (<Jazz-File>       name: XHTML-Renderer     source: {File :context "src" "jazz" "jml" "xhtml" "XHTML-Renderer.jazz"}))
          (<Jazz-File>         name: _jml               source: {File :context "src" "jazz" "jml" "_jml.jazz"})
          (<Jazz-File>         name: autoload           source: {File :context "src" "jazz" "jml" "autoload.jazz"})
          (<Jazz-File>         name: parse              source: {File :context "src" "jazz" "jml" "parse.jazz"})))))))
