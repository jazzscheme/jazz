;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.project)
        (jazz.editor.jazz))


(form
  (<Project>                   name: jazz.library                 documentation: {File :context "doc" "library.jml"} description-file: {File :context ".package"}
    (<Project-Directory>                                          directory: {Directory :context "src"}
      (<Project-Directory>                                        directory: {Directory :context "src" "jazz"}
        (<Project-Directory>                                      directory: {Directory :context "src" "jazz" "library"}
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "display"}
            (<Jazz-File>       name: Aligned-Column-Preferences   source: {File :context "src" "jazz" "library" "display" "Aligned-Column-Preferences.jazz"})
            (<Jazz-File>       name: Aligned-Column               source: {File :context "src" "jazz" "library" "display" "Aligned-Column.jazz"})
            (<Jazz-File>       name: Column-Preferences           source: {File :context "src" "jazz" "library" "display" "Column-Preferences.jazz"})
            (<Jazz-File>       name: Columns-Display              source: {File :context "src" "jazz" "library" "display" "Columns-Display.jazz"})
            (<Jazz-File>       name: Display-Column               source: {File :context "src" "jazz" "library" "display" "Display-Column.jazz"})
            (<Jazz-File>       name: Indented-Column-Preferences  source: {File :context "src" "jazz" "library" "display" "Indented-Column-Preferences.jazz"})
            (<Jazz-File>       name: Indented-Column              source: {File :context "src" "jazz" "library" "display" "Indented-Column.jazz"})
            (<Jazz-File>       name: Sequenced-Column-Preferences source: {File :context "src" "jazz" "library" "display" "Sequenced-Column-Preferences.jazz"})
            (<Jazz-File>       name: Sequenced-Column             source: {File :context "src" "jazz" "library" "display" "Sequenced-Column.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "entity"}
            (<Jazz-File>       name: Entity-Factory               source: {File :context "src" "jazz" "library" "entity" "Entity-Factory.jazz"})
            (<Jazz-File>       name: Entity-Interface             source: {File :context "src" "jazz" "library" "entity" "Entity-Interface.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "factory"}
            (<Jazz-File>       name: Formatter                    source: {File :context "src" "jazz" "library" "factory" "Formatter.jazz"})
            (<Jazz-File>       name: Print-Sequencer              source: {File :context "src" "jazz" "library" "factory" "Print-Sequencer.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "group"}
            (<Jazz-File>       name: Group                        source: {File :context "src" "jazz" "library" "group" "Group.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "history"}
            (<Jazz-File>       name: History-Item                 source: {File :context "src" "jazz" "library" "history" "History-Item.jazz"})
            (<Jazz-File>       name: History-Manager              source: {File :context "src" "jazz" "library" "history" "History-Manager.jazz"})
            (<Jazz-File>       name: History-Provider             source: {File :context "src" "jazz" "library" "history" "History-Provider.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "listener"}
            (<Jazz-File>       name: _listener                    source: {File :context "src" "jazz" "library" "listener" "_listener.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "manifest"}
            (<Jazz-File>       name: Manifest                     source: {File :context "src" "jazz" "library" "manifest" "Manifest.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "moniker"}
            (<Jazz-File>       name: Category-Moniker             source: {File :context "src" "jazz" "library" "moniker" "Category-Moniker.jazz"})
            (<Jazz-File>       name: Directory-Group              source: {File :context "src" "jazz" "library" "moniker" "Directory-Group.jazz"})
            (<Jazz-File>       name: URL                          source: {File :context "src" "jazz" "library" "moniker" "URL.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "outline"}
            (<Jazz-File>       name: Display-Outline              source: {File :context "src" "jazz" "library" "outline" "Display-Outline.jazz"})
            (<Jazz-File>       name: Outline                      source: {File :context "src" "jazz" "library" "outline" "Outline.jazz"})
            (<Jazz-File>       name: Sparse-Outline               source: {File :context "src" "jazz" "library" "outline" "Sparse-Outline.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "path"}
            (<Jazz-File>       name: Path                         source: {File :context "src" "jazz" "library" "path" "Path.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "reporter"}
            (<Jazz-File>       name: Log-Reporter                 source: {File :context "src" "jazz" "library" "reporter" "Log-Reporter.jazz"})
            (<Jazz-File>       name: Multiplexer-Reporter         source: {File :context "src" "jazz" "library" "reporter" "Multiplexer-Reporter.jazz"})
            (<Jazz-File>       name: Reporter                     source: {File :context "src" "jazz" "library" "reporter" "Reporter.jazz"}))
          (<Project-Directory>                                    directory: {Directory :context "src" "jazz" "library" "utility"}
            (<Jazz-File>       name: Class-Reference              source: {File :context "src" "jazz" "library" "utility" "Class-Reference.jazz"})
            (<Jazz-File>       name: Environment-Provider         source: {File :context "src" "jazz" "library" "utility" "Environment-Provider.jazz"})
            (<Jazz-File>       name: Environment                  source: {File :context "src" "jazz" "library" "utility" "Environment.jazz"})
            (<Jazz-File>       name: Handler-Reference            source: {File :context "src" "jazz" "library" "utility" "Handler-Reference.jazz"})
            (<Jazz-File>       name: Locator                      source: {File :context "src" "jazz" "library" "utility" "Locator.jazz"})
            (<Jazz-File>       name: Loggable                     source: {File :context "src" "jazz" "library" "utility" "Loggable.jazz"})
            (<Jazz-File>       name: Output-Log                   source: {File :context "src" "jazz" "library" "utility" "Output-Log.jazz"})
            (<Jazz-File>       name: Period                       source: {File :context "src" "jazz" "library" "utility" "Period.jazz"})
            (<Jazz-File>       name: Pulse                        source: {File :context "src" "jazz" "library" "utility" "Pulse.jazz"})
            (<Jazz-File>       name: Reference                    source: {File :context "src" "jazz" "library" "utility" "Reference.jazz"})
            (<Jazz-File>       name: Timer                        source: {File :context "src" "jazz" "library" "utility" "Timer.jazz"})
            (<Jazz-File>       name: Trait-Reference              source: {File :context "src" "jazz" "library" "utility" "Trait-Reference.jazz"})
            (<Jazz-File>       name: Undoer                       source: {File :context "src" "jazz" "library" "utility" "Undoer.jazz"})
            (<Jazz-File>       name: Version                      source: {File :context "src" "jazz" "library" "utility" "Version.jazz"}))
          (<Jazz-File>         name: _library                     source: {File :context "src" "jazz" "library" "_library.jazz"})
          (<Jazz-File>         name: autoload                     source: {File :context "src" "jazz" "library" "autoload.jazz"})
          (<Project-File>                                         source: {File :context "src" "jazz" "library" "install.scm"})
          (<Jazz-File>         name: literals                     source: {File :context "src" "jazz" "library" "literals.jazz"})
          (<Jazz-File>         name: syntax                       source: {File :context "src" "jazz" "library" "syntax.jazz"})
          (<Jazz-File>         name: designer                     source: {File :context "src" "jazz" "library" "designer.jazz"}))))
    (<Project-Directory>                                          directory: {Directory :context "doc"}
      (<Project-File>                                             source: {File :context "doc" "library.jml"})))))
