;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Library Literals
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.library.literals jazz


(import (jazz.library)
        (jazz.locale))


;;;
;;;; Reference
;;;


(definition package (walk-reference arguments proc)
  (proc (source-code (car arguments))))


(definition package (construct-reference symbol)
  (new Reference symbol))


;;;
;;;; Box
;;;


(definition package (construct-box . rest)
  (if (null? rest)
      (new Box)
    (new Box (car rest))))


;;;
;;;; Manifest
;;;


(definition package (construct-manifest . rest)
  (new Manifest rest))


;;;
;;;; Directory-Group
;;;


(definition package (construct-directory-group . rest)
  (new Directory-Group rest))


;;;
;;;; Locales
;;;


(definition package (construct-locales . rest)
  (apply new Locales rest))


;;;
;;;; Resource
;;;


(definition package (construct-image-resource name)
  (new Image-Resource name))


(definition package (construct-icon-resource name)
  (new Icon-Resource name))


(definition package (construct-cursor-resource name)
  (new Cursor-Resource name))


;;;
;;;; Event
;;;


(definition package (construct-event kind . properties)
  (apply new Event kind #f properties))


;;;
;;;; Handler
;;;


(definition package (construct-event-handler target-name method-name . properties)
  (new Event-Handler target-name: target-name method-name: method-name properties: properties))


;;;
;;;; Version
;;;


(definition package (construct-version major minor (revision 0) (stage #f))
  (new Version major minor revision stage)))
