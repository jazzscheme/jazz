;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Locale Descriptors
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.locale.descriptors jazz


(import (jazz.component.descriptors)
        (jazz.descriptor)
        (jazz.domain)
        (jazz.integrity)
        (jazz.jml)
        (jazz.locale.components))


;;;
;;;; Locale-Node
;;;


(class Locale-Node-Descriptor extends Component-Descriptor
  
  
  (form
    (<install>
      (<properties~>
        (<Property-Descriptor> name: title
          (<Localized-Domain>  name: domain)))))
  
  
  (method override (component-get-categorized-addable-classes component)
    `((,(reference Locale-Node)))))


(specific (validate-component (<Locale-Node> node) validation-context)
  (nextmethod node validation-context)
  (unless (get-name~ node)
    (add-violation~ validation-context message: "unnamed Locale-Node"))
  (unless (find-ascendant~ node Locale-Tree include-self?: #t)
    (add-violation~ validation-context message: "Locale-Node must descend from Locale-Tree")))


;;;
;;;; Locale-Tree
;;;
  
  
(specific (validate-component (<Locale-Tree> tree) validation-context)
  (define (test-each-pair test lst)
    (let (iterate (lst lst))  
      (if (or (null? lst)
              (not (test lst)))
          lst
        (iterate (cdr lst)))))
  
  (nextmethod tree validation-context)
  (let ((result (test-each-pair (lambda (sublist)
                                  (not (memq? (car sublist) (cdr sublist))))
                                (provide-locales~ tree))))
    (unless (null? result)
      (add-violation~ validation-context message: (format "multiple descendants named {a}" (car result)))))
  (unless (find-ascendant~ tree Locale-Tree include-self?: #t)
    (add-violation~ validation-context message: "Locale-Node must descend from Locale-Tree"))))
