;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Lowlevel Logger
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.logger jazz


(import (jazz.io)
        (time))


(definition *logger-directory*
  {Directory Settings})

(definition *logger-file*
  #f)

(definition *logger-prefix*
  "log")

(definition *logger-port*
  #f)


(definition public (logger-directory)
  *logger-directory*)

(definition public (set-logger-directory dir)
  (set! *logger-directory* dir))


(definition public (logger-prefix)
  *logger-prefix*)

(definition public (set-logger-prefix prefix)
  (set! *logger-prefix* prefix))


(definition public (make-logger-file)
  (let ((file (timestamped-file *logger-directory* *logger-prefix* "log")))
    (create-directories file)
    file))


(definition public (logger-file)
  (when (not *logger-file*)
    (set! *logger-file* (make-logger-file)))
  *logger-file*)


(definition public (logger-port)
  (when (not *logger-port*)
    (set! *logger-port* (open-output-file (path-settings (logger-file) append: #t))))
  *logger-port*)


(definition public (logger-close)
  (when *logger-port*
    (close-port *logger-port*)
    (set! *logger-port* #f)))


(definition public (with-logger-output proc)
  (let ((port (logger-port)))
    (proc port)
    (force-output port)))


(definition public (logger-log . rest)
  (with-logger-output
    (lambda (port)
      (apply format port rest))))


(definition public (logger-line line)
  (logger-log "{a}{%}" line))


(definition public (logger . rest)
  (let ((date (date->string (current-date) "~Y-~m-~d ~H:~M:~S"))
        (line (apply format rest)))
    (logger-log "{a} {a}{%}" date line)))


(definition public (logger-expr expr)
  (logger-log "{s}{%}" expr))


(definition public (logger-debug . rest)
  (logger-log "{l}{%}" rest))


(definition public (logger-exception exc)
  (with-logger-output
    (lambda (port)
      (display-exception exc port))))


(definition public (logger-backtrace cont)
  (with-logger-output
    (lambda (port)
      (display-continuation-backtrace cont port)))))
