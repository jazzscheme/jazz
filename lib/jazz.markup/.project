;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.project)
        (jazz.editor.jazz))


(form
  (<Project>                   name: jazz.markup        documentation: {File :context "doc" "markup.jml"} description-file: {File :context ".package"}
    (<Project-Directory>                                directory: {Directory :context "src"}
      (<Project-Directory>                              directory: {Directory :context "src" "jazz"}
        (<Project-Directory>                            directory: {Directory :context "src" "jazz" "markup"}
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "markup" "experiments"}
            (<Jazz-File>       name: Experiments        source: {File :context "src" "jazz" "markup" "experiments" "Experiments.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "markup" "model"}
            (<Jazz-File>       name: Markup-Element     source: {File :context "src" "jazz" "markup" "model" "Markup-Element.jazz"})
            (<Jazz-File>       name: Markup-Node        source: {File :context "src" "jazz" "markup" "model" "Markup-Node.jazz"})
            (<Jazz-File>       name: Markup-Text        source: {File :context "src" "jazz" "markup" "model" "Markup-Text.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "markup" "parser"}
            (<Jazz-File>       name: Markup-Parser      source: {File :context "src" "jazz" "markup" "parser" "Markup-Parser.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "markup" "preference"}
            (<Jazz-File>       name: Markup-Preferences source: {File :context "src" "jazz" "markup" "preference" "Markup-Preferences.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "markup" "renderer"}
            (<Jazz-File>       name: Markup-Renderer    source: {File :context "src" "jazz" "markup" "renderer" "Markup-Renderer.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "markup" "syntax"}
            (<Jazz-File>       name: _syntax            source: {File :context "src" "jazz" "markup" "syntax" "_syntax.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "markup" "transformation"}
            (<Jazz-File>       name: Markup-Transformation source: {File :context "src" "jazz" "markup" "transformation" "Markup-Transformation.jazz"}))
          (<Project-Directory>                          directory: {Directory :context "src" "jazz" "markup" "xhtml"}
            (<Jazz-File>       name: XHTML-Parser       source: {File :context "src" "jazz" "markup" "xhtml" "XHTML-Parser.jazz"})
            (<Jazz-File>       name: XHTML-Renderer     source: {File :context "src" "jazz" "markup" "xhtml" "XHTML-Renderer.jazz"}))
          (<Jazz-File>         name: _markup               source: {File :context "src" "jazz" "markup" "_markup.jazz"})
          (<Jazz-File>         name: autoload           source: {File :context "src" "jazz" "markup" "autoload.jazz"})
          (<Jazz-File>         name: parse              source: {File :context "src" "jazz" "markup" "parse.jazz"})
          (<Jazz-File>         name: descriptors        source: {File :context "src" "jazz" "markup" "descriptors.jazz"}))))
    (<Project-Directory>                                directory: {Directory :context "doc"}
      (<Project-File>                                   source: {File :context "doc" "markup.jml"})))))
