;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Directory Handler
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;    Vladimir Sedach <vsedach@gmail.com>
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.network.http.Directory-Handler jazz


(import (jazz.io)
        (jazz.network.http.Handler)
        (jazz.network.http.HTTP-Response)
        (jazz.network.http.HTTP-Request))


(class Directory-Handler extends HTTP-Request-Handler
  
  
  (slot root-directory accessors generate)
  
  
  (method override (initialize 
                     (root-directory: root-directory #f))
    (nextmethod)
    (set! root-directory~self root-directory))
  
  
  (method override (handle-request request port server)
    
    (define (find-file path)
      (when (and root-directory (not (empty-string? path)))
        (let ((file (new-file~ root-directory (tokenise-filename path))))
          (when (and (exists?~ file)
                     (not (is-directory?~ file)))
            file))))
    
    (let ((maybe-file (find-file (get-uri~ request))))
      (when maybe-file
          (new HTTP-Response
            code: 'ok
            content: (call-with-input-file (parse~ maybe-file) read-u8-content)))))
  
  )
)
