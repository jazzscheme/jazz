;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; GLU
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;    Stephane Le Cornec
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.opengl.foreign.glu jazz


(export (jazz.opengl.foreign.glu-header))
(import (jazz.opengl.foreign.glu-header)
        (jazz.foreign (phase syntax))
        (jazz.platform.types))


(c-include "<GL/gl.h>")
(c-include "<GL/glu.h>")


(c-external (gluBeginCurve GLUnurbs*) void "gluBeginCurve")
(c-external (gluBeginPolygon GLUtesselator*) void "gluBeginPolygon")
(c-external (gluBeginSurface GLUnurbs*) void "gluBeginSurface")
(c-external (gluBeginTrim GLUnurbs*) void "gluBeginTrim")
;(c-external (gluBuild1DMipmapLevels GLenum GLint GLsizei GLenum GLenum GLint GLint GLint void*) GLint "gluBuild1DMipmapLevels")
;(c-external (gluBuild1DMipmaps GLenum GLint GLsizei GLenum GLenum void*) GLint "gluBuild1DMipmaps")
;(c-external (gluBuild2DMipmapLevels GLenum GLint GLsizei GLsizei GLenum GLenum GLint GLint GLint void*) GLint "gluBuild2DMipmapLevels")
;(c-external (gluBuild2DMipmaps GLenum GLint GLsizei GLsizei GLenum GLenum void*) GLint "gluBuild2DMipmaps")
;(c-external (gluBuild3DMipmapLevels GLenum GLint GLsizei GLsizei GLsizei GLenum GLenum GLint GLint GLint void*) GLint "gluBuild3DMipmapLevels")
;(c-external (gluBuild3DMipmaps GLenum GLint GLsizei GLsizei GLsizei GLenum GLenum void*) GLint "gluBuild3DMipmaps")
;(c-external (gluCheckExtension GLubyte* GLubyte*) GLboolean "gluCheckExtension")
(c-external (gluCylinder GLUquadric* GLdouble GLdouble GLdouble GLint GLint) void "gluCylinder")
(c-external (gluDeleteNurbsRenderer GLUnurbs*) void "gluDeleteNurbsRenderer")
(c-external (gluDeleteQuadric GLUquadric*) void "gluDeleteQuadric")
(c-external (gluDeleteTess GLUtesselator*) void "gluDeleteTess")
(c-external (gluDisk GLUquadric* GLdouble GLdouble GLint GLint) void "gluDisk")
(c-external (gluEndCurve GLUnurbs*) void "gluEndCurve")
(c-external (gluEndPolygon GLUtesselator*) void "gluEndPolygon")
(c-external (gluEndSurface GLUnurbs*) void "gluEndSurface")
(c-external (gluEndTrim GLUnurbs*) void "gluEndTrim")
(c-external (gluErrorString GLenum) char-string "gluErrorString")
(c-external (gluGetNurbsProperty GLUnurbs* GLenum GLfloat*) void "gluGetNurbsProperty")
(c-external (gluGetString GLenum) GLubyte* "gluGetString")
(c-external (gluGetTessProperty GLUtesselator* GLenum GLdouble*) void "gluGetTessProperty")
(c-external (gluLoadSamplingMatrices GLUnurbs* GLfloat* GLfloat* GLint*) void "gluLoadSamplingMatrices")
(c-external (gluLookAt GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble) void "gluLookAt")
(c-external (gluNewNurbsRenderer) GLUnurbs* "gluNewNurbsRenderer")
(c-external (gluNewQuadric) GLUquadric* "gluNewQuadric")
(c-external (gluNewTess) GLUtesselator* "gluNewTess")
(c-external (gluNextContour GLUtesselator* GLenum) void "gluNextContour")
(c-external (gluNurbsCallback GLUnurbs* GLenum _GLUfuncptr) void "gluNurbsCallback")
;(c-external (gluNurbsCallbackData GLUnurbs* GLvoid*) void "gluNurbsCallbackData")
;(c-external (gluNurbsCallbackDataEXT GLUnurbs* GLvoid*) void "gluNurbsCallbackDataEXT")
(c-external (gluNurbsCurve GLUnurbs* GLint GLfloat* GLint GLfloat* GLint GLenum) void "gluNurbsCurve")
(c-external (gluNurbsProperty GLUnurbs* GLenum GLfloat) void "gluNurbsProperty")
(c-external (gluNurbsSurface GLUnurbs* GLint GLfloat* GLint GLfloat* GLint GLint GLfloat* GLint GLint GLenum) void "gluNurbsSurface")
(c-external (gluOrtho2D GLdouble GLdouble GLdouble GLdouble) void "gluOrtho2D")
(c-external (gluPartialDisk GLUquadric* GLdouble GLdouble GLint GLint GLdouble GLdouble) void "gluPartialDisk")
(c-external (gluPerspective GLdouble GLdouble GLdouble GLdouble) void "gluPerspective")
(c-external (gluPickMatrix GLdouble GLdouble GLdouble GLdouble GLint*) void "gluPickMatrix")
(c-external (gluProject GLdouble GLdouble GLdouble GLdouble* GLdouble* GLint* GLdouble* GLdouble* GLdouble*) GLint "gluProject")
(c-external (gluPwlCurve GLUnurbs* GLint GLfloat* GLint GLenum) void "gluPwlCurve")
(c-external (gluQuadricCallback GLUquadric* GLenum _GLUfuncptr) void "gluQuadricCallback")
(c-external (gluQuadricDrawStyle GLUquadric* GLenum) void "gluQuadricDrawStyle")
(c-external (gluQuadricNormals GLUquadric* GLenum) void "gluQuadricNormals")
(c-external (gluQuadricOrientation GLUquadric* GLenum) void "gluQuadricOrientation")
(c-external (gluQuadricTexture GLUquadric* GLboolean) void "gluQuadricTexture")
(c-external (gluScaleImage GLenum GLsizei GLsizei GLenum void* GLsizei GLsizei GLenum GLvoid*) GLint "gluScaleImage")
(c-external (gluSphere GLUquadric* GLdouble GLint GLint) void "gluSphere")
(c-external (gluTessBeginContour GLUtesselator*) void "gluTessBeginContour")
(c-external (gluTessBeginPolygon GLUtesselator* GLvoid*) void "gluTessBeginPolygon")
(c-external (gluTessCallback GLUtesselator* GLenum _GLUfuncptr) void "gluTessCallback")
(c-external (gluTessEndContour GLUtesselator*) void "gluTessEndContour")
(c-external (gluTessEndPolygon GLUtesselator*) void "gluTessEndPolygon")
(c-external (gluTessNormal GLUtesselator* GLdouble GLdouble GLdouble) void "gluTessNormal")
(c-external (gluTessProperty GLUtesselator* GLenum GLdouble) void "gluTessProperty")
(c-external (gluTessVertex GLUtesselator* GLdouble* GLvoid*) void "gluTessVertex")
;(c-external (gluUnProject GLdouble GLdouble GLdouble GLdouble* GLdouble* GLint* GLdouble* GLdouble* GLdouble*) GLint "gluUnProject")
;(c-external (gluUnProject4 GLdouble GLdouble GLdouble GLdouble GLdouble* GLdouble* GLint* GLdouble GLdouble GLdouble* GLdouble* GLdouble* GLdouble*) GLint "gluUnProject4")
)
