;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; GLUT
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2012
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;    Stephane Le Cornec
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.opengl.foreign.glut jazz


(export (jazz.opengl.foreign.glut-header))
(import (jazz.opengl.foreign.glut-header)
        (jazz.foreign)
        (jazz.platform))


(c-include "<GL/gl.h>")
(c-include "<GL/glu.h>")
(c-include "<GL/glut.h>")


;;;
;;;; os dependent macros:
;;;


(definition package GLUT_STROKE_ROMAN ((c-function GLUT_STROKE_ROMAN () void* "___result_voidstar = GLUT_STROKE_ROMAN;")))
(definition package GLUT_STROKE_MONO_ROMAN ((c-function GLUT_STROKE_MONO_ROMAN () void* "___result_voidstar = GLUT_STROKE_MONO_ROMAN;")))
(definition package GLUT_BITMAP_9_BY_15 ((c-function GLUT_BITMAP_9_BY_15 () void* "___result_voidstar = GLUT_BITMAP_9_BY_15;")))
(definition package GLUT_BITMAP_8_BY_13 ((c-function GLUT_BITMAP_8_BY_13 () void* "___result_voidstar = GLUT_BITMAP_8_BY_13;")))
(definition package GLUT_BITMAP_TIMES_ROMAN_10 ((c-function GLUT_BITMAP_TIMES_ROMAN_10 () void* "___result_voidstar = GLUT_BITMAP_TIMES_ROMAN_10;")))
(definition package GLUT_BITMAP_TIMES_ROMAN_24 ((c-function GLUT_BITMAP_TIMES_ROMAN_24 () void* "___result_voidstar = GLUT_BITMAP_TIMES_ROMAN_24;")))
(definition package GLUT_BITMAP_HELVETICA_10 ((c-function GLUT_BITMAP_HELVETICA_10 () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_10;")))
(definition package GLUT_BITMAP_HELVETICA_12 ((c-function GLUT_BITMAP_HELVETICA_12 () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_12;")))
(definition package GLUT_BITMAP_HELVETICA_18 ((c-function GLUT_BITMAP_HELVETICA_18 () void* "___result_voidstar = GLUT_BITMAP_HELVETICA_18;")))


;;;
;;;; Initialization see fglut_init.c
;;;


(c-external (glutInit int* nonnull-char-string-list) void "glutInit")
(c-external (glutInitWindowPosition int int) void "glutInitWindowPosition")
(c-external (glutInitWindowSize int int) void "glutInitWindowSize")
(c-external (glutInitDisplayMode unsigned-int) void "glutInitDisplayMode")
(c-external (glutInitDisplayString char-string) void "glutInitDisplayString")


(c-external (glut-init) void
    "int argc = 0;
     glutInit(&argc, NULL);")


;;;
;;;; Process loop see freeglut_main.c
;;;


(c-external (glutMainLoop) void "glutMainLoop")


;;;
;;;; Window management see freeglut_window.c
;;;


(c-external (glutCreateWindow char-string) int "glutCreateWindow")
(c-external (glutCreateSubWindow int int int int int) int "glutCreateSubWindow")
(c-external (glutDestroyWindow int) void "glutDestroyWindow")
(c-external (glutSetWindow int) void "glutSetWindow")
(c-external (glutGetWindow ) int "glutGetWindow")
(c-external (glutSetWindowTitle char-string) void "glutSetWindowTitle")
(c-external (glutSetIconTitle char-string) void "glutSetIconTitle")
(c-external (glutReshapeWindow int int) void "glutReshapeWindow")
(c-external (glutPositionWindow int int) void "glutPositionWindow")
(c-external (glutShowWindow ) void "glutShowWindow")
(c-external (glutHideWindow ) void "glutHideWindow")
(c-external (glutIconifyWindow ) void "glutIconifyWindow")
(c-external (glutPushWindow ) void "glutPushWindow")
(c-external (glutPopWindow ) void "glutPopWindow")
(c-external (glutFullScreen ) void "glutFullScreen")


;;;
;;;; Display-connected see freeglut_display.c
;;;


(c-external (glutPostWindowRedisplay int) void "glutPostWindowRedisplay")
(c-external (glutPostRedisplay ) void "glutPostRedisplay")
(c-external (glutSwapBuffers ) void "glutSwapBuffers")


;;;
;;;; Mouse cursor see freeglut_cursor.c
;;;


(c-external (glutWarpPointer int int) void "glutWarpPointer")
(c-external (glutSetCursor int) void "glutSetCursor")


;;;
;;;; Overlay see freeglut_overlay.c
;;;


(c-external (glutEstablishOverlay ) void "glutEstablishOverlay")
(c-external (glutRemoveOverlay ) void "glutRemoveOverlay")
(c-external (glutUseLayer GLenum) void "glutUseLayer")
(c-external (glutPostOverlayRedisplay ) void "glutPostOverlayRedisplay")
(c-external (glutPostWindowOverlayRedisplay int) void "glutPostWindowOverlayRedisplay")
(c-external (glutShowOverlay ) void "glutShowOverlay")
(c-external (glutHideOverlay ) void "glutHideOverlay")


;;;
;;;; Menu see freeglut_menu.c
;;;


(c-external (glutCreateMenu (function (int) void)) int "glutCreateMenu")
(c-external (glutDestroyMenu int) void "glutDestroyMenu")
(c-external (glutGetMenu ) int "glutGetMenu")
(c-external (glutSetMenu int) void "glutSetMenu")
(c-external (glutAddMenuEntry char-string int) void "glutAddMenuEntry")
(c-external (glutAddSubMenu char-string int) void "glutAddSubMenu")
(c-external (glutChangeToMenuEntry int char-string int) void "glutChangeToMenuEntry")
(c-external (glutChangeToSubMenu int char-string int) void "glutChangeToSubMenu")
(c-external (glutRemoveMenuItem int) void "glutRemoveMenuItem")
(c-external (glutAttachMenu int) void "glutAttachMenu")
(c-external (glutDetachMenu int) void "glutDetachMenu")


;;;
;;;; Global callback see freeglut_callbacks.c
;;;


(c-external (glutTimerFunc unsigned-int (function (int) void) int) void "glutTimerFunc")
(c-external (glutIdleFunc (function () void)) void "glutIdleFunc")


(c-definition (glut-timer-callback value) (int) void "glut_timer_callback" ""
  (*glut-timer-callback* value))

(definition package *glut-timer-callback*
  #f)

(definition package (glut-timer-callback-set! wait proc value)
  (cond (proc
          (set! *glut-timer-callback* proc)
          (glutTimerFunc wait glut-timer-callback value))
        (else
          (glutTimerFunc 0 #f 0)
          (set! *glut-timer-callback* #f))))


(c-definition (glut-idle-callback) () void "glut_idle_callback" ""
  (*glut-idle-callback*))

(definition package *glut-idle-callback*
  #f)

(definition package (glut-idle-callback-set! proc)
  (cond (proc
          (set! *glut-idle-callback* proc)
          (glutIdleFunc glut-idle-callback))
        (else
          (glutIdleFunc #f)
          (set! *glut-idle-callback* #f))))


;;;
;;;; Window-specific callback see freeglut_callbacks.c
;;;


(c-external (glutKeyboardFunc (function (unsigned-char int int) void)) void "glutKeyboardFunc")
(c-external (glutSpecialFunc (function (int int int) void)) void "glutSpecialFunc")
(c-external (glutReshapeFunc (function (int int) void)) void "glutReshapeFunc")
(c-external (glutVisibilityFunc (function (int) void)) void "glutVisibilityFunc")
(c-external (glutDisplayFunc (function () void)) void "glutDisplayFunc")
(c-external (glutMouseFunc (function (int int int int) void)) void "glutMouseFunc")
(c-external (glutMotionFunc (function (int int) void)) void "glutMotionFunc")
(c-external (glutPassiveMotionFunc (function (int int) void)) void "glutPassiveMotionFunc")
(c-external (glutEntryFunc (function (int) void)) void "glutEntryFunc")

(c-external (glutKeyboardUpFunc (function (unsigned-char int int) void)) void "glutKeyboardUpFunc")
(c-external (glutSpecialUpFunc (function (int int int) void)) void "glutSpecialUpFunc")
(c-external (glutJoystickFunc (function (unsigned-int int int int) void) int) void "glutJoystickFunc")
(c-external (glutMenuStateFunc (function (int) void)) void "glutMenuStateFunc")
(c-external (glutMenuStatusFunc (function (int int int) void)) void "glutMenuStatusFunc")
(c-external (glutOverlayDisplayFunc (function () void)) void "glutOverlayDisplayFunc")
(c-external (glutWindowStatusFunc (function (int) void)) void "glutWindowStatusFunc")

(c-external (glutSpaceballMotionFunc (function (int int int) void)) void "glutSpaceballMotionFunc")
(c-external (glutSpaceballRotateFunc (function (int int int) void)) void "glutSpaceballRotateFunc")
(c-external (glutSpaceballButtonFunc (function (int int) void)) void "glutSpaceballButtonFunc")
(c-external (glutButtonBoxFunc (function (int int) void)) void "glutButtonBoxFunc")
(c-external (glutDialsFunc (function (int int) void)) void "glutDialsFunc")
(c-external (glutTabletMotionFunc (function (int int) void)) void "glutTabletMotionFunc")
(c-external (glutTabletButtonFunc (function (int int int int) void)) void "glutTabletButtonFunc")


(c-definition (glut-display-callback) () void "glut_display_callback" ""
  (*glut-display-callback*))

(definition package *glut-display-callback*
  #f)

(definition package (glut-display-callback-set! proc)
  (cond (proc
          (set! *glut-display-callback* proc)
          (glutDisplayFunc glut-display-callback))
        (else
          (glutDisplayFunc #f)
          (set! *glut-display-callback* #f))))


;;;
;;;; State setting and retrieval see freeglut_state.c
;;;


(c-external (glutGet GLenum) int "glutGet")
(c-external (glutDeviceGet GLenum) int "glutDeviceGet")
(c-external (glutGetModifiers ) int "glutGetModifiers")
(c-external (glutLayerGet GLenum) int "glutLayerGet")


;;;
;;;; Font see freeglut_font.c
;;;


(c-external (glutBitmapCharacter void* int) void "glutBitmapCharacter")
(c-external (glutBitmapWidth void* int) int "glutBitmapWidth")
(c-external (glutStrokeCharacter void* int) void "glutStrokeCharacter")
(c-external (glutStrokeWidth void* int) int "glutStrokeWidth")
(c-external (glutBitmapLength void* (pointer unsigned-char)) int "glutBitmapLength")
(c-external (glutStrokeLength void* (pointer unsigned-char)) int "glutStrokeLength")


;;;
;;;; Geometry see freeglut_geometry.c
;;;


(c-external (glutWireCube GLdouble) void "glutWireCube")
(c-external (glutSolidCube GLdouble) void "glutSolidCube")
(c-external (glutWireSphere GLdouble GLint GLint) void "glutWireSphere")
(c-external (glutSolidSphere GLdouble GLint GLint) void "glutSolidSphere")
(c-external (glutWireCone GLdouble GLdouble GLint GLint) void "glutWireCone")
(c-external (glutSolidCone GLdouble GLdouble GLint GLint) void "glutSolidCone")

(c-external (glutWireTorus GLdouble GLdouble GLint GLint) void "glutWireTorus")
(c-external (glutSolidTorus GLdouble GLdouble GLint GLint) void "glutSolidTorus")
(c-external (glutWireDodecahedron ) void "glutWireDodecahedron")
(c-external (glutSolidDodecahedron ) void "glutSolidDodecahedron")
(c-external (glutWireOctahedron ) void "glutWireOctahedron")
(c-external (glutSolidOctahedron ) void "glutSolidOctahedron")
(c-external (glutWireTetrahedron ) void "glutWireTetrahedron")
(c-external (glutSolidTetrahedron ) void "glutSolidTetrahedron")
(c-external (glutWireIcosahedron ) void "glutWireIcosahedron")
(c-external (glutSolidIcosahedron ) void "glutSolidIcosahedron")


;;;
;;;; Teapot rendering found in freeglut_teapot.c
;;;


(c-external (glutWireTeapot GLdouble) void "glutWireTeapot")
(c-external (glutSolidTeapot GLdouble) void "glutSolidTeapot")


;;;
;;;; Game mode see freeglut_gamemode.c
;;;


(c-external (glutGameModeString char-string) void "glutGameModeString")
(c-external (glutEnterGameMode ) int "glutEnterGameMode")
(c-external (glutLeaveGameMode ) void "glutLeaveGameMode")
(c-external (glutGameModeGet GLenum) int "glutGameModeGet")


;;;
;;;; Video resize see freeglut_videoresize.c
;;;


(c-external (glutVideoResizeGet GLenum) int "glutVideoResizeGet")
(c-external (glutSetupVideoResizing ) void "glutSetupVideoResizing")
(c-external (glutStopVideoResizing ) void "glutStopVideoResizing")
(c-external (glutVideoResize int int int int) void "glutVideoResize")
(c-external (glutVideoPan int int int int) void "glutVideoPan")


;;;
;;;; Colormap see freeglut_misc.c
;;;


(c-external (glutSetColor int GLfloat GLfloat GLfloat) void "glutSetColor")
(c-external (glutGetColor int int) GLfloat "glutGetColor")
(c-external (glutCopyColormap int) void "glutCopyColormap")


;;;
;;;; Misc keyboard and joystick see freeglut_misc.c
;;;


(c-external (glutIgnoreKeyRepeat int) void "glutIgnoreKeyRepeat")
(c-external (glutSetKeyRepeat int) void "glutSetKeyRepeat")
(c-external (glutForceJoystickFunc ) void "glutForceJoystickFunc")


;;;
;;;; Misc see freeglut_misc.c
;;;


(c-external (glutExtensionSupported char-string) int "glutExtensionSupported")
(c-external (glutReportErrors ) void "glutReportErrors"))
