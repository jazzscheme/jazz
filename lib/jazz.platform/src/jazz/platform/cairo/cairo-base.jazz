;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Cairo Base
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2012
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.platform.cairo.cairo-base jazz


(import (jazz.foreign)
        (jazz.platform.types))


(cond-expand
  (carbon  (c-include "<cairo-quartz.h>"))
  (cocoa   (c-include "<cairo-quartz.h>"))
  (windows (c-include "<cairo-win32.h>"))
  (x11     (c-include "<cairo-xlib.h>"))
  (else))


(c-enumeration cairo_format_t
  (CAIRO_FORMAT_ARGB32 0)
  (CAIRO_FORMAT_RGB24  1)
  (CAIRO_FORMAT_A8     2)
  (CAIRO_FORMAT_A1     3))

(c-type cairo_format_t int)


(c-type cairo_surface_t       (native "cairo_surface_t"))
(c-type cairo_surface_t*      (pointer cairo_surface_t cairo_surface_t*))


(c-type cairo_font_face_t     (native "cairo_font_face_t"))
(c-type cairo_font_face_t*    (pointer cairo_font_face_t cairo_font_face_t*))

(c-type cairo_scaled_font_t   (native "cairo_scaled_font_t"))
(c-type cairo_scaled_font_t*  (pointer cairo_scaled_font_t cairo_scaled_font_t*))


;;;
;;;; Image Surface
;;;


(c-external (cairo_image_surface_create cairo_format_t int int) cairo_surface_t*))
