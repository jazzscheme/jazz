;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; iOS Foreign
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.platform.ios.foreign jazz


(import (jazz.foreign (phase syntax))
        (jazz.platform.types))


;;;
;;;; Platform Header
;;;


(c-declare ios #/Objective-C/

#import <UIKit/UIKit.h>

typedef struct PlatformWindow            PlatformWindow;

//#)


;;;
;;;; Platform Constants
;;;


(c-declare ios #/Objective-C/

/* platformCreateWindow kinds */
#define PLATFORM_WINDOW                 0x00010011

//#)


;;;
;;;; Platform Structures
;;;


(c-declare ios #/Objective-C/

struct PlatformWindow
{
    // OS stuff
    int       kind;
    id        object;
    id        delegate;
    id        view;
};

//#)


;;;
;;;; Platform Jazz Window
;;;


(c-declare cocoa #/Objective-C/

@interface JazzWindow : UIWindow
{
    PlatformWindow* window;
    
}

- (void)setPlatformWindow:(PlatformWindow*)win;

@end

@implementation JazzWindow

- (void)setPlatformWindow:(PlatformWindow*)win
{
    window = win;
}

- (BOOL)canBecomeKeyWindow
{
    return window->kind == PLATFORM_WINDOW;
}

@end

//#)


;;;
;;;; Platform Window Creation
;;;


(c-declare ios #/Objective-C/


static void createWindow(PlatformWindow* window,
                              int kind)
{
    window->kind = kind;
    
    window->object = [[ UIWindow alloc ] initWithFrame:[[UIScreen mainScreen] bounds]];
    
    /*
    window->object = [[JazzWindow alloc]
        initWithContentRect:NSMakeRect(0, 0, window->width, window->height)
                  styleMask:styleMask
                    backing:NSBackingStoreBuffered
                      defer:NO];

    [window->object setPlatformWindow:window];
    window->view = [[JazzContentView alloc] initWithPlatformWindow:window];

    [window->object setTitle:[NSString stringWithUTF8String:wndconfig->title]];
    [window->object setContentView:window->view];
    [window->object setDelegate:window->delegate];
    [window->object setAcceptsMouseMovedEvents:YES];
    [window->object center];

    if ([window->object respondsToSelector:@selector(setRestorable:)])
        [window->object setRestorable:NO];
    */
}

//#)


;;;
;;;; Platform Window Input
;;;


(c-declare ios #/Objective-C/

PlatformWindow* platformCreateWindow()
{
    PlatformWindow* window;

    window = (PlatformWindow*) calloc(1, sizeof(PlatformWindow));
    
    createWindow(window, PLATFORM_WINDOW);
    
    return window;
}

//#)


;;;
;;;; Platform
;;;


(c-type platformwindow (pointer (struct "PlatformWindow")))


(c-external (platformCreateWindow) platformwindow))
