;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Jazz ODBC low-level
;;;


(module jazz.platform.odbc.odbc-lowlevel jazz

(import (jazz.platform.types)

        (jazz.foreign (phase syntax))
        (jazz.platform.types-syntax (phase syntax))
        (time))

(c-include "<sql.h>")
(c-include "<sqlext.h>")


(c-type SWORD short)
(c-type UWORD ushort)
(c-type SDWORD long)
(c-type UDWORD ulong)
(c-type SQLSMALLINT SWORD)
(c-type SQLUSMALLINT UWORD)
(c-type SQLSMALLINT* (pointer SQLSMALLINT))
(define-pointer-to-type SQLSMALLINT "SQLSMALLINT")
(c-type SQLINTEGER SDWORD)
(c-type SQLINTEGER* (pointer SQLINTEGER))
(c-type SQLUINTEGER UDWORD)
(c-type SQLLEN SQLINTEGER)
(c-type SQLLEN* (pointer SQLLEN))
(define-pointer-to-type SQLLEN "SQLLEN")
(define-pointer-to-type SQLINTEGER "SQLINTEGER")

(c-type SQLPOINTER void*)

(c-type SQLHANDLE void*)
(c-type SQLHANDLE* (pointer SQLHANDLE))
(define-pointer-to-pointer SQLHANDLE "SQLHANDLE")
(c-type SQLHENV SQLHANDLE)
(c-type SQLHDBC SQLHANDLE)
(c-type SQLHSTMT SQLHANDLE)
(c-type SQLHDESC SQLHANDLE)
(c-type SQLHENV* SQLHANDLE*)
(c-type SQLHDBC* SQLHANDLE*)
(c-type SQLHSTMT* SQLHANDLE*)
(c-type SQLHDESC* SQLHANDLE*)
(define-pointer-to-pointer SQLHDESC "SQLHDESC")
(define-cast-lambda-ptr SQLHANDLE SQLHENV)
(define-cast-lambda-ptr SQLHANDLE SQLHDBC)
(define-cast-lambda-ptr SQLHANDLE SQLHSTMT)
(define-cast-lambda-ptr SQLHANDLE SQLHDESC)

(c-type SQLHWND void*)
(c-type SQLRETURN SQLSMALLINT)

(c-type SQLCHAR uint8)
(c-type SQLSCHAR int8)
(c-type SQLWCHAR wchar_t)
(c-type SQLCHAR* (pointer SQLCHAR))
(c-type SQLSCHAR* (pointer SQLSCHAR))
(c-type SQLWCHAR* (pointer SQLWCHAR))
(define-pointer-to-type SQLCHAR "SQLCHAR")
(define-pointer-to-type SQLSCHAR "SQLSCHAR")
(define-cast-lambda SQLCHAR* char-string)
(define-cast-lambda-ptr uint8* SQLCHAR*)

(c-structure SQL_TIMESTAMP_STRUCT
  (SQLSMALLINT year)
  (SQLUSMALLINT month)
  (SQLUSMALLINT day)
  (SQLUSMALLINT hour)
  (SQLUSMALLINT minute)
  (SQLUSMALLINT second)
  (SQLUINTEGER fraction))
  
(definition public (SQL_TIMESTAMP_STRUCT->date timestamp)
  (let ((year   (SQL_TIMESTAMP_STRUCT-year-ref timestamp))
        (month  (SQL_TIMESTAMP_STRUCT-month-ref timestamp))
        (day    (SQL_TIMESTAMP_STRUCT-day-ref timestamp))
        (hour   (SQL_TIMESTAMP_STRUCT-hour-ref timestamp))
        (minute (SQL_TIMESTAMP_STRUCT-minute-ref timestamp))
        (second (SQL_TIMESTAMP_STRUCT-second-ref timestamp))
        (nanoseconds (SQL_TIMESTAMP_STRUCT-fraction-ref timestamp)))
    (make-date nanoseconds second minute hour day month year (local-timezone))))


(c-structure SQL_NUMERIC_STRUCT
  (SQLCHAR precision)
  (SQLSCHAR scale)
  (SQLCHAR sign)
  (SQLCHAR val 16))


(definition public (char-string->SQLCHAR* string)
  (uint8*->SQLCHAR* (char-string->uint8* string)))


(definition public SQLGetDiagField$
  (c-function (SQLSMALLINT SQLHANDLE SQLSMALLINT SQLSMALLINT SQLPOINTER SQLSMALLINT SQLSMALLINT*) SQLRETURN "SQLGetDiagField"))


(definition public SQLAllocHandleStd$
  (c-function (SQLSMALLINT SQLHANDLE SQLHANDLE*) SQLRETURN "SQLAllocHandleStd"))


(definition public SQLSetConnectAttr$
  (c-function (SQLHDBC SQLINTEGER SQLINTEGER SQLINTEGER) SQLRETURN "SQLSetConnectAttr"))


(definition public SQLSetStmtAttr$
  (c-function (SQLHSTMT SQLINTEGER SQLINTEGER SQLINTEGER) SQLRETURN "SQLSetStmtAttr"))


(definition public SQLSetDescField$
  (c-function (SQLHDESC SQLSMALLINT SQLSMALLINT SQLPOINTER SQLINTEGER) SQLRETURN "SQLSetDescField"))


(definition public SQLGetStmtAttr$
  (c-function (SQLHSTMT SQLINTEGER SQLPOINTER SQLINTEGER SQLINTEGER*) SQLRETURN "SQLGetStmtAttr"))


(definition public SQLDriverConnect$
  (c-function (SQLHDBC SQLHWND char-string SQLSMALLINT SQLCHAR* SQLSMALLINT SQLSMALLINT* SQLUSMALLINT) SQLRETURN "SQLDriverConnect"))


(definition public SQLExecDirect$
  (c-function (SQLHSTMT SQLCHAR* SQLINTEGER) SQLRETURN "SQLExecDirect"))


(definition public SQLNumResultCols$
  (c-function (SQLHSTMT SQLSMALLINT*) SQLRETURN "SQLNumResultCols"))


(definition public SQLFreeHandle$
  (c-function (SQLSMALLINT SQLHANDLE) SQLRETURN "SQLFreeHandle"))


(definition public SQLDisconnect$
  (c-function (SQLHDBC) SQLRETURN "SQLDisconnect"))


(definition public SQLFreeStmt$
  (c-function (SQLHSTMT SQLUSMALLINT) SQLRETURN "SQLFreeStmt"))


(definition public SQLColAttribute$
  (c-function (SQLHSTMT SQLUSMALLINT SQLUSMALLINT SQLPOINTER SQLSMALLINT SQLSMALLINT* SQLLEN*) SQLRETURN "SQLColAttribute"))


(definition public SQLBindCol$
  (c-function (SQLHSTMT SQLUSMALLINT SQLSMALLINT SQLPOINTER SQLLEN SQLLEN*) SQLRETURN "SQLBindCol"))


(definition public SQLFetch$
  (c-function (SQLHSTMT) SQLRETURN "SQLFetch"))


(definition public SQLMoreResults$
  (c-function (SQLHSTMT) SQLRETURN "SQLMoreResults"))


(definition public SQLGetData$
  (c-function (SQLHSTMT SQLUSMALLINT SQLSMALLINT SQLPOINTER SQLLEN SQLLEN*) SQLRETURN "SQLGetData"))


(definition public SQLFetchScroll$
  (c-function (SQLHSTMT SQLSMALLINT SQLLEN) SQLRETURN "SQLFetchScroll"))


(definition public SQLEndTran$
  (c-function (SQLSMALLINT SQLHANDLE SQLSMALLINT) SQLRETURN "SQLEndTran"))
)
