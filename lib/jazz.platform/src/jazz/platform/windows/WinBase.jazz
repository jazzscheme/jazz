;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Windows Base
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.platform.windows.WinBase jazz


(import (jazz.foreign)
        (jazz.platform.types)
        (jazz.platform.windows.WinTypes))


(c-include "<time.h>")


;;;
;;;; Constants
;;;


(c-constant INVALID_HANDLE_VALUE                -1)
(c-constant INVALID_FILE_SIZE                   #xFFFFFFFF)

(c-constant FILE_BEGIN                          0)
(c-constant FILE_CURRENT                        1)
(c-constant FILE_END                            2)

(c-constant FILE_FLAG_WRITE_THROUGH             #x80000000)
(c-constant FILE_FLAG_OVERLAPPED                #x40000000)
(c-constant FILE_FLAG_NO_BUFFERING              #x20000000)
(c-constant FILE_FLAG_RANDOM_ACCESS             #x10000000)
(c-constant FILE_FLAG_SEQUENTIAL_SCAN           #x08000000)
(c-constant FILE_FLAG_DELETE_ON_CLOSE           #x04000000)
(c-constant FILE_FLAG_BACKUP_SEMANTICS          #x02000000)
(c-constant FILE_FLAG_POSIX_SEMANTICS           #x01000000)
(c-constant FILE_FLAG_OPEN_REPARSE_POINT        #x00200000)
(c-constant FILE_FLAG_OPEN_NO_RECALL            #x00100000)

(c-constant CREATE_NEW                          1)
(c-constant CREATE_ALWAYS                       2)
(c-constant OPEN_EXISTING                       3)
(c-constant OPEN_ALWAYS                         4)
(c-constant TRUNCATE_EXISTING                   5)

(c-constant FORMAT_MESSAGE_ALLOCATE_BUFFER      #x00000100)
(c-constant FORMAT_MESSAGE_IGNORE_INSERTS       #x00000200)
(c-constant FORMAT_MESSAGE_FROM_STRING          #x00000400)
(c-constant FORMAT_MESSAGE_FROM_HMODULE         #x00000800)
(c-constant FORMAT_MESSAGE_FROM_SYSTEM          #x00001000)
(c-constant FORMAT_MESSAGE_ARGUMENT_ARRAY       #x00002000)
(c-constant FORMAT_MESSAGE_MAX_WIDTH_MASK       #x000000FF)

(c-constant IGNORE                              0)
(c-constant INFINITE                            #xFFFFFFFF)

(c-constant STARTF_USESHOWWINDOW                #x00000001)
(c-constant STARTF_USESIZE                      #x00000002)
(c-constant STARTF_USEPOSITION                  #x00000004)
(c-constant STARTF_USECOUNTCHARS                #x00000008)
(c-constant STARTF_USEFILLATTRIBUTE             #x00000010)
(c-constant STARTF_RUNFULLSCREEN                #x00000020)
(c-constant STARTF_FORCEONFEEDBACK              #x00000040)
(c-constant STARTF_FORCEOFFFEEDBACK             #x00000080)
(c-constant STARTF_USESTDHANDLES                #x00000100)
(c-constant STARTF_USEHOTKEY                    #x00000200)

(c-constant DEBUG_PROCESS                       #x00000001)
(c-constant DEBUG_ONLY_THIS_PROCESS             #x00000002)
(c-constant CREATE_SUSPENDED                    #x00000004)
(c-constant DETACHED_PROCESS                    #x00000008)
(c-constant CREATE_NEW_CONSOLE                  #x00000010)
(c-constant NORMAL_PRIORITY_CLASS               #x00000020)
(c-constant IDLE_PRIORITY_CLASS                 #x00000040)
(c-constant HIGH_PRIORITY_CLASS                 #x00000080)
(c-constant REALTIME_PRIORITY_CLASS             #x00000100)
(c-constant CREATE_NEW_PROCESS_GROUP            #x00000200)
(c-constant CREATE_UNICODE_ENVIRONMENT          #x00000400)
(c-constant CREATE_SEPARATE_WOW_VDM             #x00000800)
(c-constant CREATE_SHARED_WOW_VDM               #x00001000)
(c-constant CREATE_FORCEDOS                     #x00002000)
(c-constant CREATE_DEFAULT_ERROR_MODE           #x04000000)
(c-constant CREATE_NO_WINDOW                    #x08000000)

(c-constant MAX_COMPUTERNAME_LENGTH             15)

(c-constant GetFileExInfoStandard               0)
(c-constant GetFileExMaxInfoLevel               1)

(c-constant STD_INPUT_HANDLE                    -10)
(c-constant STD_OUTPUT_HANDLE                   -11)
(c-constant STD_ERROR_HANDLE                    -12)

(c-constant STATUS_WAIT_0                       #x00000000)
(c-constant STATUS_ABANDONED_WAIT_0             #x00000080)
(c-constant STATUS_TIMEOUT                      #x00000102)

(c-constant WAIT_FAILED                         #xFFFFFFFF)
(c-constant WAIT_OBJECT_0                       (+ STATUS_WAIT_0 0))
(c-constant WAIT_ABANDONED                      (+ STATUS_ABANDONED_WAIT_0 0))
(c-constant WAIT_TIMEOUT                        STATUS_TIMEOUT)

(c-constant LOCALE_SYSTEM_DEFAULT               #x800)
(c-constant LOCALE_USER_DEFAULT                 #x400)


;;;
;;;; Time
;;;


(c-constant CLOCKS_PER_SEC                      1000)


(c-type clock_t LONG)


(c-external (system-clock) clock_t "clock")


(definition public (system-clocks/second) CLOCKS_PER_SEC)


;;;
;;;; Enumerations
;;;


(c-enumeration REGCLS
  (REGCLS_SINGLEUSE      0)
  (REGCLS_MULTIPLEUSE    1)
  (REGCLS_MULTI_SEPARATE 2)
  (REGCLS_SUSPENDED      4)
  (REGCLS_SURROGATE      8))


;;;
;;;; Structures
;;;


(c-structure (OSVERSIONINFO "OSVERSIONINFOW"))
(c-structure (OSVERSIONINFOEX "OSVERSIONINFOEXW" OSVERSIONINFOW)
  (DWORD   dwOSVersionInfoSize)
  (DWORD   dwMajorVersion)
  (DWORD   dwMinorVersion)
  (DWORD   dwBuildNumber)
  (DWORD   dwPlatformId)
  (WCHAR   szCSDVersion 128)
  (WORD    wServicePackMajor)
  (WORD    wServicePackMinor))


(c-structure STARTUPINFO
  (DWORD   cb)
  (CWSTR   lpDesktop)
  (CWSTR   lpTitle)
  (DWORD   dwX)
  (DWORD   dwY)
  (DWORD   dwXSize)
  (DWORD   dwYSize)
  (DWORD   dwXCountChars)
  (DWORD   dwYCountChars)
  (DWORD   dwFillAttribute)
  (DWORD   dwFlags)
  (WORD    wShowWindow)
  (HANDLE  hStdInput)
  (HANDLE  hStdOutput)
  (HANDLE  hStdError))


(c-structure PROCESS_INFORMATION
  (HANDLE  hProcess)
  (HANDLE  hThread)
  (DWORD   dwProcessId)
  (DWORD   dwThreadId))


(c-structure SECURITY_ATTRIBUTES
  (DWORD   nLength)
  (VOID*   lpSecurityDescriptor)
  (BOOL    bInheritHandle))


(c-structure FILETIME
  (DWORD   dwLowDateTime)
  (DWORD   dwHighDateTime))


(c-structure SYSTEMTIME
  (WORD    wYear)
  (WORD    wMonth)
  (WORD    wDayOfWeek)
  (WORD    wDay)
  (WORD    wHour)
  (WORD    wMinute)
  (WORD    wSecond)
  (WORD    wMilliseconds))


(c-structure WIN32_FILE_ATTRIBUTE_DATA
  (DWORD    dwFileAttributes)
  (FILETIME ftCreationTime)
  (FILETIME ftLastAccessTime)
  (FILETIME ftLastWriteTime)
  (DWORD    nFileSizeHigh)
  (DWORD    nFileSizeLow))


(c-structure WIN32_FIND_DATA
  (DWORD    dwFileAttributes)
  (FILETIME ftCreationTime)
  (FILETIME ftLastAccessTime)
  (FILETIME ftLastWriteTime)
  (DWORD    nFileSizeHigh)
  (DWORD    nFileSizeLow)
  (WCHAR    cFileName MAX_PATH)
  (WCHAR    cAlternateFileName 14))


(c-structure OVERLAPPED
  (DWORD   Internal)
  (DWORD   InternalHigh)
  (DWORD   Offset)
  (DWORD   OffsetHigh)
  (HANDLE  hEvent))


(c-type LPOVERLAPPED OVERLAPPED*)


(c-external (GetModuleFileName) LPTSTR
  #/C/
    wchar_t filename[MAX_PATH];
    GetModuleFileName(NULL,filename,MAX_PATH);
    ___return(filename);
//#))
