;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Windows IDL Definitions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.platform.windows.WinIDL jazz


@WAIT (


  ;;;
  ;;;; Constants
  ;;;


  (c-constant PARAMFLAG_NONE         0x0)
  (c-constant PARAMFLAG_FIN          0x1)
  (c-constant PARAMFLAG_FOUT         0x2)
  (c-constant PARAMFLAG_FLCID        0x4)
  (c-constant PARAMFLAG_FRETVAL      0x8)
  (c-constant PARAMFLAG_FOPT         0x10)
  (c-constant PARAMFLAG_FHASDEFAULT  0x20)
  (c-constant PARAMFLAG_FHASCUSTDATA 0x40)


  (c-constant IDLFLAG_NONE    PARAMFLAG_NONE)
  (c-constant IDLFLAG_FIN     PARAMFLAG_FIN)
  (c-constant IDLFLAG_FOUT    PARAMFLAG_FOUT)
  (c-constant IDLFLAG_FLCID   PARAMFLAG_FLCID)
  (c-constant IDLFLAG_FRETVAL PARAMFLAG_FRETVAL)


  ;;;
  ;;;; Enumerations
  ;;;


  (c-enumeration TYPEKIND
    (TKIND_ENUM         0)
    (TKIND_RECORD       (+ TKIND_ENUM 1))
    (TKIND_MODULE       (+ TKIND_RECORD 1))
    (TKIND_INTERFACE    (+ TKIND_MODULE 1))
    (TKIND_DISPATCH     (+ TKIND_INTERFACE 1))
    (TKIND_COCLASS      (+ TKIND_DISPATCH 1))
    (TKIND_ALIAS        (+ TKIND_COCLASS 1))
    (TKIND_UNION        (+ TKIND_ALIAS 1))
    (TKIND_MAX          (+ TKIND_UNION 1)))


  (c-enumeration FUNCKIND
    (FUNC_VIRTUAL       0)
    (FUNC_PUREVIRTUAL   (+ FUNC_VIRTUAL 1))
    (FUNC_NONVIRTUAL    (+ FUNC_PUREVIRTUAL 1))
    (FUNC_STATIC        (+ FUNC_NONVIRTUAL 1))
    (FUNC_DISPATCH      (+ FUNC_STATIC 1)))


  (c-enumeration INVOKEKIND
    (INVOKE_FUNC           1)
    (INVOKE_PROPERTYGET    2)
    (INVOKE_PROPERTYPUT    4)
    (INVOKE_PROPERTYPUTREF 8))


  (c-enumeration CALLCONV
    (CC_FASTCALL   0)
    (CC_CDECL      1)
    (CC_MSCPASCAL  (+ CC_CDECL 1))
    (CC_PASCAL     CC_MSCPASCAL)
    (CC_MACPASCAL  (+ CC_PASCAL 1))
    (CC_STDCALL    (+ CC_MACPASCAL 1))
    (CC_FPFASTCALL (+ CC_STDCALL 1))
    (CC_SYSCALL    (+ CC_FPFASTCALL 1))
    (CC_MPWCDECL   (+ CC_SYSCALL 1))
    (CC_MPWPASCAL  (+ CC_MPWCDECL 1))
    (CC_MAX        (+ CC_MPWPASCAL 1)))


  (c-enumeration VARKIND
    (VAR_PERINSTANCE 0)
    (VAR_STATIC      (+ VAR_PERINSTANCE 1))
    (VAR_CONST       (+ VAR_STATIC 1))
    (VAR_DISPATCH    (+ VAR_CONST 1)))


  (c-enumeration VARENUM
    (VT_EMPTY           0)
    (VT_NULL            1)
    (VT_I2              2)
    (VT_I4              3)
    (VT_R4              4)
    (VT_R8              5)
    (VT_CY              6)
    (VT_DATE            7)
    (VT_BSTR            8)
    (VT_DISPATCH        9)
    (VT_ERROR           10)
    (VT_BOOL            11)
    (VT_VARIANT         12)
    (VT_UNKNOWN         13)
    (VT_DECIMAL         14)
    (VT_I1              16)
    (VT_UI1             17)
    (VT_UI2             18)
    (VT_UI4             19)
    (VT_I8              20)
    (VT_UI8             21)
    (VT_INT             22)
    (VT_UINT            23)
    (VT_VOID            24)
    (VT_HRESULT         25)
    (VT_PTR             26)
    (VT_SAFEARRAY       27)
    (VT_CARRAY          28)
    (VT_USERDEFINED     29)
    (VT_LPSTR           30)
    (VT_LPWSTR          31)
    (VT_RECORD          36)
    (VT_FILETIME        64)
    (VT_BLOB            65)
    (VT_STREAM          66)
    (VT_STORAGE         67)
    (VT_STREAMED_OBJECT 68)
    (VT_STORED_OBJECT   69)
    (VT_BLOB_OBJECT     70)
    (VT_CF              71)
    (VT_CLSID           72)
    (VT_BSTR_BLOB       0xFFF)
    (VT_VECTOR          0x1000)
    (VT_ARRAY           0x2000)
    (VT_BYREF           0x4000)
    (VT_RESERVED        0x8000)
    (VT_ILLEGAL         0xFFFF)
    (VT_ILLEGALMASKED   0xFFF)
    (VT_TYPEMASK        0xFFF))


  ;;;
  ;;;; Structures
  ;;;


  (structure TLIBATTR
    (GUID_ guid)
    (int lcid)
    (int syskind)
    (short wMajorVerNum)
    (short wMinorVerNum)
    (short wLibFlags))


  (structure TYPEDESC
    (int desc)
    (short vt))
  
  
  (structure SAFEARRAYBOUND
    (int cElements)
    (int lLbound))

  
  (structure ARRAYDESC
    (TYPEDESC tdescElem)
    (short cDims)
    (SAFEARRAYBOUND rgbounds))


  (structure IDLDESC
    (int dwReserved)
    (short wIDLFlags))


  (structure TYPEATTR
    (GUID_ guid)
    (int lcid)
    (int dwReserved)
    (int memidConstructor)
    (int memidDestructor)
    (string lpstrSchema)
    (int cbSizeInstance)
    (int typekind)
    (short cFuncs)
    (short cVars)
    (short cImplTypes)
    (short cbSizeVft)
    (short cbAlignment)
    (short wTypeFlags)
    (short wMajorVerNum)
    (short wMinorVerNum)
    (TYPEDESC tdescAlias)
    (IDLDESC idldescType))


  (structure ELEMDESC
    (TYPEDESC tdesc)
    (IDLDESC idldesc))

  
  (structure FUNCDESC
    (int memid)
    (int lprgscode)
    (int lprgelemdescParam)
    (int funckind)
    (int invkind)
    (int callconv)
    (short cParams)
    (short cParamsOpt)
    (short oVft)
    (short cScodes)
    (ELEMDESC elemdescFunc)
    (short wFuncFlags))
  
  
  (structure VARDESC
    (int memid)
    (string lpstrSchema)
    (int lpvarValue)
    (ELEMDESC elemdescVar)
    (short wVarFlags)
    (int varkind))
  
  
  (structure DISPPARAMS
    (int rgvarg)
    (int rgdispidNamedArgs)
    (int cArgs)
    (int cNamedArgs))


  ;;;
  ;;;; Externals
  ;;;


  (c-external int            (VariantTimeToSystemTime                 double SYSTEMTIME&))
  (c-external int            (SafeArrayGetDim                         int))
  (c-external int            (SafeArrayGetLBound                      int int <out> int&))
  (c-external int            (SafeArrayGetUBound                      int int <out> int&)))
)