;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Windows Types
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Stephane Le Cornec.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.platform.windows.WinTypes jazz


(c-type VOID                     (native void))
(c-type SHORT                    (native short))
(c-type SHORT*                   (pointer SHORT SHORT*))
(c-type INT                      (native int))
(c-type INT*                     (pointer INT INT*))
(c-type FLOAT                    (native float))
(c-type LONG                     (native long))
(c-type USHORT                   (native unsigned-short))
(c-type UINT                     (native unsigned-int))
(c-type UINT64                   (native unsigned-int64))
(c-type ULONG                    (native unsigned-long))
(c-type ULONG*                   (pointer ULONG ULONG*))
(c-type ULONG_PTR                ULONG)

(c-type BOOL                     (native bool))
(c-type BYTE                     (native unsigned-int8))
(c-type BYTE*                    (pointer BYTE BYTE*))
(c-type WORD                     (native unsigned-int16))
(c-type WORD*                    (pointer WORD WORD*))
(c-type DWORD                    ULONG)
(c-type DWORD*                   (pointer DWORD))
(c-type DWORD_PTR                ULONG_PTR)
(c-type PDWORD                   DWORD*)
(c-type LPDWORD                  DWORD*)

(c-type CHAR                     (native  char))
(c-type CHAR*                    (pointer CHAR))

(c-type WCHAR                    (native wchar_t))
(c-type WCHAR*                   (pointer WCHAR WCHAR*))
(c-type CWSTR                    (native wchar_t-string))
(c-type CWSTR*                   (pointer CWSTR))
(c-type LPWSTR                   WCHAR*)
(c-type LPCWSTR                  CWSTR)
(c-type STR                      (native char-string))
(c-type STR*                     (pointer STR))
(c-type TCHAR                    WCHAR)
(c-type TCHAR*                   (pointer TCHAR TCHAR*))
(c-type LPTSTR                   CWSTR)
(c-type LPCTSTR                  CWSTR) ;; tofix : const TCHAR*

(c-type LONG*                    (pointer LONG LONG*))
(c-type LONG&                    (pointer LONG LONG*)) ; near pointer
(c-type SIZE_T                   ULONG_PTR)
(c-type SIZE_T*                  (pointer SIZE_T))
(c-type PSIZE_T                  SIZE_T*)
(c-type LCID                     (native unsigned-int32))
(c-type GET_FILEEX_INFO_LEVELS   (native unsigned-int32))

(c-type VOID*                    (pointer VOID void*))
(c-type HANDLE                   (pointer VOID handle))
(c-type HANDLE*                  (pointer HANDLE))
(c-type HACCEL                   (pointer (struct "HACCEL__") handle))
(c-type HINSTANCE                (pointer (struct "HINSTANCE__") handle))
(c-type HMODULE                  HINSTANCE)
(c-type HRSRC                    (pointer (struct "HRSRC__") handle))
(c-type HGLOBAL                  HANDLE)
(c-type HICON                    (pointer (struct "HICON__") handle))
(c-type HCURSOR                  HICON)
(c-type HBRUSH                   (pointer (struct "HBRUSH__") handle))
(c-type HRGN                     (pointer (struct "HRGN__") handle))
(c-type HFONT                    (pointer (struct "HFONT__") handle))
(c-type HWND                     (pointer (struct "HWND__") handle))
(c-type HMENU                    (pointer (struct "HMENU__") handle))
(c-type HDC                      (pointer (struct "HDC__") handle))
(c-type HBITMAP                  (pointer (struct "HBITMAP__") handle))
(c-type HDROP                    (pointer (struct "HDROP__") handle))


(c-type HGDIOBJ                  (pointer VOID handle))

(c-type LONG_PTR                 LONG)
(c-type ULONG_PTR                ULONG)
(c-type UINT_PTR                 UINT)
(c-type LRESULT                  LONG_PTR)
(c-type WPARAM                   UINT_PTR)
(c-type LPARAM                   ULONG_PTR)

(c-type PVOID                    (pointer VOID))
(c-type LPVOID                   (pointer VOID))

(c-type ATOM                     UINT)
(c-type COLORREF                 DWORD)

(c-type WNDPROC                 (function (HWND UINT WPARAM LPARAM) LRESULT))
(c-type TIMERPROC               (function (HWND UINT UINT DWORD) VOID))
(c-type __CDHOOKPROC            (function (HWND UINT WPARAM LPARAM) UINT))
(c-type LPPAGEPAINTHOOK         __CDHOOKPROC)
(c-type LPPAGESETUPHOOK         __CDHOOKPROC)
(c-type LPSETUPHOOKPROC         __CDHOOKPROC)
(c-type LPPRINTHOOKPROC         __CDHOOKPROC)

;;;
;;;; Low level
;;;

(definition public WCHAR-array-make (c-function (INT) WCHAR* "___result_voidstar = calloc(___arg1,sizeof(WCHAR));"))
(definition public WCHAR-array-ref  (c-function (WCHAR* INT) WCHAR "___result = ___arg1[___arg2];"))
(definition public WCHAR-array-set! (c-function (WCHAR* INT WCHAR) VOID "___arg1[___arg2] = ___arg3;"))
(definition public WCHAR-array-free (c-function (WCHAR*) VOID "free(___arg1);"))
(definition public WCHAR-subarray   (c-function (WCHAR* INT) WCHAR* "___result_voidstar = ___arg1 + ___arg2;"))
(definition public WCHAR-string     (c-function (WCHAR*) CWSTR "___result = ___arg1;"))
(definition public WCHAR-copy       (c-function (WCHAR* CWSTR INT) VOID "wcsncpy"))
(definition public WCHAR-ref        (c-function (WCHAR*) ULONG "___result = (unsigned long)___arg1;")))
