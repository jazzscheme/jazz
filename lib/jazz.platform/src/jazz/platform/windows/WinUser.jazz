;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Windows User
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2012
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.platform.windows.WinUser jazz


(import (jazz.foreign)
        (jazz.platform.types)
        (jazz.platform.windows.WinTypes)
        (jazz.platform.windows.WinDef))


(c-declare winuser "WINUSERAPI BOOL WINAPI SetLayeredWindowAttributes(HWND,COLORREF,BYTE,DWORD);")


;;;
;;;; Constants
;;;


(c-constant LWA_COLORKEY                  #x01)
(c-constant LWA_ALPHA                     #x02)
(c-constant ULW_COLORKEY                  #x01)
(c-constant ULW_ALPHA                     #x02)
(c-constant ULW_OPAQUE                    #x04)

(c-constant GWL_EXSTYLE                   -20)
(c-constant GWL_STYLE                     -16)

(c-constant IMAGE_BITMAP                  0)
(c-constant IMAGE_ICON                    1)
(c-constant IMAGE_CURSOR                  2)
(c-constant IMAGE_ENHMETAFILE             3)

(c-constant LR_DEFAULTCOLOR               #x0000)
(c-constant LR_MONOCHROME                 #x0001)
(c-constant LR_COLOR                      #x0002)
(c-constant LR_COPYRETURNORG              #x0004)
(c-constant LR_COPYDELETEORG              #x0008)
(c-constant LR_LOADFROMFILE               #x0010)
(c-constant LR_LOADTRANSPARENT            #x0020)
(c-constant LR_DEFAULTSIZE                #x0040)
(c-constant LR_VGACOLOR                   #x0080)
(c-constant LR_LOADMAP3DCOLORS            #x1000)
(c-constant LR_CREATEDIBSECTION           #x2000)
(c-constant LR_COPYFROMRESOURCE           #x4000)
(c-constant LR_SHARED                     #x8000)


(c-constant CS_VREDRAW                    #x0001)
(c-constant CS_HREDRAW                    #x0002)
(c-constant CS_KEYCVTWINDOW               #x0004)
(c-constant CS_DBLCLKS                    #x0008)
(c-constant CS_OWNDC                      #x0020)
(c-constant CS_CLASSDC                    #x0040)
(c-constant CS_PARENTDC                   #x0080)
(c-constant CS_NOKEYCVT                   #x0100)
(c-constant CS_NOCLOSE                    #x0200)
(c-constant CS_SAVEBITS                   #x0800)
(c-constant CS_BYTEALIGNCLIENT            #x1000)
(c-constant CS_BYTEALIGNWINDOW            #x2000)
(c-constant CS_GLOBALCLASS                #x4000)


(c-constant COLOR_SCROLLBAR                0)
(c-constant COLOR_BACKGROUND               1)
(c-constant COLOR_ACTIVECAPTION            2)
(c-constant COLOR_INACTIVECAPTION          3)
(c-constant COLOR_MENU                     4)
(c-constant COLOR_WINDOW                   5)
(c-constant COLOR_WINDOWFRAME              6)
(c-constant COLOR_MENUTEXT                 7)
(c-constant COLOR_WINDOWTEXT               8)
(c-constant COLOR_CAPTIONTEXT              9)
(c-constant COLOR_ACTIVEBORDER            10)
(c-constant COLOR_INACTIVEBORDER          11)
(c-constant COLOR_APPWORKSPACE            12)
(c-constant COLOR_HIGHLIGHT               13)
(c-constant COLOR_HIGHLIGHTTEXT           14)
(c-constant COLOR_BTNFACE                 15)
(c-constant COLOR_BTNSHADOW               16)
(c-constant COLOR_GRAYTEXT                17)
(c-constant COLOR_BTNTEXT                 18)
(c-constant COLOR_INACTIVECAPTIONTEXT     19)
(c-constant COLOR_BTNHIGHLIGHT            20)
(c-constant COLOR_3DDKSHADOW              21)
(c-constant COLOR_3DLIGHT                 22)
(c-constant COLOR_INFOTEXT                23)
(c-constant COLOR_INFOBK                  24)
(c-constant COLOR_HOTLIGHT                26)
(c-constant COLOR_GRADIENTACTIVECAPTION   27)
(c-constant COLOR_GRADIENTINACTIVECAPTION 28)
(c-constant COLOR_DESKTOP                 COLOR_BACKGROUND)
(c-constant COLOR_3DFACE                  COLOR_BTNFACE)
(c-constant COLOR_3DSHADOW                COLOR_BTNSHADOW)
(c-constant COLOR_3DHIGHLIGHT             COLOR_BTNHIGHLIGHT)
(c-constant COLOR_3DHILIGHT               COLOR_BTNHIGHLIGHT)
(c-constant COLOR_BTNHILIGHT              COLOR_BTNHIGHLIGHT)


(c-constant CWP_ALL                       0)
(c-constant CWP_SKIPINVISIBLE             1)
(c-constant CWP_SKIPDISABLED              2)
(c-constant CWP_SKIPTRANSPARENT           4)

(c-constant IDC_ARROW                     32512)
(c-constant IDC_IBEAM                     32513)
(c-constant IDC_WAIT                      32514)
(c-constant IDC_CROSS                     32515)

(c-constant IDC_UPARROW                   32516)
(c-constant IDC_SIZENWSE                  32642)
(c-constant IDC_SIZENESW                  32643)
(c-constant IDC_SIZEWE                    32644)
(c-constant IDC_SIZENS                    32645)
(c-constant IDC_SIZEALL                   32646)
(c-constant IDC_NO                        32648)
(c-constant IDC_HAND                      32649)
(c-constant IDC_APPSTARTING               32650)
(c-constant IDC_HELP                      32651)

(c-constant GCL_HBRBACKGROUND -10)


(definition package HWND_BOTTOM ((c-function anonymous () HWND "___result_voidstar = ((HWND)1);")))
(definition package HWND_TOP ((c-function anonymous () HWND "___result_voidstar = ((HWND)0);")))


(c-constant RDW_ERASE 4)
(c-constant RDW_FRAME 1024)
(c-constant RDW_INTERNALPAINT 2)
(c-constant RDW_INVALIDATE 1)
(c-constant RDW_NOERASE 32)
(c-constant RDW_NOFRAME 2048)
(c-constant RDW_NOINTERNALPAINT 16)
(c-constant RDW_VALIDATE 8)
(c-constant RDW_ERASENOW 512)
(c-constant RDW_UPDATENOW 256)
(c-constant RDW_ALLCHILDREN 128)
(c-constant RDW_NOCHILDREN 64)

(c-constant GW_HWNDFIRST                  0)
(c-constant GW_HWNDLAST                   1)
(c-constant GW_HWNDNEXT                   2)
(c-constant GW_HWNDPREV                   3)
(c-constant GW_OWNER                      4)
(c-constant GW_CHILD                      5)
(c-constant GW_ENABLEDPOPUP               6)
(c-constant GW_MAX                        6)

(c-constant SPI_SETWORKAREA               #x002F)

(c-constant SW_SCROLLCHILDREN             1)
(c-constant SW_INVALIDATE                 2)
(c-constant SW_ERASE                      4)


(c-constant SW_HIDE                       0)
(c-constant SW_SHOWNORMAL                 1)
(c-constant SW_NORMAL                     1)
(c-constant SW_SHOWMINIMIZED              2)
(c-constant SW_SHOWMAXIMIZED              3)
(c-constant SW_MAXIMIZE                   3)
(c-constant SW_SHOWNOACTIVATE             4)
(c-constant SW_SHOW                       5)
(c-constant SW_MINIMIZE                   6)
(c-constant SW_SHOWMINNOACTIVE            7)
(c-constant SW_SHOWNA                     8)
(c-constant SW_RESTORE                    9)
(c-constant SW_SHOWDEFAULT                10)
(c-constant SW_MAX                        10)

(c-constant IDI_APPLICATION               32512)
(c-constant IDI_HAND                      32513)
(c-constant IDI_QUESTION                  32514)
(c-constant IDI_EXCLAMATION               32515)
(c-constant IDI_ASTERISK                  32516)
(c-constant IDI_WINLOGO                   32517)
(c-constant IDI_WARNING                   IDI_EXCLAMATION)
(c-constant IDI_ERROR                     IDI_HAND)
(c-constant IDI_INFORMATION               IDI_ASTERISK)


(c-constant SWP_DRAWFRAME                 #x0020)
(c-constant SWP_FRAMECHANGED              #x0020)
(c-constant SWP_HIDEWINDOW                #x0080)
(c-constant SWP_NOACTIVATE                #x0010)
(c-constant SWP_NOCOPYBITS                #x0100)
(c-constant SWP_NOMOVE                    #x0002)
(c-constant SWP_NOSIZE                    #x0001)
(c-constant SWP_NOREDRAW                  #x0008)
(c-constant SWP_NOZORDER                  #x0004)
(c-constant SWP_SHOWWINDOW                #x0040)
(c-constant SWP_NOOWNERZORDER             #x0200)
(c-constant SWP_NOREPOSITION              SWP_NOOWNERZORDER)
(c-constant SWP_NOSENDCHANGING            #x0400)
(c-constant SWP_DEFERERASE                #x2000)
(c-constant SWP_ASYNCWINDOWPOS            #x4000)


(c-constant FVIRTKEY                      TRUE)
(c-constant FNOINVERT                     #x02)
(c-constant FSHIFT                        #x04)
(c-constant FCONTROL                      #x08)
(c-constant FALT                          #x10)

(c-constant MB_ICONHAND                   #x00000010)
(c-constant MB_ICONQUESTION               #x00000020)
(c-constant MB_ICONEXCLAMATION            #x00000030)
(c-constant MB_ICONASTERISK               #x00000040)
(c-constant MB_APPLMODAL                  #x00000000)
(c-constant MB_SYSTEMMODAL                #x00001000)
(c-constant MB_TASKMODAL                  #x00002000)

(c-constant WA_INACTIVE                   0)
(c-constant WA_ACTIVE                     1)
(c-constant WA_CLICKACTIVE                2)

(c-constant WM_NULL                       #x0000)
(c-constant WM_CREATE                     #x0001)
(c-constant WM_DESTROY                    #x0002)
(c-constant WM_MOVE                       #x0003)
(c-constant WM_SIZE                       #x0005)
(c-constant WM_ACTIVATE                   #x0006)
(c-constant WM_SETFOCUS                   #x0007)
(c-constant WM_KILLFOCUS                  #x0008)
(c-constant WM_ENABLE                     #x000A)
(c-constant WM_SETREDRAW                  #x000B)
(c-constant WM_SETTEXT                    #x000C)
(c-constant WM_GETTEXT                    #x000D)
(c-constant WM_GETTEXTLENGTH              #x000E)
(c-constant WM_PAINT                      #x000F)
(c-constant WM_CLOSE                      #x0010)
(c-constant WM_QUERYENDSESSION            #x0011)
(c-constant WM_QUIT                       #x0012)
(c-constant WM_QUERYOPEN                  #x0013)
(c-constant WM_ERASEBKGND                 #x0014)
(c-constant WM_SYSCOLORCHANGE             #x0015)
(c-constant WM_ENDSESSION                 #x0016)
(c-constant WM_SHOWWINDOW                 #x0018)
(c-constant WM_WININICHANGE               #x001A)
(c-constant WM_SETTINGCHANGE              WM_WININICHANGE)

(c-constant WM_DEVMODECHANGE              #x001B)
(c-constant WM_ACTIVATEAPP                #x001C)
(c-constant WM_FONTCHANGE                 #x001D)
(c-constant WM_TIMECHANGE                 #x001E)
(c-constant WM_CANCELMODE                 #x001F)
(c-constant WM_SETCURSOR                  #x0020)
(c-constant WM_MOUSEACTIVATE              #x0021)
(c-constant WM_CHILDACTIVATE              #x0022)
(c-constant WM_QUEUESYNC                  #x0023)
(c-constant WM_GETMINMAXINFO              #x0024)

(c-constant WM_PAINTICON                  #x0026)
(c-constant WM_ICONERASEBKGND             #x0027)
(c-constant WM_NEXTDLGCTL                 #x0028)
(c-constant WM_SPOOLERSTATUS              #x002A)
(c-constant WM_DRAWITEM                   #x002B)
(c-constant WM_MEASUREITEM                #x002C)
(c-constant WM_DELETEITEM                 #x002D)
(c-constant WM_VKEYTOITEM                 #x002E)
(c-constant WM_CHARTOITEM                 #x002F)
(c-constant WM_SETFONT                    #x0030)
(c-constant WM_GETFONT                    #x0031)
(c-constant WM_SETHOTKEY                  #x0032)
(c-constant WM_GETHOTKEY                  #x0033)
(c-constant WM_QUERYDRAGICON              #x0037)
(c-constant WM_COMPAREITEM                #x0039)
(c-constant WM_GETOBJECT                  #x003D)
(c-constant WM_COMPACTING                 #x0041)
(c-constant WM_COMMNOTIFY                 #x0044)
(c-constant WM_WINDOWPOSCHANGING          #x0046)
(c-constant WM_WINDOWPOSCHANGED           #x0047)
(c-constant WM_POWER                      #x0048)
(c-constant WM_COPYDATA                   #x004A)
(c-constant WM_CANCELJOURNAL              #x004B)

(c-constant WM_NOTIFY                     #x004E)
(c-constant WM_INPUTLANGCHANGEREQUEST     #x0050)
(c-constant WM_INPUTLANGCHANGE            #x0051)
(c-constant WM_TCARD                      #x0052)
(c-constant WM_HELP                       #x0053)
(c-constant WM_USERCHANGED                #x0054)
(c-constant WM_NOTIFYFORMAT               #x0055)

(c-constant WM_CONTEXTMENU                #x007B)
(c-constant WM_STYLECHANGING              #x007C)
(c-constant WM_STYLECHANGED               #x007D)
(c-constant WM_DISPLAYCHANGE              #x007E)
(c-constant WM_GETICON                    #x007F)
(c-constant WM_SETICON                    #x0080)

(c-constant WM_NCCREATE                   #x0081)
(c-constant WM_NCDESTROY                  #x0082)
(c-constant WM_NCCALCSIZE                 #x0083)
(c-constant WM_NCHITTEST                  #x0084)
(c-constant WM_NCPAINT                    #x0085)
(c-constant WM_NCACTIVATE                 #x0086)
(c-constant WM_GETDLGCODE                 #x0087)
(c-constant WM_SYNCPAINT                  #x0088)
(c-constant WM_NCMOUSEMOVE                #x00A0)
(c-constant WM_NCLBUTTONDOWN              #x00A1)
(c-constant WM_NCLBUTTONUP                #x00A2)
(c-constant WM_NCLBUTTONDBLCLK            #x00A3)
(c-constant WM_NCRBUTTONDOWN              #x00A4)
(c-constant WM_NCRBUTTONUP                #x00A5)
(c-constant WM_NCRBUTTONDBLCLK            #x00A6)
(c-constant WM_NCMBUTTONDOWN              #x00A7)
(c-constant WM_NCMBUTTONUP                #x00A8)
(c-constant WM_NCMBUTTONDBLCLK            #x00A9)

(c-constant WM_KEYFIRST                   #x0100)
(c-constant WM_KEYDOWN                    #x0100)
(c-constant WM_KEYUP                      #x0101)
(c-constant WM_CHAR                       #x0102)
(c-constant WM_DEADCHAR                   #x0103)
(c-constant WM_SYSKEYDOWN                 #x0104)
(c-constant WM_SYSKEYUP                   #x0105)
(c-constant WM_SYSCHAR                    #x0106)
(c-constant WM_SYSDEADCHAR                #x0107)
(c-constant WM_KEYLAST                    #x0108)
(c-constant WM_IME_STARTCOMPOSITION       #x010D)
(c-constant WM_IME_ENDCOMPOSITION         #x010E)
(c-constant WM_IME_COMPOSITION            #x010F)
(c-constant WM_IME_KEYLAST                #x010F)

(c-constant WM_INITDIALOG                 #x0110)
(c-constant WM_COMMAND                    #x0111)
(c-constant WM_SYSCOMMAND                 #x0112)
(c-constant WM_TIMER                      #x0113)
(c-constant WM_HSCROLL                    #x0114)
(c-constant WM_VSCROLL                    #x0115)
(c-constant WM_INITMENU                   #x0116)
(c-constant WM_INITMENUPOPUP              #x0117)
(c-constant WM_MENUSELECT                 #x011F)
(c-constant WM_MENUCHAR                   #x0120)
(c-constant WM_ENTERIDLE                  #x0121)
(c-constant WM_CTLCOLORMSGBOX             #x0132)
(c-constant WM_CTLCOLOREDIT               #x0133)
(c-constant WM_CTLCOLORLISTBOX            #x0134)
(c-constant WM_CTLCOLORBTN                #x0135)
(c-constant WM_CTLCOLORDLG                #x0136)
(c-constant WM_CTLCOLORSCROLLBAR          #x0137)
(c-constant WM_CTLCOLORSTATIC             #x0138)

(c-constant WM_MOUSEFIRST                 #x0200)
(c-constant WM_MOUSEMOVE                  #x0200)
(c-constant WM_LBUTTONDOWN                #x0201)
(c-constant WM_LBUTTONUP                  #x0202)
(c-constant WM_LBUTTONDBLCLK              #x0203)
(c-constant WM_RBUTTONDOWN                #x0204)
(c-constant WM_RBUTTONUP                  #x0205)
(c-constant WM_RBUTTONDBLCLK              #x0206)
(c-constant WM_MBUTTONDOWN                #x0207)
(c-constant WM_MBUTTONUP                  #x0208)
(c-constant WM_MBUTTONDBLCLK              #x0209)
(c-constant WM_MOUSEWHEEL                 #x020A)
(c-constant WM_MOUSELAST                  #x020A)
(c-constant WM_PARENTNOTIFY               #x0210)
(c-constant WM_ENTERMENULOOP              #x0211)
(c-constant WM_EXITMENULOOP               #x0212)
(c-constant WM_NEXTMENU                   #x0213)
(c-constant WM_SIZING                     #x0214)
(c-constant WM_CAPTURECHANGED             #x0215)
(c-constant WM_MOVING                     #x0216)
(c-constant WM_POWERBROADCAST             #x0218)
(c-constant WM_DEVICECHANGE               #x0219)

(c-constant WM_MDICREATE                  #x0220)
(c-constant WM_MDIDESTROY                 #x0221)
(c-constant WM_MDIACTIVATE                #x0222)
(c-constant WM_MDIRESTORE                 #x0223)
(c-constant WM_MDINEXT                    #x0224)
(c-constant WM_MDIMAXIMIZE                #x0225)
(c-constant WM_MDITILE                    #x0226)
(c-constant WM_MDICASCADE                 #x0227)
(c-constant WM_MDIICONARRANGE             #x0228)
(c-constant WM_MDIGETACTIVE               #x0229)
(c-constant WM_MDISETMENU                 #x0230)
(c-constant WM_ENTERSIZEMOVE              #x0231)
(c-constant WM_EXITSIZEMOVE               #x0232)
(c-constant WM_DROPFILES                  #x0233)
(c-constant WM_MDIREFRESHMENU             #x0234)

(c-constant WM_IME_SETCONTEXT             #x0281)
(c-constant WM_IME_NOTIFY                 #x0282)
(c-constant WM_IME_CONTROL                #x0283)
(c-constant WM_IME_COMPOSITIONFULL        #x0284)
(c-constant WM_IME_SELECT                 #x0285)
(c-constant WM_IME_CHAR                   #x0286)
(c-constant WM_IME_KEYDOWN                #x0290)
(c-constant WM_IME_KEYUP                  #x0291)
(c-constant WM_MOUSEHOVER                 #x02A1)
(c-constant WM_MOUSELEAVE                 #x02A3)

(c-constant WM_CUT                        #x0300)
(c-constant WM_COPY                       #x0301)
(c-constant WM_PASTE                      #x0302)
(c-constant WM_CLEAR                      #x0303)
(c-constant WM_UNDO                       #x0304)
(c-constant WM_RENDERFORMAT               #x0305)
(c-constant WM_RENDERALLFORMATS           #x0306)
(c-constant WM_DESTROYCLIPBOARD           #x0307)
(c-constant WM_DRAWCLIPBOARD              #x0308)
(c-constant WM_PAINTCLIPBOARD             #x0309)
(c-constant WM_VSCROLLCLIPBOARD           #x030A)
(c-constant WM_SIZECLIPBOARD              #x030B)
(c-constant WM_ASKCBFORMATNAME            #x030C)
(c-constant WM_CHANGECBCHAIN              #x030D)
(c-constant WM_HSCROLLCLIPBOARD           #x030E)
(c-constant WM_QUERYNEWPALETTE            #x030F)
(c-constant WM_PALETTEISCHANGING          #x0310)
(c-constant WM_PALETTECHANGED             #x0311)
(c-constant WM_HOTKEY                     #x0312)

(c-constant WM_PRINT                      #x0317)
(c-constant WM_PRINTCLIENT                #x0318)

(c-constant WM_HANDHELDFIRST              #x0358)
(c-constant WM_HANDHELDLAST               #x035F)

(c-constant WM_AFXFIRST                   #x0360)
(c-constant WM_AFXLAST                    #x037F)

(c-constant WM_PENWINFIRST                #x0380)
(c-constant WM_PENWINLAST                 #x038F)

(c-constant WM_USER                       #x0400)
(c-constant WM_APP                        #x8000)


(c-constant SIZE_RESTORED                 0)
(c-constant SIZE_MINIMIZED                1)
(c-constant SIZE_MAXIMIZED                2)
  

(c-constant PM_NOREMOVE                   #x0000)
(c-constant PM_REMOVE                     #x0001)
(c-constant PM_NOYIELD                    #x0002)


(c-constant HTERROR                       -2)
(c-constant HTTRANSPARENT                 -1)
(c-constant HTNOWHERE                     0)
(c-constant HTCLIENT                      1)
(c-constant HTCAPTION                     2)
(c-constant HTSYSMENU                     3)
(c-constant HTGROWBOX                     4)
(c-constant HTSIZE                        HTGROWBOX)
(c-constant HTMENU                        5)
(c-constant HTHSCROLL                     6)
(c-constant HTVSCROLL                     7)
(c-constant HTMINBUTTON                   8)
(c-constant HTMAXBUTTON                   9)
(c-constant HTLEFT                        10)
(c-constant HTRIGHT                       11)
(c-constant HTTOP                         12)
(c-constant HTTOPLEFT                     13)
(c-constant HTTOPRIGHT                    14)
(c-constant HTBOTTOM                      15)
(c-constant HTBOTTOMLEFT                  16)
(c-constant HTBOTTOMRIGHT                 17)
(c-constant HTBORDER                      18)
(c-constant HTREDUCE                      HTMINBUTTON)
(c-constant HTZOOM                        HTMAXBUTTON)
(c-constant HTSIZEFIRST                   HTLEFT)
(c-constant HTSIZELAST                    HTBOTTOMRIGHT)
(c-constant HTOBJECT                      19)
(c-constant HTCLOSE                       20)
(c-constant HTHELP                        21)

(c-constant MA_ACTIVATE                   1)
(c-constant MA_ACTIVATEANDEAT             2)
(c-constant MA_NOACTIVATE                 3)
(c-constant MA_NOACTIVATEANDEAT           4)


(c-constant SPI_GETWORKAREA               48)


(c-constant QS_ALLINPUT                   #x04FF)


(c-constant MB_ICONWARNING                48)
(c-constant MB_ICONERROR                  16)
(c-constant MB_OK                         0)
(c-constant MB_ICONINFORMATION            64)
(c-constant MB_OKCANCEL                   1)
(c-constant MB_YESNO                      4)
(c-constant MB_YESNOCANCEL                3)


(c-constant IDOK                          1)
(c-constant IDCANCEL                      2)
(c-constant IDABORT                       3)
(c-constant IDRETRY                       4)
(c-constant IDIGNORE                      5)
(c-constant IDYES                         6)
(c-constant IDNO                          7)


(c-constant CDS_FULLSCREEN                4)


;;;
;;;; Enumerations
;;;


(c-enumeration CLIPBOARD_FORMAT
  (CF_TEXT                       1)
  (CF_BITMAP                     2)
  (CF_METAFILEPICT               3)
  (CF_SYLK                       4)
  (CF_DIF                        5)
  (CF_TIFF                       6)
  (CF_OEMTEXT                    7)
  (CF_DIB                        8)
  (CF_PALETTE                    9)
  (CF_PENDATA                    10)
  (CF_RIFF                       11)
  (CF_WAVE                       12)
  (CF_UNICODETEXT                13)
  (CF_ENHMETAFILE                14)
  (CF_HDROP                      15)
  (CF_LOCALE                     16)
  (CF_MAX                        17))


(c-enumeration VIRTUAL_KEYS
  (VK_LBUTTON                    #x01)
  (VK_RBUTTON                    #x02)
  (VK_CANCEL                     #x03)
  (VK_MBUTTON                    #x04)
  
  (VK_BACK                       #x08)
  (VK_TAB                        #x09)
  
  (VK_CLEAR                      #x0C)
  (VK_RETURN                     #x0D)
  
  (VK_SHIFT                      #x10)
  (VK_CONTROL                    #x11)
  (VK_MENU                       #x12)
  (VK_PAUSE                      #x13)
  (VK_CAPITAL                    #x14)
  
  (VK_ESCAPE                     #x1B)
  
  (VK_SPACE                      #x20)
  (VK_PRIOR                      #x21)
  (VK_NEXT                       #x22)
  (VK_END                        #x23)
  (VK_HOME                       #x24)
  (VK_LEFT                       #x25)
  (VK_UP                         #x26)
  (VK_RIGHT                      #x27)
  (VK_DOWN                       #x28)
  (VK_SELECT                     #x29)
  (VK_PRINT                      #x2A)
  (VK_EXECUTE                    #x2B)
  (VK_SNAPSHOT                   #x2C)
  (VK_INSERT                     #x2D)
  (VK_DELETE                     #x2E)
  (VK_HELP                       #x2F)
  
  (VK_LWIN                       #x5B)
  (VK_RWIN                       #x5C)
  (VK_APPS                       #x5D)
  
  (VK_NUMPAD0                    #x60)
  (VK_NUMPAD1                    #x61)
  (VK_NUMPAD2                    #x62)
  (VK_NUMPAD3                    #x63)
  (VK_NUMPAD4                    #x64)
  (VK_NUMPAD5                    #x65)
  (VK_NUMPAD6                    #x66)
  (VK_NUMPAD7                    #x67)
  (VK_NUMPAD8                    #x68)
  (VK_NUMPAD9                    #x69)
  (VK_MULTIPLY                   #x6A)
  (VK_ADD                        #x6B)
  (VK_SEPARATOR                  #x6C)
  (VK_SUBTRACT                   #x6D)
  (VK_DECIMAL                    #x6E)
  (VK_DIVIDE                     #x6F)
  (VK_F1                         #x70)
  (VK_F2                         #x71)
  (VK_F3                         #x72)
  (VK_F4                         #x73)
  (VK_F5                         #x74)
  (VK_F6                         #x75)
  (VK_F7                         #x76)
  (VK_F8                         #x77)
  (VK_F9                         #x78)
  (VK_F10                        #x79)
  (VK_F11                        #x7A)
  (VK_F12                        #x7B)
  (VK_F13                        #x7C)
  (VK_F14                        #x7D)
  (VK_F15                        #x7E)
  (VK_F16                        #x7F)
  (VK_F17                        #x80)
  (VK_F18                        #x81)
  (VK_F19                        #x82)
  (VK_F20                        #x83)
  (VK_F21                        #x84)
  (VK_F22                        #x85)
  (VK_F23                        #x86)
  (VK_F24                        #x87)
  
  (VK_NUMLOCK                    #x90)
  (VK_SCROLL                     #x91)
  (VK_OEM_NEC_EQUAL              #x92)
  
  (VK_LSHIFT                     #xA0)
  (VK_RSHIFT                     #xA1)
  (VK_LCONTROL                   #xA2)
  (VK_RCONTROL                   #xA3)
  (VK_LMENU                      #xA4)
  (VK_RMENU                      #xA5)
  (VK_BROWSER_BACK               #xA6)
  (VK_BROWSER_FORWARD            #xA7)
  (VK_BROWSER_REFRESH            #xA8)
  (VK_BROWSER_STOP               #xA9)
  (VK_BROWSER_SEARCH             #xAA)
  (VK_BROWSER_FAVORITES          #xAB)
  (VK_BROWSER_HOME               #xAC)
  (VK_VOLUME_MUTE                #xAD)
  (VK_VOLUME_DOWN                #xAE)
  (VK_VOLUME_UP                  #xAF)
  (VK_MEDIA_NEXT_TRACK           #xB0)
  (VK_MEDIA_PREV_TRACK           #xB1)
  (VK_MEDIA_STOP                 #xB2)
  (VK_MEDIA_PLAY_PAUSE           #xB3)
  (VK_LAUNCH_MAIL                #xB4)
  (VK_LAUNCH_MEDIA_SELECT        #xB5)
  (VK_LAUNCH_APP1                #xB6)
  (VK_LAUNCH_APP2                #xB7)
  
  (VK_OEM_1                      #xBA)
  (VK_OEM_PLUS                   #xBB)
  (VK_OEM_COMMA                  #xBC)
  (VK_OEM_MINUS                  #xBD)
  (VK_OEM_PERIOD                 #xBE)
  (VK_OEM_2                      #xBF)
  (VK_OEM_3                      #xC0)
  
  (VK_OEM_4                      #xDB)
  (VK_OEM_5                      #xDC)
  (VK_OEM_6                      #xDD)
  (VK_OEM_7                      #xDE)
  (VK_OEM_8                      #xDF))


(c-enumeration WINSTYLE
  (WS_OVERLAPPED                 #x00000000)
  (WS_POPUP                      #x80000000)
  (WS_CHILD                      #x40000000)
  (WS_MINIMIZE                   #x20000000)
  (WS_VISIBLE                    #x10000000)
  (WS_DISABLED                   #x08000000)
  (WS_CLIPSIBLINGS               #x04000000)
  (WS_CLIPCHILDREN               #x02000000)
  (WS_MAXIMIZE                   #x01000000)
  (WS_CAPTION                    #x00C00000)
  (WS_BORDER                     #x00800000)
  (WS_DLGFRAME                   #x00400000)
  (WS_VSCROLL                    #x00200000)
  (WS_HSCROLL                    #x00100000)
  (WS_SYSMENU                    #x00080000)
  (WS_THICKFRAME                 #x00040000)
  (WS_GROUP                      #x00020000)
  (WS_TABSTOP                    #x00010000))


(c-enumeration WINEXSTYLE
  (WS_EX_DLGMODALFRAME           #x00000001)
  (WS_EX_NOPARENTNOTIFY          #x00000004)
  (WS_EX_TOPMOST                 #x00000008)
  (WS_EX_ACCEPTFILES             #x00000010)
  (WS_EX_TRANSPARENT             #x00000020)
  (WS_EX_MDICHILD                #x00000040)
  (WS_EX_TOOLWINDOW              #x00000080)
  (WS_EX_WINDOWEDGE              #x00000100)
  (WS_EX_CLIENTEDGE              #x00000200)
  (WS_EX_CONTEXTHELP             #x00000400)
  (WS_EX_RIGHT                   #x00001000)
  (WS_EX_LEFT                    #x00000000)
  (WS_EX_RTLREADING              #x00002000)
  (WS_EX_LTRREADING              #x00000000)
  (WS_EX_LEFTSCROLLBAR           #x00004000)
  (WS_EX_RIGHTSCROLLBAR          #x00000000)
  (WS_EX_CONTROLPARENT           #x00010000)
  (WS_EX_STATICEDGE              #x00020000)
  (WS_EX_APPWINDOW               #x00040000)
  (WS_EX_LAYERED                 #x00080000))


(c-constant WS_MINIMIZEBOX                #x00020000)
(c-constant WS_MAXIMIZEBOX                #x00010000)

(c-constant WS_OVERLAPPEDWINDOW
  (bitwise-ior WS_CAPTION
               WS_SYSMENU
               WS_THICKFRAME
               WS_MINIMIZEBOX
               WS_MAXIMIZEBOX))

(c-constant WS_POPUPWINDOW
  (bitwise-ior WS_POPUP
               WS_BORDER
               WS_SYSMENU))

(c-constant WS_TILED                      WS_OVERLAPPED)
(c-constant WS_ICONIC                     WS_MINIMIZE)
(c-constant WS_SIZEBOX                    WS_THICKFRAME)
(c-constant WS_TILEDWINDOW                WS_OVERLAPPEDWINDOW)

(c-constant WS_EX_OVERLAPPEDWINDOW        (bitwise-ior WS_EX_WINDOWEDGE WS_EX_CLIENTEDGE))
(c-constant WS_EX_PALETTEWINDOW           (bitwise-ior WS_EX_WINDOWEDGE WS_EX_TOOLWINDOW WS_EX_TOPMOST))


;;;
;;;; Structures
;;;


(c-structure ACCEL
  (BYTE fVirt)
  (WORD key)
  (WORD cmd))

(c-type LPACCEL ACCEL*)

(definition make-ACCEL-array (c-function anonymous (INT) ACCEL* "___result_voidstar = calloc(___arg1,sizeof(ACCEL));"))
(definition ACCEL-array-ref  (c-function anonymous (ACCEL* INT) ACCEL* "___result_voidstar = (___arg1 + ___arg2);"))

(c-structure TRACKMOUSEEVENT
  (DWORD cbSize)
  (DWORD dwFlags)
  (HWND  hwndTrack)
  (DWORD dwHoverTime))


(c-type LPTRACKMOUSEEVENT TRACKMOUSEEVENT*)


(c-structure MSG
  (HWND hwnd)
  (UINT message)
  (WPARAM wParam)
  (LPARAM lParam)
  (DWORD time))


(c-type LPMSG MSG*)


(c-structure PAINTSTRUCT
  (HDC  hdc)
  (BOOL fErase)
  (RECT rcPaint)
  (BOOL fRestore)
  (BOOL fIncUpdate)
  (BYTE rgbReserved 32))


(c-structure (WNDCLASSEX "WNDCLASSEXW" WNDCLASSEXW)
  (UINT cbSize)
  (UINT style)
  (WNDPROC lpfnWndProc) ;; Warning.  Incompatible pointer. Qualificatif CALLBACK -> __stdcall
  (INT cbClsExtra)
  (INT cbWndExtra)
  (HINSTANCE hInstance)
  (HICON hIcon)
  (HCURSOR hCursor)
  (HBRUSH hbrBackground)
  (LPCTSTR lpszMenuName) ;; Warning. Discard qualifier. Qualificatif const
  (LPCTSTR lpszClassName) ;; Warning. Discard qualifier. Qualificatif const
  (HICON hIconSm))


(c-structure WINDOWPLACEMENT
  (UINT length)
  (UINT flags)
  (UINT showCmd)
  (POINT ptMinPosition)
  (POINT ptMaxPosition)
  (RECT rcNormalPosition))


(c-structure MONITORINFO
  (DWORD cbSize)
  (RECT rcMonitor)
  (RECT rcWork)
  (DWORD dwFlags))


(c-structure LASTINPUTINFO
  (UINT cbSize)
  (DWORD dwTime))


(c-type PLASTINPUTINFO LASTINPUTINFO*)


;;;
;;;; Externals
;;;


(c-external (RegisterClassEx            WNDCLASSEX*) ATOM                                                            "RegisterClassExW")
;; Warning : ATOM should be string...
(c-external (CreateWindowEx             DWORD ATOM LPCWSTR DWORD INT INT INT INT HWND HMENU HINSTANCE LPVOID) HWND   "CreateWindowExW")
(c-external (DefWindowProc              HWND UINT WPARAM LPARAM) LRESULT                                             "DefWindowProcW")
(c-external (GetMessage                 MSG* HWND UINT UINT) BOOL                                                    "GetMessageW")
(c-external (PeekMessage                MSG* HWND UINT UINT UINT) BOOL                                               "PeekMessageW")
(c-external (TranslateMessage           MSG*) VOID)
(c-external (DispatchMessage            MSG*) VOID                                                                   "DispatchMessageW")
(c-external (LockWindowUpdate           HWND) BOOL)
(c-external (DestroyWindow              HWND) BOOL)
(c-external (BeginPaint                 HWND PAINTSTRUCT*) HDC)
(c-external (EndPaint                   HWND PAINTSTRUCT*) BOOL)
(c-external (SetCapture                 HWND) HWND)
(c-external (ReleaseCapture) BOOL)
(c-external (FindWindow                 LPCWSTR LPCWSTR) HWND                                                        "FindWindowW")
(c-external (ShowWindow                 HWND INT) BOOL)
(c-external (LoadImage                  HINSTANCE LPCWSTR UINT INT INT UINT) HANDLE                                  "LoadImageW")
(c-external (MapWindowPoints            HWND HWND LPPOINT UINT) INT)
(c-external (GetWindowRect              HWND LPRECT) BOOL)
(c-external (GetClientRect              HWND LPRECT) BOOL)
(c-external (ValidateRect               HWND LPCRECT) BOOL)
(c-external (InvalidateRect             HWND LPCRECT BOOL) BOOL)
(c-external (InvalidateRgn              HWND HRGN BOOL) BOOL)
(c-external (ValidateRgn                HWND HRGN) BOOL)
(c-external (BringWindowToTop           HWND) BOOL)
(c-external (SetWindowPos               HWND HWND INT INT INT INT UINT) BOOL)
(c-external (GetWindowPlacement         HWND WINDOWPLACEMENT*) BOOL)
(c-external (SetWindowPlacement         HWND WINDOWPLACEMENT*) BOOL)
(c-external (SetFocus                   HWND) HWND)
(c-external (MoveWindow                 HWND INT INT INT INT BOOL) BOOL)
(c-external (IsWindowEnabled            HWND) BOOL)
(c-external (GetFocus) HWND)
(c-external (EnableWindow               HWND BOOL) BOOL)
(c-external (ScrollWindowEx             HWND INT INT LPCRECT LPCRECT HRGN LPRECT UINT) INT)
(c-external (SetForegroundWindow        HWND) BOOL)
(c-external (FlashWindow                HWND BOOL) BOOL)
(c-external (GetWindowLong              HWND INT) LONG)
(c-external (SetWindowLong              HWND INT ULONG) LONG)
(c-external (RedrawWindow               HWND LPCRECT HRGN UINT) BOOL)
(c-external (SendMessage                HWND UINT WPARAM LPARAM) LRESULT)
(c-external (PostMessage                HWND UINT WPARAM LPARAM) BOOL)
(c-external (SetParent                  HWND HWND) HWND)
(c-external (GetWindow                  HWND UINT) HWND)
(c-external (GetTopWindow               HWND) HWND)
(c-external (IsWindowVisible            HWND) BOOL)
(c-external (SetWindowText              HWND LPCWSTR) BOOL)
(c-external (GetCursorPos               LPPOINT) BOOL)
(c-external (SetCursorPos               INT INT) BOOL)
(c-external (GetUpdateRect              HWND LPRECT BOOL) BOOL)
(c-external (GetUpdateRgn               HWND HRGN BOOL) INT)
(c-external (GetClassLong               HWND INT) DWORD)
(c-external (UpdateWindow               HWND) BOOL)
(c-external (TrackMouseEvent            LPTRACKMOUSEEVENT) BOOL)
(c-external (GetDesktopWindow) HWND)
(c-external (GetSysColorBrush           INT) HBRUSH)
(c-external (GetAsyncKeyState           INT) SHORT)
(c-external (SetLayeredWindowAttributes HWND COLORREF BYTE DWORD) BOOL)
(c-external (GetWindowTextLength        HWND) INT)
(c-external (GetWindowText              HWND WCHAR* INT) INT)
;; Warning : TIMERPROC
(c-external (SetTimer                   HWND UINT UINT TIMERPROC) UINT)
(c-external (KillTimer                  HWND UINT) BOOL)
(c-external (SetCursor                  HCURSOR) HCURSOR)
(c-external (ShowCursor                 BOOL) INT)
(c-external (MessageBeep                INT) BOOL)
(c-external (MessageBox                 HWND LPCWSTR LPCWSTR INT) INT)
(c-external (OpenClipboard              HWND) BOOL)
(c-external (CloseClipboard) BOOL)
(c-external (EmptyClipboard) BOOL)
(c-external (RegisterClipboardFormat    LPCWSTR) INT                                                                "RegisterClipboardFormatW")
(c-external (EnumClipboardFormats       INT) INT)
(c-external (SystemParametersInfo       INT INT LPRECT INT) BOOL)
(c-external (GetDC                      HWND) HDC)
(c-external (ReleaseDC                  HWND HDC) INT)
(c-external (GetGuiResources            HANDLE DWORD) DWORD)
(c-external (GetLastInputInfo           PLASTINPUTINFO) BOOL)
(c-external (GetTickCount) DWORD)


(c-external (WindowFromPoint LPPOINT) HWND
  "___result_voidstar = WindowFromPoint(*___arg1);")


(c-external (ChildWindowFromPointEx HWND LPPOINT UINT) HWND
  "___result_voidstar = ChildWindowFromPointEx( ___arg1, *(___arg2), ___arg3 );")


(c-external (LoadCursorInt WORD) HCURSOR
  "___result_voidstar = LoadImage(NULL,MAKEINTRESOURCE(___arg1),IMAGE_CURSOR,0,0,LR_SHARED);")


(c-external (GetClipboardText UINT) scheme-object
    #<<end-of-c-code
    ___SCMOBJ r = ___FIX(___UNKNOWN_ERR);
     HGLOBAL global_copy = GetClipboardData (___arg1);

     if (global_copy != NULL)
     {
         ___U16 *locked_copy = GlobalLock (global_copy);

         if (locked_copy != NULL)
         {
             int i;
             ___U16 *vec;
             int len = 0;

             while (locked_copy[len] != 0)
                 len++;

             r = ___EXT(___alloc_scmobj) (___ps, ___sU8VECTOR, len * sizeof (___U16));
             
             if (___FIXNUMP(r))
                 r = ___FIX(___HEAP_OVERFLOW_ERR);
             else
             {
                 vec = ___CAST(___U16*, ___BODY_AS(r, ___tSUBTYPED));

                 while (len-- > 0)
                     vec[len] = locked_copy[len];
             }
             GlobalUnlock (locked_copy);
         }
     }
     ___result = r;
end-of-c-code
)


(c-external (SetClipboardText scheme-object UINT) void
    #<<end-of-c-code
    int len = (___INT(___U8VECTORLENGTH(___arg1))/2) - 1;
     ___U16 *vec = ___CAST(___U16*, ___BODY_AS(___arg1, ___tSUBTYPED)) + 1;
     HGLOBAL global_copy = GlobalAlloc (GMEM_MOVEABLE, (len+1) * sizeof(___U16));

     if (global_copy != NULL)
     {
         ___U16 *locked_copy = GlobalLock (global_copy);

         if (locked_copy == NULL)
             GlobalFree (global_copy);
         else
         {
             int i;

             for (i=0; i<len; i++)
                 locked_copy[i] = vec[i];
             locked_copy[len] = 0;

             GlobalUnlock (global_copy);
  
             EmptyClipboard ();

             if (!SetClipboardData (___arg2, global_copy))
                 GlobalFree (global_copy);
         }
     }
end-of-c-code
)


;;;
;;;; Timezone
;;;


(c-external (get-timezone-offset) LONG
    #<<end-of-c-code
    TIME_ZONE_INFORMATION tzi;
    DWORD result = GetTimeZoneInformation(&tzi);
    switch (result)
    {
    case TIME_ZONE_ID_UNKNOWN:
    case TIME_ZONE_ID_STANDARD:
      ___result = tzi.Bias * -60;
      break;
    case TIME_ZONE_ID_DAYLIGHT:
      ___result = (tzi.Bias + tzi.DaylightBias) * -60;
      break;
    case TIME_ZONE_ID_INVALID:
    default:
      ___result = 0;
    }
end-of-c-code
)


;;;
;;;; Windows
;;;


(c-external (convert-HINSTANCE UINT) HINSTANCE
  "___result_voidstar = (void*)___arg1;")


(definition process-hwnd-message
  #f)

(definition package (set-process-hwnd-message proc)
  (set! process-hwnd-message proc))


(c-definition package (call-process-hwnd-message hwnd umsg wparam lparam) (HWND UINT WPARAM LPARAM) LRESULT "windowproc" "static"
  (process-hwnd-message hwnd umsg wparam lparam))


;;;
;;;; Monitors
;;;


(c-type HMONITOR        (pointer VOID handle))
(c-type MONITORENUMPROC (function (HMONITOR HDC LPRECT LPARAM) BOOL))


(c-external (EnumDisplayMonitors HDC LPRECT MONITORENUMPROC LPARAM) BOOL)
(c-external (MonitorFromWindow   HWND DWORD) HMONITOR)
(c-external (GetMonitorInfo      HMONITOR MONITORINFO*) BOOL)


(c-definition (enum-monitors-proc monitor dc rect data) (HMONITOR HDC LPRECT LPARAM) BOOL "enum_monitors_proc" ""
  (enqueue (serial->object data) monitor)
  1))
