;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.project)
        (jazz.editor.jazz))


(form
  (<Project>                   name: jazz.presence   documentation: {File :context "doc" "presence.jml"} description-file: {File :context ".package"}
    (<*>                                             tag-reference: {File :context "test-server.project"})
    (<*>                                             tag-reference: {File :context "test-client.project"})
    (<Project-Directory>                             directory: {Directory :context "src"}
      (<Project-Directory>                           directory: {Directory :context "src" "jazz"}
        (<Project-Directory>                         directory: {Directory :context "src" "jazz" "presence"}
          (<Project-Directory>                       directory: {Directory :context "src" "jazz" "presence" "register"}
            (<Jazz-File>       name: Register        source: {File :context "src" "jazz" "presence" "register" "Register.jazz"})
            (<Jazz-File>       name: stub            source: {File :context "src" "jazz" "presence" "register" "stub.jazz"}))
          (<Project-Directory>                       directory: {Directory :context "src" "jazz" "presence" "remotable"}
            (<Jazz-File>       name: IOR             source: {File :context "src" "jazz" "presence" "remotable" "IOR.jazz"})
            (<Jazz-File>       name: Local-Proxy     source: {File :context "src" "jazz" "presence" "remotable" "Local-Proxy.jazz"})
            (<Jazz-File>       name: Proxy           source: {File :context "src" "jazz" "presence" "remotable" "Proxy.jazz"})
            (<Jazz-File>       name: Remotable-Stub  source: {File :context "src" "jazz" "presence" "remotable" "Remotable-Stub.jazz"})
            (<Jazz-File>       name: Remote-Listener source: {File :context "src" "jazz" "presence" "remotable" "Remote-Listener.jazz"})
            (<Jazz-File>       name: Remote-Proxy    source: {File :context "src" "jazz" "presence" "remotable" "Remote-Proxy.jazz"})
            (<Jazz-File>       name: Stub-Interface  source: {File :context "src" "jazz" "presence" "remotable" "Stub-Interface.jazz"}))
          (<Jazz-File>         name: _presence       source: {File :context "src" "jazz" "presence" "_presence.jazz"})
          (<Jazz-File>         name: autoload        source: {File :context "src" "jazz" "presence" "autoload.jazz"})
          (<Project-File>                            source: {File :context "src" "jazz" "presence" "install.scm"})
          (<Jazz-File>         name: literals        source: {File :context "src" "jazz" "presence" "literals.jazz"})
          (<Jazz-File>         name: syntax          source: {File :context "src" "jazz" "presence" "syntax.jazz"})
          (<Jazz-File>         name: protocol        source: {File :context "src" "jazz" "presence" "protocol.jazz"})
          (<Jazz-File>         name: transmission    source: {File :context "src" "jazz" "presence" "transmission.jazz"})
          (<Project-Directory>                       directory: {Directory :context "src" "jazz" "presence" "test"}
            (<Jazz-File>       name: client          source: {File :context "src" "jazz" "presence" "test" "client.jazz"})
            (<Jazz-File>       name: server          source: {File :context "src" "jazz" "presence" "test" "server.jazz"})
            (<Jazz-File>       name: stub            source: {File :context "src" "jazz" "presence" "test" "stub.jazz"})))))
    (<Project-Directory>                             directory: {Directory :context "doc"}
      (<Project-File>                                source: {File :context "doc" "presence.jml"})))))
