;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Workbench Manager Actions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.project.workbench.Workbench-Manager-Actions jazz


(import (jazz.action)
        (jazz.handler)
        (jazz.markup))


(class Workbench-Manager-Actions extends Actions
  
  
  (form
    (<install>
      ;; Generic
      (<Action-Item> name: add-project           action-handler: {Event-Handler :workbench-manager on-add-project} shortcut: {Shortcut :control #\E})
      (<Action-Item> name: add-document          action-handler: {Event-Handler :workbench-manager on-add-document} shortcut: {Shortcut :control #\D})
      (<Action-Item> name: add-directory         action-handler: {Event-Handler :workbench-manager on-add-directory} shortcut: {Shortcut :control #\R})
      (<Action-Item> name: add-group             action-handler: {Event-Handler :workbench-manager on-add-group} shortcut: {Shortcut :control #\G})
      (<Action-Item> name: install-project       action-handler: {Event-Handler :workbench-manager on-install-project})
      (<Action-Item> name: import-files          action-handler: {Event-Handler :workbench-manager on-import-files})
      (<Action-Item> name: import-directory      action-handler: {Event-Handler :workbench-manager on-import-directory})
      (<Action-Item> name: synchronize-content   action-handler: {Event-Handler :workbench-manager on-synchronize-content})
      
      ;; Group
      (<Action-Item> name: set-current-directory action-handler: {Event-Handler :workbench-manager on-set-current-directory})
      
      ;; Project
      (<Action-Item> name: edit-project          action-handler: {Event-Handler :workbench-manager on-edit-project})
      (<Action-Item> name: edit-descriptor       action-handler: {Event-Handler :workbench-manager on-edit-descriptor})
      (<Action-Item> name: edit-documentation    action-handler: {Event-Handler :workbench-manager on-edit-documentation})
      (<Action-Item> name: update-catalog        action-handler: {Event-Handler :workbench-manager on-update-catalog})
      (<Action-Item> name: update-dynamic        action-handler: {Event-Handler :workbench-manager on-update-dynamic})
      (<Action-Item> name: search-project        action-handler: {Event-Handler :workbench-manager on-search-project})
      (<Action-Item> name: dependencies          action-handler: {Event-Handler :workbench-manager on-dependencies})
      (<Action-Item> name: explore-depot         action-handler: {Event-Handler :workbench-manager on-explore-depot})
      
      ;; Project
      (<Action-Item> name: activate              action-handler: {Event-Handler :workbench-manager on-activate})
      
      ;; Dependencies
      (<Action-Item> name: add-dependency        action-handler: {Event-Handler :workbench-manager on-add-dependency})
      
      ;; Element
      (<Action-Item> name: launch                action-handler: {Event-Handler :workbench-manager on-launch})))))
