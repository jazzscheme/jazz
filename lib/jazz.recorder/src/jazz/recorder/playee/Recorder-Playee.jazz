;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Recorder Playee
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.recorder.playee.Recorder-Playee jazz


(import (jazz.application)
        (jazz.recorder)
        (jazz.recorder.playee.stub))


(class Recorder-Playee extends Object
  
  
  (method override (initialize self)
    (nextmethod self)
    (setup-playback self))


  (method (setup-playback self)
    (set-recording-level 'event)
    (set-recording-feedback? #t)
    (set-recording-slowdown 0.1))


  (method public (start-recording self)
    (let ((playee (new Recorder-Playee-Local-Proxy self)))
      (let ((recorder (get-recorder (current-application))))
        (on-start-recording recorder playee))))


  (method public (stop-recording self)
    (let ((playee (new Recorder-Playee-Local-Proxy self)))
      (let ((recorder (get-recorder (current-application))))
        (on-stop-recording recorder playee))))


  (method public (play-recording self player)
    (let ((recorder (get-recorder (current-application))))
      (let ((playee (new Recorder-Playee-Local-Proxy self)))
        (begin
          (play-remote-recording recorder)
          @w(end-playing player)))))


  (method public (end-playing self player)
    (let ((playee (new Recorder-Playee-Local-Proxy self))
          (recorder (get-recorder (current-application))))
      (play-recording-feedback player playee)))))
