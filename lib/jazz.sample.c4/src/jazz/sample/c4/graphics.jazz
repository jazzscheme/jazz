;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; C4 Graphics
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Joel Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;    Guillaume Cartier
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.sample.c4.graphics jazz


(import (jazz.io)
        (jazz.sample.gameserver.imagemagick)
        (jazz.system))


(definition C4-Images
  {Directory Jazz "lib" "jazz.sample" "site" "content" "images" "c4"})


(definition (generate-c4)
  (with-current-directory (parse~ C4-Images)
    (lambda ()
      (let ((width 71))
        (let ((half (/ (cast <fl> (- width 1)) 2))
              (inner 10))
          (define (generate name color)
            (image-convert (format "-size {a}x{a} xc:none -fill {a} -draw \"circle {a},{a} {a},{a}\" -gaussian-blur 0x1 {a}.png" width width color half half half inner name)))
          
          (generate "empty" "white")
          (generate "red" "red")
          (generate "green" "lime")))))
  (user-message "Done")))
