;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Errors
;;;


(library jazz.sample.error jazz


(import (jazz.sample.error.lib))


;;;
;;;; Outline
;;;


@ok (
(class X extends Object
  
  (class InnerClass extends Object)
  (interface InnerInterface)
  
  (slot s (extra))
  
  (generic (f))
  
  (c-type void (native void)))


(class Ambiguous metaclass Class extends Object
  
  (method meta (f)
    ))


(method (f))

(definition public protected foo 2))


;;;
;;;; Walk
;;;


       a
   b
              c


(if)
(set! Yo 2)


(case 2
  (2 3))

(class X extends Object)
(set! X 2)
(X)

(sqr 2 3)
(sort)

(set! 2 3)

jazz.sample.error.lib.not-found

(let 2)
(let (2) #f)
(let ((a)) #f)

(cond 2)
(case 2 2)

~x
(set! x~a 2)
(f~)


(class NoAscendant)


(class X extends Object
  
  (specific (f)))


(specific (not-found))


@bad
(class Y extends Object
  
  (method (foo))
  (method (foo)))


(class W extends Object
  
  (method (f))
  (method virtual (v)))


(class Z extends W
  
  (method (f))
  (method (v))
  (method virtual (v)))


(define (foo)
  (proclaim (warn optimizations))
  2)


@bad (
(class X extends Object)
(class A extends Object)

(generic (g (<X> x) i))
(specific (g (<A> a) i))
(specific (g (<A> a) i j))))
