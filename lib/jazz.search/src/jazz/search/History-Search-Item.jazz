;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; History Search Items
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.search.History-Search-Item jazz


(import (jazz.component)
        (jazz.history)
        (jazz.search)
        (jazz.ui))


(class undocumented History-Search-Item extends History-Item
  
  
  (slot protected domain)
  (slot protected targets)
  (slot protected whole-words?)
  (slot protected ignore-case?)
  (slot protected preserve-case?)
  (slot protected play-recording?)
  (slot protected expression?)
  (slot protected content)
  (slot protected selection)
  
  
  (method override (initialize self domain targets whole-words? ignore-case? preserve-case? play-recording? expression? content selection)
    (nextmethod self)
    (set! self.domain domain)
    (set! self.targets targets)
    (set! self.whole-words? whole-words?)
    (set! self.ignore-case? ignore-case?)
    (set! self.preserve-case? preserve-case?)
    (set! self.play-recording? play-recording?)
    (set! self.expression? expression?)
    (set! self.content content)
    (set! self.selection selection))

  
  (method override (open-item self)
    (let ((search (get-search-manager)))
      (install-history-item search self)
      (bring-to-front search)
      (set-visible? search #t)
      (select-resultset search)))
  
  
  (method override (present self)
    (let ((target (caar targets)))
      (if (null? target)
          "Search"
        (format "Search for {s}" target))))))
