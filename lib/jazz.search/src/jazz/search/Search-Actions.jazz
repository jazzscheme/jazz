;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Search Actions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.search.Search-Actions jazz


(import (jazz.action)
        (jazz.handler)
        (jazz.jml)
        (jazz.search))


(class undocumented Search-Actions extends Actions
  
  
  (form
    (<install>
      (<Action-Item> name: find                 action-handler: {Event-Handler :search on-find} shortcut: {Shortcut :control :alt #\E} alternate-shortcut: {Shortcut :meta #\F})
      (<Action-Item> name: find-in-text         action-handler: {Event-Handler :search on-find-in-text} shortcut: {Shortcut :control :shift #\S})
      (<Action-Item> name: find-in-projects     action-handler: {Event-Handler :search on-find-in-projects} shortcut: {Shortcut :control :shift #\R})
      (<Action-Item> name: find-in-directories  action-handler: {Event-Handler :search on-find-in-directories} shortcut: {Shortcut :control :shift #\D})
      (<Action-Item> name: find-in-user         action-handler: {Event-Handler :search on-find-in-user} shortcut: {Shortcut :control :shift #\W})
      (<Action-Item> name: find-forward         action-handler: {Event-Handler :search on-find-forward} shortcut: {Shortcut F3} alternate-shortcut: {Shortcut :control #\G})
      (<Action-Item> name: find-backward        action-handler: {Event-Handler :search on-find-backward} shortcut: {Shortcut :shift F3} alternate-shortcut: {Shortcut :control :shift #\G})
      (<Action-Item> name: replace              action-handler: {Event-Handler :search on-replace} shortcut: {Shortcut :control :shift #\H})
      (<Action-Item> name: replace&find-forward action-handler: {Event-Handler :search on-replace&find-forward} shortcut: {Shortcut :control #\H})
      (<Action-Item> name: replace-all          action-handler: {Event-Handler :search on-replace-all})
      (<Action-Item> name: replace-selected     action-handler: {Event-Handler :search on-replace-selected})
      (<Action-Item> name: previous-search      action-handler: {Event-Handler :search on-previous-search} shortcut: {Shortcut :control :shift F4})))
  
  
  (method override (update-actions self for)
    (when (memq? 'window for)
      (update-search-actions)))))
