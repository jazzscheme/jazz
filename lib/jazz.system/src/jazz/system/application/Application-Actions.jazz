;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Application Actions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.system.application.Application-Actions jazz


(import (jazz.jml)
        (jazz.library)
        (jazz.system)
        (jazz.system.application)
        (jazz.ui)
        (jazz.utilities))


(class undocumented Application-Actions extends Actions
  
  
  (form
    (<install>
      ;; File
      (<Action-Item> name: new                    action-handler: {Event-Handler :application on-new} shortcut: {Shortcut :control :alt #\N})
      (<Action-Item> name: open                   action-handler: {Event-Handler :application on-open} shortcut: {Shortcut :control :alt #\O})
      (<Action-Item> name: close                  action-handler: {Event-Handler :application on-close} shortcut: {Shortcut :control :alt #\W})
      (<Action-Item> name: close-all              action-handler: {Event-Handler :application on-close-all})
      (<Action-Item> name: save-all               action-handler: {Event-Handler :application on-save-all})
      (<Action-Item> name: print                  action-handler: {Event-Handler :application on-print} shortcut: {Shortcut :control :alt #\P})
      (<Action-Item> name: print-layout           action-handler: {Event-Handler :application on-print-layout})
      (<Action-Item> name: print-preview          action-handler: {Event-Handler :application on-print-preview})
      (<Action-Item> name: page-setup             action-handler: {Event-Handler :application on-page-setup})
      (<Action-Item> name: exit                   action-handler: {Event-Handler :application on-quit-application} shortcut: {Shortcut :control :alt #\Q})
      
      ;; Edit
      (<Action-Item> name: paste-from-stack       action-handler: {Event-Handler :application on-paste-from-stack})
      (<Action-Item> name: pop-clipboard-stack    action-handler: {Event-Handler :application on-pop-clipboard-stack})
      
      ;; History
      (<Action-Item> name: add-history            action-handler: {Event-Handler :application on-add-history} shortcut: {Shortcut :alt #\H})
      (<Action-Item> name: backward-history       action-handler: {Event-Handler :application on-backward-history} shortcut: {Shortcut :control #\[})
      (<Action-Item> name: forward-history        action-handler: {Event-Handler :application on-forward-history} shortcut: {Shortcut :control #\]})
      
      ;; Search
      (<Action-Item> name: find                   action-handler: {Event-Handler :application on-find} shortcut: {Shortcut :control :alt #\E})
      (<Action-Item> name: find-in-text           action-handler: {Event-Handler :application on-find-in-text} shortcut: {Shortcut :control :shift #\S})
      (<Action-Item> name: find-in-directories    action-handler: {Event-Handler :application on-find-in-directories} shortcut: {Shortcut :control :shift #\D})
      (<Action-Item> name: find-in-projects       action-handler: {Event-Handler :application on-find-in-projects} shortcut: {Shortcut :control :shift #\R})
      (<Action-Item> name: edit-next              action-handler: {Event-Handler :application on-edit-next} shortcut: {Shortcut F4})
      (<Action-Item> name: edit-previous          action-handler: {Event-Handler :application on-edit-previous} shortcut: {Shortcut :shift F4})
      (<Action-Item> name: edit-current           action-handler: {Event-Handler :application on-edit-current} shortcut: {Shortcut :control :alt :shift F4})
      @wait
      (<Action-Item> name: pop-results            action-handler: {Event-Handler :application on-pop-results} shortcut: {Shortcut :control :shift F4})
      (<Action-Item> name: find-forward           action-handler: {Event-Handler :application on-find-forward} shortcut: {Shortcut F3})
      (<Action-Item> name: find-backward          action-handler: {Event-Handler :application on-find-backward} shortcut: {Shortcut :shift F3})
      (<Action-Item> name: replace                action-handler: {Event-Handler :application on-replace} shortcut: {Shortcut :control :shift #\H})
      (<Action-Item> name: replace&find-forward   action-handler: {Event-Handler :application on-replace&find-forward} shortcut: {Shortcut :control #\H})
      (<Action-Item> name: replace-all            action-handler: {Event-Handler :application on-replace-all})
      (<Action-Item> name: replace-all-selected   action-handler: {Event-Handler :application on-replace-all-selected})
      (<Action-Item> name: command-shell          action-handler: {Event-Handler :application on-command-shell} shortcut: {Shortcut :alt #\S})
      
      ;; Workspace
      (<Action-Item> name: zoom-horizontally      action-handler: {Event-Handler :application on-zoom-horizontally} shortcut: {Shortcut :alt :shift Return})
      (<Action-Item> name: zoom-vertically        action-handler: {Event-Handler :application on-zoom-vertically} shortcut: {Shortcut :alt :shift Space})
      (<Action-Item> name: maximize/restore       action-handler: {Event-Handler :application on-maximize/restore})
      @wait
      (<Action-Item> name: full-screen            action-handler: {Event-Handler :application on-full-screen} shortcut: {Shortcut :alt :shift Backspace})
      (<Action-Item> name: next-workspace         action-handler: {Event-Handler :application on-next-workspace} shortcut: {Shortcut :control :alt F6})
      (<Action-Item> name: previous-workspace     action-handler: {Event-Handler :application on-previous-workspace} shortcut: {Shortcut :control :alt :shift F6})

      ;; Frame
      (<Action-Item> name: next-frame             action-handler: {Event-Handler :application on-next-frame} shortcut: {Shortcut F6})
      (<Action-Item> name: previous-frame         action-handler: {Event-Handler :application on-previous-frame} shortcut: {Shortcut :shift F6})
      (<Action-Item> name: current-frame          action-handler: {Event-Handler :application on-current-frame} shortcut: {Shortcut :control F6})
      (<Action-Item> name: tile-horizontally      action-handler: {Event-Handler :application on-tile-horizontally})
      (<Action-Item> name: tile-vertically        action-handler: {Event-Handler :application on-tile-vertically})
      
      ;; Help
      (<Action-Item> name: about                  action-handler: {Event-Handler :application on-about})))))
