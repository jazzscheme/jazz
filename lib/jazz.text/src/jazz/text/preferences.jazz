;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Text Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.text.preferences jazz


(import (jazz.document)
        (jazz.exemplar)
        (jazz.graphic)
        (jazz.jml)
        (jazz.resource)
        (jazz.text))


;;;
;;;; Formats-Preferences
;;;


(class undocumented Formats-Preferences extends Exemplars-Preferences
  
  
  (form
    (<install> title: "Formats" icon: {Image-Resource "BackgroundColor"}))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.ui.designer:Formats-Preferences-Descriptor)))


;;;
;;;; Format-Preferences
;;;


(class undocumented Format-Preferences extends Exemplar-Preferences
  
  
  (property left-margin     accessors generate)
  (property right-margin    accessors generate)
  (property justification   accessors generate)
  (property bulleted?       accessors generate)
  (property bullet-outside  accessors generate)
  (property bullet-inside   accessors generate)
  (property keep-with-next? accessors generate)
  
  
  (form
    (<install> title: "Format" icon: {Image-Resource "MsgPaint"}))
  
  
  ;;;
  ;;;; Exemplar
  ;;;
  
  
  (method override (->exemplar)
    (let ((arguments
            `(,@(if (specified? base) (list base: base) '())
              ,@(if (specified? left-margin) (list left-margin: left-margin) '())
              ,@(if (specified? right-margin) (list right-margin: right-margin) '())
              ,@(if (specified? justification) (list justification: justification) '())
              ,@(if (specified? bulleted?) (list bulleted?: bulleted?) '())
              ,@(if (specified? bullet-outside) (list bullet-outside: bullet-outside) '())
              ,@(if (specified? bullet-inside) (list bullet-inside: bullet-inside) '())
              ,@(if (specified? keep-with-next?) (list keep-with-next?: keep-with-next?) '()))))
      (apply new Format arguments)))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.ui.designer:Format-Preferences-Descriptor)))


;;;
;;;; Styles-Preferences
;;;


(class undocumented Styles-Preferences extends Exemplars-Preferences
  
  
  (form
    (<install> title: "Styles" icon: {Image-Resource "BackgroundColor"}))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.ui.designer:Styles-Preferences-Descriptor)))


;;;
;;;; Style-Preferences
;;;


(class undocumented Style-Preferences extends Exemplar-Preferences
  
  
  (property alignment accessors generate)
  
  
  (form
    (<install> title: "Style" icon: {Image-Resource "MsgPaint"}))
  
  
  ;;;
  ;;;; Exemplar
  ;;;
  
  
  (method override (->exemplar)
    (let ((arguments
            `(,@(if (specified? base) (list base: base) '())
              ,@(if (specified? alignment) (list alignment: alignment) '()))))
      (apply new Style arguments)))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.ui.designer:Style-Preferences-Descriptor)))


;;;
;;;; Text-Style-Preferences
;;;


(class undocumented Text-Style-Preferences extends Style-Preferences
  
  
  (property font      accessors generate)
  (property color     accessors generate)
  (property highlight accessors generate)
  (property frame     accessors generate)
  
  
  (form
    (<install> title: "Text-Style" icon: {Image-Resource "MsgPaint"}))
  
  
  ;;;
  ;;;; Exemplar
  ;;;
  
  
  (method override (->exemplar)
    (let ((arguments
            `(,@(if (specified? base) (list base: base) '())
              ,@(if (specified? alignment) (list alignment: alignment) '())
              ,@(if (specified? font) (list font: font) '())
              ,@(if (specified? color) (list color: color) '())
              ,@(if (specified? highlight) (list highlight: highlight) '())
              ,@(if (specified? frame) (list frame: frame) '()))))
      (apply new Text-Style arguments)))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.ui.designer:Text-Style-Preferences-Descriptor)))


;;;
;;;; Fonts-Preferences
;;;


(class undocumented Fonts-Preferences extends Exemplars-Preferences
  
  
  (form
    (<install> title: "Fonts" icon: {Image-Resource "Font"}))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.application.designer:Fonts-Preferences-Descriptor)))


;;;
;;;; Font-Preferences
;;;


(class undocumented Font-Preferences extends Exemplar-Preferences
  
  
  (property font-name  accessors generate)
  (property point-size accessors generate)
  (property color      accessors generate)
  (property bold?      accessors generate)
  (property italic?    accessors generate)
  (property underline? accessors generate)
  (property antialias  accessors generate)
  (property hint-style accessors generate)
  
  
  (form
    (<install> title: "Font" icon: {Image-Resource "TextColor"}))
  
  
  ;;;
  ;;;; Exemplar
  ;;;
  
  
  (method override (->exemplar)
    (let ((arguments
            `(,@(if (specified? base) (list base: base) '())
              ,@(if (specified? font-name) (list font-name: font-name) '())
              ,@(if (specified? point-size) (list point-size: point-size) '())
              ,@(if (specified? color) (list color: color) '())
              ,@(if (specified? bold?) (list bold?: bold?) '())
              ,@(if (specified? italic?) (list italic?: italic?) '())
              ,@(if (specified? underline?) (list underline?: underline?) '())
              ,@(if (specified? antialias) (list antialias: antialias) '())
              ,@(if (specified? hint-style) (list hint-style: hint-style) '()))))
      (apply new Font arguments)))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.ui.designer:Font-Preferences-Descriptor)))


;;;
;;;; Text-Preferences
;;;


(class undocumented Text-Preferences extends Document-Preferences
  
  
  (property background            initialize #f  accessors generate)
  (property base-format           initialize #f  accessors generate)
  (property default-format        initialize #f  accessors generate)
  (property base-style            initialize #f  accessors generate)
  (property default-style         initialize #f  accessors generate)
  (property pulse-caret?          initialize #t  accessors generate)
  (property auto-complete?        initialize #t  accessors generate)
  (property auto-complete-minimum initialize 2 accessors generate)
  
  
  (form
    (<install>                             title: "Text" icon: {Image-Resource "Document"} base-format: {Format Text-Base} base-style: {Text-Style Text-Base}
      (<Formats-Preferences> name: formats)
      (<Styles-Preferences>  name: styles)))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.ui.designer:Text-Preferences-Descriptor)))


;;;
;;;; Plain-Text-Preferences
;;;


(class undocumented Plain-Text-Preferences extends Text-Preferences


  (property title-style   initialize #f accessors generate)
  (property comment-style initialize #f accessors generate)
  
  
  (form
    (<install>
      title: "Plain Text"
      base-style:    {Text-Style Code-Base}
      title-style:   {Text-Style Base Text-Title}
      comment-style: {Text-Style Base Text-Comment}))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor (context: context #f))
    (new jazz.ui.designer:Plain-Text-Preferences-Descriptor))))
