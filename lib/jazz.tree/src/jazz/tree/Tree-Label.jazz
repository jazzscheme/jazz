;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Tree Labels
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.tree.Tree-Label jazz


(import (jazz.locale)
        (jazz.tree)
        (jazz.ui))


(class Tree-Label extends Tree-Data
  
  
  (slot protected title)
  (slot protected font  accessors generate)
  (slot protected color accessors generate)
  
  
  (method override (initialize . rest)
    (bind-keywords ((title #f) (font #f) (color #f) . others) rest
      (apply nextmethod others)
      (set-title title)
      (set! font~self font)
      (set! color~self color)))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{s}" title))))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method virtual (get-title)
    title)
  
  
  (method public virtual (set-title value)
    (set! title (and value (if (is? value Locales) value (->string value)))))


  ;;;
  ;;;; Sort
  ;;;
  
  
  (method override (get-sort-value)
    title)))
