;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Activities
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.ui.activity.Activity jazz


(class undocumented Activity extends Object)


@convert-thread


(class undocumented Activity extends Thread
  
  
  (slot reporter    initialize {})
  (slot unregister? initialize #f)
  
  
  ;;;
  ;;;; Initialization
  ;;;
  
  
  (method (initialize . rest)
    (bind-keywords ((unregister? #f) . others) rest
      (apply nextmethod rest)
      (set! unregister?~self unregister?)
      (destroy-mandatory)))
  
  
  ;;;
  ;;;; Destruction
  ;;;
  
  
  (method (destroy)
    (unregister-reporter)
    (nextmethod))
  
  
  (method (unregister-reporter)
    (when (and unregister? reporter)
      (unregister-activity~ (get-manager) reporter)
      (set! reporter {})))
  
  
  ;;;
  ;;;; Manager
  ;;;
  
  
  (method public (get-manager (visible?: visible? #f))
    (get-activity-manager visible?: visible?))
  
  
  ;;;
  ;;;; Reporter
  ;;;
  
  
  (method public (get-reporter)
    (unless reporter
      (set! reporter (register-activity~ (get-manager))))
    reporter)
  
  
  (method public (cancel-requested?)
    (cancel-requested?~ (get-reporter)))
  
  
  (method public (set-range range)
    (set-range~ (get-reporter) range))
  
  
  (method public (user-message fmt . rest)
    (apply (get-user-message~ (get-reporter)) fmt rest))
  
  
  (method public (update-view)
    (update-view~ (get-root~ (get-reporter))))
  
  
  (method public (set-pos pos)
    (set-pos~ (get-reporter) pos))
  
  
  (method public (delta-pos increment)
    (delta-pos~ (get-reporter) increment))
  
  
  (method public (set-step increment)
    (set-step~ (get-reporter) increment))
  
  
  (method public (step-it)
    (step-it~ (get-reporter)))
  
  
  (method public (set-done)
    (set-done~ (get-reporter)))))
