;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Cocoa Clipboard
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.clipboard.platform.cocoa jazz


(import (jazz.platform))


;;;
;;;; Text
;;;


(definition package (initialize-clipboard)
  )


(definition public (get-clipboard-text (format: format #f))
  (platformGetClipboardString (clipboard-format->type format)))


(definition public (set-clipboard-text text (format: format #f))
  (platformSetClipboardString text (clipboard-format->type format)))


(definition (clipboard-format->type format)
  (if (or (not format)
          (eq? format 'unicode-text))
      #f
    (symbol->string format)))


(definition public undocumented (register-clipboard-format name format)
  )


(definition public undocumented (clipboard-format-available? format)
  (boolean (get-clipboard-text format: format)))


;;;
;;;; Mouse
;;;


(definition package (mouse-select-copy proc)
  #f)


(definition package (middle-mouse-paste proc)
  #f))
