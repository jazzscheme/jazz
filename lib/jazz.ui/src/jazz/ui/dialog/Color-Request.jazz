;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Color Request
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.dialog.Color-Request jazz


(import (jazz.graphic)
        (jazz.handler)
        (jazz.jml)
        (jazz.ui))


;;;
;;;; Color-Request
;;;


(class Color-Request extends Color-Choose
  
  
  (form
    (<install>                            escape-press-handler: {Event-Handler :form on-escape-press}
      (<Horizontal-Line> name: separator  position: {Point  13 115} size: {Dimension 503 8})
      (<Push-Button>     name: ok         title: "OK" position: {Point 180 129} size: {Dimension 80 24} action-handler: {Event-Handler :host on-ok} default?: #t)
      (<Push-Button>     name: cancel     title: "Cancel" position: {Point 264 129} size: {Dimension 80 24} action-handler: {Event-Handler :host on-cancel})))
    
  
  ;;;
  ;;;; Host
  ;;;

  
  (method meta override (host-title self)
    "Choose Color")
  
  
  (method meta override (host-size self)
    {Dimension 527 164})
  
  
  ;;;
  ;;;; Dialog
  ;;;
  
  
  ;; Should really be generic in the Dialog class
  (method override (on-return-press self evt)
    (end-modal (get-host self) (get-modal-result self)))
  
  
  ;; Should really be generic in the Dialog class
  (method override (on-escape-press self evt)
    (cancel-modal (get-host self)))
  
  
  (method override (get-modal-result self)
    (let ((color (get-color self)))
      (if symbolize?
          (symbolize-color color epsilon: .01)
        color)))))
