;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Directory Request
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.dialog.Directory-Request jazz


(import (jazz.io)
        (jazz.markup)
        (jazz.outline)
        (jazz.tree)
        (jazz.ui))


(class undocumented Directory-Request extends Pathname-Request
  
  
  (property selected-directory initialize #f accessors generate)
  
  
  (form
    (<install>
      (<!>       name: buttonbar
        (<!>     name: ok        title: "OK"))))
  
  
  (method meta override (host-title self)
    "Choose Directory")
  
  
  (method override (prepare-directory self)
    (if selected-directory
        (set! directory (get-parent selected-directory))
      (nextmethod self)))
  
  
  (method override (focus-default self)
    (nextmethod self)
    (when selected-directory
      (let ((tree (get-tree self)))
        (select-user-data-row tree selected-directory test: pathname=?))))
  

  ;;;
  ;;;; Update
  ;;;
  
  
  (method override (update-content self)
    (let ((directories (get-content directory nodes?: #t leaves?: #f)))
      (let ((tree (get-tree self)))
        (define (add pathname)
          (add-pathname self tree pathname))
        
        (remove-every-row tree)
        (with-update-locked tree
          (lambda ()
            (for-each add directories))))))
  
  
  (method override (update-buttons self)
    (nextmethod self)
    (let ((pathname (selected-pathname self)))
      (set-enabled? (locate self 'ok) (directory? pathname))))
  

  ;;;
  ;;;; Events
  ;;;
  
  
  (method override (default-action self)
    (let ((pathname (selected-pathname self)))
      (cond ((directory? pathname)
             (down self pathname)))))
  
  
  ;; Should really be generic in the Dialog class
  (method override (on-return-press self evt)
    (let ((dialog (get-host self)))
      (end-modal dialog (get-modal-result dialog))))))
