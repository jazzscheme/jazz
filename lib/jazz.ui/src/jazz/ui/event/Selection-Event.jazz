;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Selection Events
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.event.Selection-Event jazz


(import (jazz.library))


(class Selection-Event extends Event
  
  
  (slot old           getter generate)
  (slot selection     getter generate)
  (slot origin        getter generate)
  (slot force-parent? getter generate)
  (slot force?        getter generate)
  (slot user-origin?  getter generate)


  (method override (initialize kind sender old selection (origin: origin {}) (force-parent?: force-parent? #f) (force?: force? #f) (user-origin?: user-origin? #f))
    (nextmethod kind sender)
    (set! old~self old)
    (set! selection~self selection)
    (set! origin~self origin)
    (set! force-parent?~self force-parent?)
    (set! force?~self force?)
    (set! user-origin?~self user-origin?))


  (method override (print printer readably)
    (format printer "~{{a} {s} {s} {s}{? {l}~}}"
            (category-name (class-of self))
            kind
            old
            selection
            properties))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  ))
