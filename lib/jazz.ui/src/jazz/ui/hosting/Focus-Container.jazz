;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Focus Container
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.hosting.Focus-Container jazz


(import (jazz.view))


(class undocumented Focus-Container extends View
  
  
  (slot focused initialize #f)

  
  ;;;
  ;;;; Activation
  ;;;
  
  
  (method override (mouse-activate? self)
    #f)
  
  
  (method public virtual (mouse-activate self)
    (focus-host self))

  
  ;;;
  ;;;; View
  ;;;


  (method override (get-focus-container self)
    self)
  
  
  ;;;
  ;;;; Focus
  ;;;
  
  
  (method public (get-focused self)
    ;; only return a valid focused as certain operations like
    ;; changing parent can leave the focused to be invalid
    (if (and focused (eq? (get-focus-container focused) self))
        focused
      #f))
  
  
  (method public (set-focused self view)
    (set! focused view))
  
  
  (method public virtual (focus-host self)
    (let ((focused (get-focused self)))
      (cond (focused
             (acquire-focus focused))
            (else
             (acquire-focus self)))))
    
  
  (method public (preserve-focused self focus)
    (set! focused (focus-master focus)))
  
  
  (method public virtual (container-focusable? self)
    #f)
  
  
  (method public virtual (ensure-container-focusable self)
    )
  
  
  (method override (focus-default self)
    )
  
  
  (method package (view-destroyed self view)
    (when (eq? focused view)
      (set! focused #f)))))
