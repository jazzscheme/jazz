;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Abstract Frame Host
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.hosting.Frame-Host jazz


(import (jazz.application)
        (jazz.document)
        (jazz.ui)
        (jazz.ui.view)
        (jazz.ui.window))


(class undocumented Frame-Host extends Host-View
  
  
  ;;;
  ;;;; Initialization
  ;;;
  
  
  (method override (conclude rest)
    (nextmethod rest)
    (destroy-mandatory)
    (register-frame self))

  
  ;;;
  ;;;; Activate
  ;;;
  
  
  (method protected virtual (activate-frame)
    (close-popups)
    (set-active-frame self)
    (bring-frame-to-front self)
    (for-each-docked
      client-activate~)
    (update-windowing-actions~ (get-application))
    (when (get-player)
      (simulate-mouse-move~ (get-player)))
    (when (and guest (is? guest Document))
      (let ((controller (get-document-controller~ guest)))
        (verify-reload~ controller delay-event?: #t))))

  
  (method protected virtual (deactivate-frame)
    (set-active-frame #f))
  

  ;;;
  ;;;; Close
  ;;;
  
  
  (method protected virtual (close-host (confirm?: confirm? #t))
    )


  (method override (close-with-confirm)
    (close-popups)
    (confirm-close)
    (nextmethod))
  

  ;;;
  ;;;; Destroy
  ;;;
  
  
  (method override (destroy)
    (nextmethod)
    (when (get-surrogate)
      (remove-surrogate))
    (unregister-frame self)
    (update-windowing-actions~ (get-application)))


  ;;;
  ;;;; Save
  ;;;

  
  (method override (confirm-close . rest)
    (when guest
      (confirm-close~ guest)))))
