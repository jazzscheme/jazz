;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Image Definitions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Stephane Le Cornec.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.ui.image jazz


(import (jazz.library)
        (jazz.platform.cairo)
        (jazz.system))


(definition public (load-image type image . rest)
  (define (find-bitmap-file resource)
    (get-resource~ (get-application) 'bitmap (get-name~ resource)))
  
  (define (find-icon-file resource)
    (get-resource~ (get-application) 'icon (get-name~ resource)))
  
  (define (create-cairo-surface-from-png file)
    (let ((handle (cairo_image_surface_create_from_png (parse~ file))))
      (if (/= (cairo_surface_status handle) 0)
          (error "Image file not found : {s}" file)
        handle)))
  
  (case type
    ((bitmap)
     (create-cairo-surface-from-png
       (if (resource? image)
           (find-bitmap-file image)
         image)))
    ((icon)
     (create-cairo-surface-from-png
       (if (resource? image)
           (find-icon-file image)
         image))))))
