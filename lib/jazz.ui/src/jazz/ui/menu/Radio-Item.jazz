;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Radio Items
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.menu.Radio-Item jazz


(import (jazz.graphic)
        (jazz.library)
        (jazz.system)
        (jazz.ui))


(class Radio-Item extends Label-Item implements (Groupable Selectable)
  
  
  (property group     initialize #f accessors explicit)
  (property selected? initialize #f accessors explicit)
  
  
  ;;;
  ;;;; Groupable
  ;;;


  (method override (get-group)
    group)


  (method override (set-group value)
    (set! group value))


  (method (radio-group)
    (collect-if (lambda (component)
                  (and (is? component Radio-Item)
                       (eq? (get-group~ component) group)))
                (get-children~ parent)))
  
  
  ;;;
  ;;;; Selectable
  ;;;


  (method override (get-selected?)
    selected?)
  

  (method override (set-selected? flag)
    (define (find-selected)
      (find-if get-selected?~ (radio-group)))
    
    (when (neq? flag selected?)
      (let ((current (find-selected)))
        (set-selected-state flag)
        (when current
          (set-selected-state~ current (not flag))))))
  
  
  (method override (unselect)
    (when selected?
      (set-selected-state #f)))
  
  
  (method (set-selected-state flag)
    (set! selected? flag)
    (invalidate-view))
  
  
  ;;;
  ;;;; Layout
  ;;;
  
  
  (method override (preferred-prefix-width)
    (if selected? 12 0))
  
  
  ;;;
  ;;;; Drawing
  ;;;
  
  
  (method override (draw-prefix surface context)
    (when selected?
      (let ((appl (get-application))
            (left 5)
            (top 2))
        (draw-image~ (get-images-portfolio~ appl) surface context {Image-Resource "Bullet"} left top))))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Radio-Item-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer))


(class Radio-Item-Descriptor extends Label-Item-Descriptor
  
  
  (method override (class-property-presentation class property)
    (case (field-name property)
      ((group) "Group")
      ((selected?) "Selected")
      (else (nextmethod class property)))))))
