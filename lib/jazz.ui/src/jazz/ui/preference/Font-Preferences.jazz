;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Font Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.preference.Font-Preferences jazz


(import (jazz.designer)
        (jazz.graphic)
        (jazz.jml)
        (jazz.library)
        (jazz.ui))


(class undocumented Font-Preferences extends Exemplar-Preferences
  
  
  (property font-name  accessors generate)
  (property point-size accessors generate)
  (property color      accessors generate)
  (property bold?      accessors generate)
  (property italic?    accessors generate)
  (property underline? accessors generate)
  (property antialias  accessors generate)
  (property hint-style accessors generate)
  
  
  (form
    (<install> title: "Font" icon: {Image-Resource "TextColor"}))
  
  
  ;;;
  ;;;; Exemplar
  ;;;
  
  
  (method override (->exemplar)
    (let ((arguments
            `(,@(if (specified? base) (list base: base) '())
              ,@(if (specified? font-name) (list font-name: font-name) '())
              ,@(if (specified? point-size) (list point-size: point-size) '())
              ,@(if (specified? color) (list color: color) '())
              ,@(if (specified? bold?) (list bold?: bold?) '())
              ,@(if (specified? italic?) (list italic?: italic?) '())
              ,@(if (specified? underline?) (list underline?: underline?) '())
              ,@(if (specified? antialias) (list antialias: antialias) '())
              ,@(if (specified? hint-style) (list hint-style: hint-style) '()))))
      (apply new Font arguments)))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Font-Preferences-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer))


(class Font-Preferences-Descriptor extends Exemplar-Preferences-Descriptor
  
  
  (form
    (<install>                 can-rename?: #f can-delete?: #f can-move?: #f can-copy?: #f
      (<properties~>           categorized: (base font-name point-size color bold? italic? underline? antialias hint-style)
        (<Property-Descriptor> name: base)
        (<Property-Descriptor> name: font-name)
        (<Property-Descriptor> name: point-size)
        (<Property-Descriptor> name: color)
        (<Property-Descriptor> name: bold?)
        (<Property-Descriptor> name: italic?)
        (<Property-Descriptor> name: underline?)
        (<Property-Descriptor> name: antialias)
        (<Property-Descriptor> name: hint-style)))))))
