;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Stage Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.ui.preference.Stage-Preferences jazz


(import (jazz.jml)
        (jazz.library)
        (jazz.ui)
        (jazz.ui.view)
        (jazz.ui.window))


(class undocumented Stage-Preferences extends Figure-Preferences
  
  
  (form
    (<install> title: "Stage" icon: {Bitmap-Resource "Stage"}))
  
  
  ;;;
  ;;;; Applying
  ;;;
  
  
  (method override (apply-root player)
    (set-root~ player (get-parent~ (singleton-stage name)))
    (set-offscreen?~ (get-root~ player) #t)
    (apply-to (get-root~ player)))
  
  
  (method override (apply-preferences (parent {}))
    (assert parent)
    (let ((stage-border (get-parent~ (singleton-stage name))))
      (set-parent~ stage-border parent)
      (apply-to stage-border)))
  
  
  (method (apply-to stage-border)
    (set-location~ stage-border location)
    (set-visible?~ stage-border (get-visible?)))
  
  
  ;;;
  ;;;; Designer
  ;;;
  
  
  (method meta override (get-class-image)
    {Bitmap-Resource "Stage"})
  
  
  (method override (get-categorized-properties)
    '(location))))
