;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Aliases Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.preference.aliases jazz


(import (jazz.jml)
        (jazz.library)
        (jazz.ui))


;;;
;;;; Preferences
;;;


(class undocumented Aliases-Preferences extends Preferences
  
  
  (form
    (<install> title: "Aliases"))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Aliases-Preferences-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(class Aliases-Preferences-Descriptor extends Preferences-Descriptor
  
  
  (form
    (<install>       can-rename?: #f can-delete?: #f can-move?: #f can-copy?: #f
      (<properties~>)))
  
  
  (method override (component-get-addable-classes component)
    (list
      Alias-Configuration))
  
  
  (method override (component-get-addable-details component)
    '((alias 150 #f) (directory 300 #t))))


;;;
;;;; Configuration
;;;


(class undocumented Alias-Configuration extends Preferences
  
  
  (property alias     initialize #f accessors generate)
  (property directory initialize #f accessors generate)
  
  
  (form
    (<install> icon: {Image-Resource "Link"}))
  
  
  ;;;
  ;;;; Domain
  ;;;
  
  
  (method meta override (get-domain property)
    (case (field-name property)
      (else (nextmethod property))))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Alias-Configuration-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer)
        (jazz.jml))


(class Alias-Configuration-Descriptor extends Preferences-Descriptor
  
  
  (form
    (<install>                 title: "Alias"
      (<properties~>           categorized: (alias directory)
        (<Property-Descriptor> name: alias title: "Alias")
        (<Property-Descriptor> name: directory title: "Directory"
          (<Directory-Domain>  name: domain)))))
  
  
  (method override (component-presentation-property? component property)
    (memq? (field-name property) '(alias)))
  
  
  (method override (component-get-presentation component)
    (or (get-alias~ component)
        "{}"))
  
  
  (method override (component-set-presentation component designer presentation)
    (set-property~ designer component :alias (string->symbol presentation)))))))
