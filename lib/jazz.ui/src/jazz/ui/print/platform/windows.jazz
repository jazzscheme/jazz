;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Windows Printing
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.print.platform.windows jazz


(import (jazz.graphic)
        (jazz.library)
        (jazz.platform)
        (jazz.platform.cairo.cairo-windows)
        (jazz.ui)
        (jazz.ui.dialog))


;;;
;;;; Print
;;;


(definition package (platform-print-document view)
  (receive (hdc print-to-file? selection? pages? from to nb-copies orientation) (print-dialog)
    (if print-to-file?
        (print-picture~ view)
      (let* ((surface (new Surface (cairo_win32_surface_create hdc)))
             (page-setup (get-page-setup-for~ view 'printer))
             (resolution (GetDeviceCaps hdc LOGPIXELSX)))
        (set-clipper~ surface (new Rect 0 0 10000 10000))
        (let ((job (new Printer-Job surface view page-setup resolution selection?: selection? from: (and pages? from) to: (and pages? to) nb-copies: nb-copies)))
          (print-job~ job))))))
  
  
(definition (delete-existing directory filename)
  (let ((regexp (new Regular-Expression (format "{a}*.emf" filename))))
    (iterate-directory~ directory
      (lambda (file)
        (when (matches?~ regexp (get-name~ file))
          (delete-file~ file)))
      recursive?: #f)))


(definition package (platform-print-picture view)
  @wait
  (let ((directory (choose-directory))
        (filename "page"))
    (delete-existing directory filename)
    (let* ((page-setup (get-page-setup-for~ view 'file))
           (resolution (GetDeviceCaps (desktop-dc) LOGPIXELSX))
           (job (new Picture-Job directory filename view page-setup resolution)))
      (print-job~ job))
    (message-box "Print done"))))