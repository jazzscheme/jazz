;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Search
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.search.Search jazz


(import (jazz.resource))


(class Search extends Object
  
  
  (slot find                      getter generate)
  (slot replace                   getter generate)
  (slot expression? initialize #f accessors generate)
  
  
  (method override (initialize find replace)
    (nextmethod)
    (set-find find)
    (set-replace replace))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method protected (set-find obj)
    (set! find (->search-set obj)))
  
  
  (method protected (set-replace repl)
    (set! replace repl))
  
  
  (method protected (collect-find)
    (map get-target~ (get-contexts~ find)))
  
  
  (method public (empty?)
    (null? (get-contexts~ find)))
  
  
  ;;;
  ;;;; Results
  ;;;
  
  
  (method protected virtual (install-results results-view results categorized?)
    (for-each (lambda (result)
                (add-result~ results-view result))
              (sort string<? results key: present~)))
  
  
  ;;;
  ;;;; Presentation
  ;;;
  
  
  (method public virtual (get-icon)
    {Image-Resource "Find"})
  
  
  (method public (present)
    (join (collect-find) ", "))
  
  
  ;;;
  ;;;; Edition
  ;;;
  
  
  (method protected virtual (supports-drill-down?)
    #f)
  
  
  (method protected virtual (dynamic-search? categorized?)
    #f)))
