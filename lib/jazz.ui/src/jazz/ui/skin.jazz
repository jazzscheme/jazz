;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; UI Skin
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module jazz.ui.skin jazz


(import (jazz.component)
        (jazz.graphic)
        (jazz.jml)
        (jazz.skin)
        (jazz.ui))


(class UI-Skin extends Skin
  
  
  (form
    (<install>
      (<Border-Skin>    name: border/entry)
      (<Border-Skin>    name: border/outline)
      (<Group-Skin>     name: group)
      (<Header-Skin>    name: header)
      (<Header-Skin>    name: header/tool)
      (<Header-Skin>    name: header/document)
      (<Scrollbar-Skin> name: scrollbar)
      (<Scrollbar-Skin> name: scrollbar/tool)
      (<Scrollbar-Skin> name: scrollbar/document)
      (<Button-Skin>    name: button)
      (<Check-Skin>     name: check)
      (<Radio-Skin>     name: radio)
      (<Label-Skin>     name: label)
      (<Menu-Skin>      name: menu)
      (<Tool-Skin>      name: tool)
      (<Splitter-Skin>  name: splitter)
      (<Splitter-Skin>  name: splitter/document)
      (<Docked-Skin>    name: docked)
      (<Stage-Skin>     name: stage)
      (<Toolbar-Skin>   name: toolbar)
      (<Menubar-Skin>   name: menubar)
      (<Statusbar-Skin> name: statusbar)
      (<Text-Skin>      name: text)
      (<Tree-Skin>      name: tree)
      (<Trait>          name: default
        (<install>
          (<!>          name: border/entry       edge-flat?: #t)
          (<!>          name: border/outline     edge-flat?: #t)
          (<!>          name: group              border-flat?: #t)
          (<!>          name: header             flat?: #t)
          (<!>          name: header/tool        flat?: #t)
          (<!>          name: header/document    flat?: #t)
          (<!>          name: scrollbar          flat?: #f)
          (<!>          name: scrollbar/tool     flat?: #t)
          (<!>          name: scrollbar/document flat?: #t))
        (<Trait>        name: jazz
          (<install>
            (<!>        name: menu              background: {Gradient horizontal {Color red: 173 green: 192 blue: 218} {Color red: 112 green: 146 blue: 190}} highlight: {Gradient vertical {Color Light-Orange} {Color Orange}} disabled-text-color: {Color red: 133 green: 129 blue: 109})
            (<!>        name: tool              highlight: {Gradient vertical {Color Light-Orange} {Color Orange}})
            (<!>        name: splitter          background: {Color red: 173 green: 192 blue: 218})
            (<!>        name: splitter/document background: {Color Medium})
            (<!>        name: docked            active-background: {Gradient vertical {Color Light-Orange} {Color Orange} {Color Light-Orange}} inactive-background: {Color red: 173 green: 192 blue: 218} frame-color: {Color White})
            (<!>        name: stage             background: {Color red: 112 green: 146 blue: 190})
            (<!>        name: toolbar           background: {Gradient vertical {Color red: 173 green: 192 blue: 218} {Color red: 112 green: 146 blue: 190}})
            (<!>        name: menubar           background: {Gradient vertical {Color red: 173 green: 192 blue: 218} {Color red: 112 green: 146 blue: 190}} highlight: {Gradient vertical {Color Light-Orange} {Color Orange}})
            (<!>        name: statusbar         background: {Gradient vertical {Color red: 173 green: 192 blue: 218} {Color red: 112 green: 146 blue: 190}}))
          (<Trait>      name: mac)
          (<Trait>      name: x11)))
      (<Trait>          name: windows
        (<install>
          (<!>          name: border/entry       edge-flat?: #f)
          (<!>          name: border/outline     edge-flat?: #f)
          (<!>          name: group              border-flat?: #f)
          (<!>          name: header             flat?: #f)
          (<!>          name: header/tool        flat?: #t)
          (<!>          name: header/document    flat?: #f)
          (<!>          name: scrollbar          flat?: #f)
          (<!>          name: scrollbar/tool     flat?: #t)
          (<!>          name: scrollbar/document flat?: #f))))))


;;;
;;;; Border-Skin
;;;


(class Border-Skin extends Skin
  
  
  (property edge-flat? initialize #t accessors generate))


;;;
;;;; Docked-Skin
;;;


(class Docked-Skin extends Skin
  
  
  (definition Active-Background
    {Gradient vertical {Color red: 225 green: 234 blue: 252} {Color red: 153 green: 186 blue: 243}})
  
  (definition Inactive-Background
    {Color Medium})
  
  (definition Frame-Color
    {Color red: 128 green: 128 blue: 128})
  
  (definition Focused-Text-Color
    {Color Black})
  
  (definition Unfocused-Text-Color
    {Color red: 100 green: 75 blue: 0})
  
  
  (property active-background    initialize Active-Background    accessors generate)
  (property inactive-background  initialize Inactive-Background  accessors generate)
  (property frame-color          initialize Frame-Color          accessors generate)
  (property focused-text-color   initialize Focused-Text-Color   accessors generate)
  (property unfocused-text-color initialize Unfocused-Text-Color accessors generate))


;;;
;;;; Group-Skin
;;;


(class Group-Skin extends Skin
  
  
  (property background   initialize #f accessors generate)
  (property text-color   initialize #f accessors generate)
  (property border-flat? initialize #f accessors generate))


;;;
;;;; Header-Skin
;;;


(class Header-Skin extends Skin
  
  
  (property background  initialize #f accessors generate)
  (property title-color initialize #f accessors generate)
  (property flat?       initialize #t accessors generate))


;;;
;;;; Button-Skin
;;;


(class Button-Skin extends Skin
  
  
  (property background initialize #f accessors generate))


;;;
;;;; Check-Skin
;;;


(class Check-Skin extends Skin
  
  
  (property text-color initialize #f accessors generate))


;;;
;;;; Radio-Skin
;;;


(class Radio-Skin extends Skin
  
  
  (property text-color initialize #f accessors generate))


;;;
;;;; Label-Skin
;;;


(class Label-Skin extends Skin
  
  
  (property text-color initialize #f accessors generate))


;;;
;;;; Menu-Skin
;;;


(class Menu-Skin extends Skin
  
  
  (property background          initialize #f accessors generate)
  (property highlight           initialize #f accessors generate)
  (property text-font           initialize #f accessors generate)
  (property text-color          initialize #f accessors generate)
  (property selected-text-color initialize #f accessors generate)
  (property disabled-text-color initialize #f accessors generate))


;;;
;;;; Menubar-Skin
;;;


(class Menubar-Skin extends Skin
  
  
  (property background initialize #f accessors generate)
  (property highlight  initialize #f accessors generate))


;;;
;;;; Scrollbar-Skin
;;;


(class Scrollbar-Skin extends Skin
  
  
  (property background initialize #f accessors generate)
  (property thumb      initialize #f accessors generate)
  (property flat?      initialize #t accessors generate))


;;;
;;;; Splitter-Skin
;;;


(class Splitter-Skin extends Skin
  
  
  (property background initialize #f accessors generate))


;;;
;;;; Stage-Skin
;;;


(class Stage-Skin extends Skin
  
  
  (property background initialize #f accessors generate)
  (property border     initialize #f accessors generate))


;;;
;;;; Toolbar-Skin
;;;


(class Toolbar-Skin extends Skin
  
  
  (property background initialize #f accessors generate)
  (property text-color initialize #f accessors generate))


;;;
;;;; Statusbar-Skin
;;;


(class Statusbar-Skin extends Toolbar-Skin)


;;;
;;;; Text-Skin
;;;


(class Text-Skin extends Skin
  
  
  (property background               initialize #f accessors generate)
  (property caret-color              initialize #f accessors generate)
  (property active-selection-color   initialize #f accessors generate)
  (property inactive-selection-color initialize #f accessors generate)
  (property completion-color         initialize #f accessors generate))


;;;
;;;; Tool-Skin
;;;


(class Tool-Skin extends Skin
  
  
  (property active-background    initialize #f accessors generate)
  (property inactive-background  initialize #f accessors generate)
  (property highlight            initialize #f accessors generate)
  (property focused-text-color   initialize #f accessors generate)
  (property unfocused-text-color initialize #f accessors generate))


;;;
;;;; Tree-Skin
;;;


(class Tree-Skin extends Skin
  
  
  (property background       initialize #f accessors generate)
  (property text-color       initialize #f accessors generate)
  (property line-color       initialize #f accessors generate)
  (property focused-border   initialize #f accessors generate)
  (property focused-color    initialize #f accessors generate)
  (property unfocused-border initialize #f accessors generate)
  (property unfocused-color  initialize #f accessors generate))


;;;
;;;; Register
;;;


(register-skin 'ui (new UI-Skin))


(register-look (new Look name: 'jazz title: "Jazz"))
(register-look (new Look name: 'mac title: "Mac"))
(register-look (new Look name: 'windows title: "Windows"))
(register-look (new Look name: 'x11 title: "X11"))

(prepare-look))
