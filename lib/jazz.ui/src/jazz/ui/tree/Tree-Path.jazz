;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Tree Path
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Stephane Le Cornec.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.ui.tree.Tree-Path jazz


(import (jazz.library)
        (jazz.ui)
        (jazz.utilities))


(class undocumented Tree-Path extends Tree-Label
  
  
  (slot protected father-row)
  
  
  (method (initialize father-row . rest)
    (apply nextmethod rest)
    (set! father-row~self father-row)
    (update-path-title))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-father-row)
    father-row)
  
  
  ;;;
  ;;;; Path
  ;;;
  
  
  (method public (update-path-title)
    (when father-row
      (when (> (get-level~ father-row) 0)
        (let* ((title-cell (get-node-child~ father-row))
               (path-cell (get-path-child~ father-row))
               (father-title (get-title~ title-cell))
               (father-path (get-title~ path-cell)))
          (set-title (if father-path
                         (join (list father-path father-title) ".")
                       father-title))))))))
