;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Image Tools
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.view.Image-Tool jazz


(import (jazz.graphic)
        (jazz.resource)
        (jazz.ui))


(class Image-Tool extends Tool-Button


  (property portfolio         initialize #f accessors explicit)
  (property resource          initialize #f accessors explicit)
  (property disabled-resource initialize #f accessors explicit)
  
  
  (slot image          initialize (new Image position: {Point 2 2}))
  (slot disabled-image initialize (new Image position: {Point 2 2}))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method override (set-background self color)
    (set! background color)
    (set-background image color)
    (set-background disabled-image color)
    (invalidate-view self))


  (method public (get-portfolio self)
    (get-portfolio image))


  (method public (set-portfolio self portfolio)
    (let ((portfolio (if (is? portfolio Portfolio) portfolio (child self portfolio))))
      (set-portfolio image portfolio)
      (set-portfolio disabled-image portfolio))
    (invalidate-view self))


  (method public (get-resource self)
    (get-resource image))


  (method public (set-resource self name)
    (when (not (get-disabled-resource self))
      (set-disabled-resource self (default-disabled-resource name)))
    (set-resource image name)
    (invalidate-view self))


  (method public (get-disabled-resource self)
    (get-resource disabled-image))


  (method public (set-disabled-resource self name)
    (set-resource disabled-image name)
    (invalidate-view self))
  
  
  ;;;
  ;;;; Drawing
  ;;;


  (method override (draw-tool self surface context)
    (let ((offset (if (eq? (get-state self) 'pushed) 2 1)))
      (draw-image self surface context offset offset)))


  (method package (draw-image self surface context h v)
    (draw-at (if (view-enabled? self)
                  image
                disabled-image)
      surface
      context
      h v))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor self (context: context #f))
    (new jazz.ui.descriptors:Image-Tool-Descriptor))))
