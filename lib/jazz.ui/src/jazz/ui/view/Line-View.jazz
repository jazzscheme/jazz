;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Lines
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.view.Line-View jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.view))


(class undocumented Line-View extends View


  (property from  initialize #f accessors explicit)
  (property to    initialize #f accessors explicit)
  (property color initialize #f accessors explicit)

  
  ;;;
  ;;;; Access
  ;;;


  (method public (get-from self)
    from)


  (method public (set-from self value)
    (set! from value)
    (invalidate-view self))


  (method public (get-to self)
    to)


  (method public (set-to self value)
    (set! to value)
    (invalidate-view self))


  (method public (get-color self)
    color)


  (method public (set-color self value)
    (set! color value)
    (invalidate-view self))
  
  
  ;;;
  ;;;; Mouse
  ;;;
  
  
  (definition package Tolerance
    4.)
  
  
  (method override (in-drawing? self pos size)
    (and (nextmethod self pos size)
         (or (null? from)
             (null? to)
             (let ((distance (segment-distance pos from to)))
               (and distance (< distance Tolerance))))))
  
  
  (method override (mouse-down self evt)
    )
  

  ;;;
  ;;;; Drawing
  ;;;

  
  (method override (draw self surface context)
    (when (and from to)
      (let ((line-style (line-style self)))
        (set-style surface line-style)
        (set-line-width surface (line-width self))
        (set-color surface (line-color self))
        (line surface (get-h from) (get-v from) (get-h to) (get-v to))
        (when (eq? line-style 'alternate)
          (set-style surface 'solid)))))
  
  
  (method protected virtual (line-style self)
    (or style 'solid))
  
  
  (method protected virtual (line-width self)
    1)
  
  
  (method protected virtual (line-color self)
    (or color {Color Black}))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor self (context: context #f))
    (new jazz.ui.descriptors:Line-View-Descriptor))))
