;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Tooltip Labels
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.view.Tooltip-Label jazz


(import (jazz.graphic)
        (jazz.jml)
        (jazz.locale)
        (jazz.view))


(class undocumented Tooltip-Label extends View
  
  
  (form
    (<install> font: {Font Caption}))
  
  
  (method override (preferred-size self)
    (let ((title (standard-title self)))
      (if (null? title)
          {Dimension 100 20}
        (let ((extent (maximum (map (lambda (str) (text-extent (effective-font self) (localize str))) title))))
          (new Dimension (+ (get-width extent) 3) (* 13 (length title)))))))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method (standard-title self)
    (remove-trailing ""
      (if (null/pair? title)
          title
        (list title))
      test: equal?))
  
  
  ;;;
  ;;;; Drawing
  ;;;
  
  
  (definition Background-Color
    {Color Tooltip})
  
  
  (method override (draw self surface context)
    (fill-rect surface (get-bounds self) Background-Color)
    (let ((h 2)
          (v 1)
          (title (standard-title self)))
      (set-font surface (effective-font self))
      (for-each (lambda (str)
                  (draw-text surface h v (localize str) {Color Black})
                  (increase! v 13))
                title)))))
