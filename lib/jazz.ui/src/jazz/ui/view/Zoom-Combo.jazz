;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Zoom Combo
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.view.Zoom-Combo jazz


(import (jazz.jml)
        (jazz.ui))


(class Zoom-Combo extends Combo-Box
  
  
  (form
    (<install> editable?: #t))
  
  
  (definition Zoom-Factors
    '((5.0 "500%")
      (2.0 "200%")
      (1.5 "150%")
      (1.0 "100%")
      (0.75 "75%")
      (0.50 "50%")
      (0.33 "33%")
      (0.25 "25%")))


  (method override (finish initargs)
    (nextmethod initargs)
    (set-choices Zoom-Factors)
    (set-value 1.0))
  
  
  ;;;
  ;;;; Value
  ;;;
  
  
  (method override (standardize-content content)
    (format "{a}%" (remove-trailing #\% content)))
  
  
  ;;;
  ;;;; Zoom
  ;;;
  
  
  (method public (get-zoom)
    (let ((content (get-content)))
      (let ((zoom (string->number (remove-trailing #\% content))))
        (if zoom
            (/ zoom 100.)
          (bell)
          (throw-cancel)))))
  
  
  (method public (set-zoom value)
    (set-content (format "{a}%" (fxfloor (* value 100.)))))))
