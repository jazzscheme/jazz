;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Validation Manifest
;;;


(module project.jazz.validation.Validation-Manifest jazz


(import (jazz.io)
        (jazz.jml)
        (jedi))


(class Validation-Manifest extends Project
  
  
  (form
    (<install>                                          title: "jazz.validation" catalog?: #t catalog-extensions: :text include-extensions: :text unit-name: project.jazz.validation.Validation-Manifest
      (<Project-Directory>                              directory: {Directory jazz.validation "src"}
        (<Project-Directory>                            directory: {Directory jazz.validation "src" "jazz"}
          (<Project-Directory>                          directory: {Directory jazz.validation "src" "jazz" "validation"}
            (<Project-Directory>                        directory: {Directory jazz.validation "src" "jazz" "validation" "tester"}
              (<Jazz-File>       name: Tester-Error     source: {File jazz.validation "src" "jazz" "validation" "tester" "Tester-Error.jazz"})
              (<Jazz-File>       name: Tester           source: {File jazz.validation "src" "jazz" "validation" "tester" "Tester.jazz"}))
            (<Project-Directory>                        directory: {Directory jazz.validation "src" "jazz" "validation" "validate"}
              (<Jazz-File>       name: Validate         source: {File jazz.validation "src" "jazz" "validation" "validate" "Validate.jazz"})
              (<Jazz-File>       name: Validation-Suite source: {File jazz.validation "src" "jazz" "validation" "validate" "Validation-Suite.jazz"}))
            (<Jazz-File>         name: _validation      source: {File jazz.validation "src" "jazz" "validation" "_validation.jazz"})
            (<Jazz-File>         name: autoload         source: {File jazz.validation "src" "jazz" "validation" "autoload.jazz"})
            (<Jazz-File>         name: syntax           source: {File jazz.validation "src" "jazz" "validation" "syntax.jazz"})))))))


(register-autoclass Validation-Manifest))
