<html>

<head>
  <link href="css/master.css" rel="stylesheet" type="text/css"/>
  <title>Features</title>
</head>

<body>
<div id="page">
  <h1 id="title">JazzScheme</h1>
  <div id="sectionnav">
    <a class="section" href="index.htm">Home</a>
    <a class="section" href="news.htm">News</a>
    <a class="section" href="features.htm">
      <b>Features</b>
    </a>
    <a class="section" href="screenshots.htm">Screenshots</a>
    <a class="section" href="tutorials.htm">Tutorials</a>
    <a class="section" href="documentation.htm">Documentation</a>
    <a class="section" href="repository.htm">Repository</a>
    <a class="section" href="installation.htm">Installation</a>
  </div>
  <div id="content">
    <div>
      <a name="#f"></a>
      <h3>Features</h3>
      <ul>
        <li>
          <a href="features.htm#features.gambit">Gambit Roots</a>
        </li>
        <li>
          <a href="features.htm#features.kernel">Module System</a>
        </li>
        <li>
          <a href="features.htm#features.jazz">Jazz Platform</a>
        </li>
        <li>
          <a href="features.htm#features.jedi">Jedi IDE</a>
        </li>
      </ul>
    </div>
    <div>
      <a name="features.gambit"></a>
      <h3>Gambit Roots</h3>
JazzScheme is entirely built using the       <a href="http://www.iro.umontreal.ca/~gambit/">Gambit</a>
 system. Building on Gambit offers many benefits:      <dl>
        <dt>
          <i>Conformance</i>
        </dt>
        <dd>Gambit conforms to the R4RS, R5RS and IEEE Scheme standards and implements all optional features including the full numeric tower. </dd>
      </dl>
      <p></p>
      <dl>
        <dt>
          <i>Portability</i>
        </dt>
        <dd>Gambit runs on many platforms and because it is mostly written in Scheme and the compiler generates portable C, the system is easy to port to any platform with a decent C compiler. </dd>
      </dl>
      <p></p>
      <dl>
        <dt>
          <i>Performance</i>
        </dt>
        <dd>Gambit is an extremely fast Scheme implementation. With appropriate declarations, programs generated by the compiler run roughly as fast as equivalent C programs. Thanks to an efficient implementation of continuations, the thread system is very efficient and can support millions of concurrent threads. For optimal performance, Gambit also offers a low-level API with no runtime checking. </dd>
      </dl>
      <p></p>
      <dl>
        <dt>
          <i>Reliability</i>
        </dt>
        <dd>Gambit is a very robust Scheme implementation. Stable releases typically have very few bugs. Gambit has been used to develop large-scale real-world software in academic and commercial settings. </dd>
      </dl>
      <p></p>
      <dl>
        <dt>
          <i>Debugging</i>
        </dt>
        <dd>Gambit comes with a full-featured repl based debugger and includes both an interpreter and a compiler for fast incremental development. </dd>
      </dl>
      <p></p>
      <dl>
        <dt>
          <i>Rich API</i>
        </dt>
        <dd>
Gambit offers a rich library including:          <ul>
            <li>C foreign-function interface</li>
            <li>Lightweight thread system that can support millions of concurrent threads</li>
            <li>Extended I/O (filesystem, networking, subprocesses, ...)</li>
            <li>Extensive Unicode support</li>
            <li>Homogeneous vectors</li>
            <li>Hashtables and weak references</li>
            <li>Extensible reader and printer</li>
            <li>...</li>
          </ul>
        </dd>
      </dl>
    </div>
    <div>
      <a name="features.kernel"></a>
      <h3>Module System</h3>
The first layer that JazzScheme builds on top of Gambit is a language agnostic module and package system.       <span>
        <p></p>
        <b>Code Management</b>
        <p></p>
        <ul>
          <li>Integrated build system</li>
          <ul>
            <li>Automatic dependency management</li>
            <li>Supports multiple configurations</li>
          </ul>
          <li>Module system to structure code</li>
          <li>Package system for deployment</li>
        </ul>
      </span>
    </div>
    <div>
      <a name="features.jazz"></a>
      <h3>Jazz Platform</h3>
The Jazz platform is implemented using the module system as a collection of packages including:      <span>
        <p></p>
        <b>Functional Programming</b>
        <p></p>
        <ul>
          <li>Optional parameters</li>
          <li>Keyword parameters</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Object-Oriented Programming</b>
        <p></p>
        <ul>
          <li>Classes with single inheritance and multiple interfaces implemented</li>
          <li>Metaclasses</li>
          <li>Single-dispatch 'a la' Java</li>
          <li>Generic multi-dispatch methods 'a la' CommonLisp</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Component Programming</b>
        <p></p>
        <ul>
          <li>Inheritance between component classes</li>
          <li>Markup language for persistance</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Type System</b>
        <p></p>
        <ul>
          <li>Fully optional</li>
          <li>Type inference</li>
          <li>Scheme integration</li>
          <ul>
            <li>Supports all Scheme primitive types</li>
            <li>Annotating fixnums and flonums will generate optimal numerical code</li>
          </ul>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Numbers</b>
        <p></p>
        <ul>
          <li>Generic arithmetic</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Sequences</b>
        <p></p>
      </span>
      <span>
        <p></p>
        <b>Exceptions</b>
        <p></p>
      </span>
      <span>
        <p></p>
        <b>Markup</b>
        <p></p>
      </span>
      <span>
        <p></p>
        <b>Remoting</b>
        <p></p>
        <ul>
          <li>Remote method invocation</li>
          <li>
            <span>
Erlang-style processes using               <a href="http://code.google.com/p/termite/">Termite</a>
            </span>
          </li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>User Interface</b>
        <p></p>
        <ul>
          <li>Cross-platform accross Mac OS X, Windows and X11</li>
          <li>
            <span>
High level 2D API through the use of the               <a href="http://cairographics.org/">Cairo</a>
 library            </span>
          </li>
        </ul>
      </span>
    </div>
    <div>
      <a name="features.jedi"></a>
      <h3>Jedi IDE</h3>
Jedi is a fully programmable IDE built entirely in Jazz.       <span>
        <p></p>
        <b>Languages Supported</b>
        <p></p>
        <ul>
          <li><span>Jazz</span></li>
          <li><span>Scheme</span></li>
          <li><span>Common Lisp</span></li>
          <li><span>C++</span></li>
          <li><span>Java</span></li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Project Management</b>
        <p></p>
        <ul>
          <li>Workbench to manage projects and files</li>
          <li>Catalogs to cross-reference source code</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Project Development</b>
        <p></p>
        <ul>
          <li>Test</li>
          <li>Debug</li>
          <li>Build</li>
          <li>Run</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Source Code</b>
        <p></p>
        <i>Text</i>
        <ul>
          <li>Syntax coloring</li>
          <li>Evaluate code</li>
        </ul>
        <i>Exploring</i>
        <ul>
          <li>Chapters browser</li>
          <li>Definitions browser</li>
          <li>Find definitions</li>
          <li>Find references</li>
          <li>History navigation</li>
          <li>Class browser</li>
        </ul>
        <i>Searching</i>
        <ul>
          <li>Incremental search</li>
          <li>Multiple simultaneous searches and replaces</li>
          <li>Ability to play a textual macro on replace</li>
        </ul>
        <i>Editing</i>
        <ul>
          <li>Clipboard stack</li>
          <li>Mouse copying</li>
          <li>Customisable symbol completion</li>
          <li>Code tabulation</li>
          <li>Textual macro recording</li>
          <li>Unlimited undo / redo</li>
          <li>Compare to saved</li>
          <li>Fully programmable</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Debugging</b>
        <p></p>
        <ul>
          <li>Remote Debugger</li>
          <li>Console to evaluate code</li>
          <li>Supports multiple threads</li>
          <li>Supports debugging multiple processes simultaneously</li>
          <li>Stack inspector with precise callsite highlighting</li>
          <li>Exact highlighting of errors</li>
          <li>Object inspector</li>
          <li>View explorer</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Profiling</b>
        <p></p>
        <ul>
          <li>Includes a precise statistical profiler</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Collaborative Work</b>
        <p></p>
        <ul>
          <li>Compare Directories</li>
          <li>Compare Files</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Web Development</b>
        <p></p>
        <ul>
          <li>Visually manage your webservers</li>
        </ul>
      </span>
    </div>
    <div id="footer">
      <p>Copyright &copy; 1996-2009 Guillaume Cartier</p>
    </div>
  </div>
</div>
</body>

</html>
