<html>

<head>
  <link href="css/master.css" rel="stylesheet" type="text/css"/>
  <title>Jazz Platform</title>
</head>

<body>
<div id="page">
  <h1 id="title">JazzScheme</h1>
  <div id="sectionnav">
    <a class="section" href="index.htm">Home</a>
    <a class="section" href="news.htm">News</a>
    <a class="section" href="features.htm">Features</a>
    <a class="section" href="screenshots.htm">Screenshots</a>
    <a class="section" href="tutorials.htm">Tutorials</a>
    <a class="section" href="community.htm">Community</a>
    <a class="section" href="documentation.htm">Documentation</a>
    <a class="subsection" href="kernel.htm">Module System</a>
    <a class="subsection" href="jazz.htm">
      <b>Jazz Platform</b>
    </a>
    <a class="subsection" href="jedi.htm">Jedi IDE</a>
    <a class="subsection" href="samples.htm">Samples</a>
    <a class="subsection" href="reference.htm">Reference</a>
    <a class="section" href="installation.htm">Installation</a>
  </div>
  <div id="content">
    <div style="margin-top: 22;"></div>
    <h3 class="summary">Jazz Platform</h3>
    <div class="summary_toc">
      <a href="#TOC">Table of Contents</a>
    </div>
    <div class="summary_index">
      <a href="#INDEX">Index</a>
    </div>
    <div>
      <div class="summary1">
        <a href="#overview">1. Overview</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#lexical">2. Lexical Syntax</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#functional">3. Functional Programming</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#modifiers">4. Modifiers</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#object-oriented">5. Object-Oriented Programming</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#component-programming">6. Component Programming</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#types">7. Type Annotations</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#numbers">8. Numbers</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#symbols">9. Symbols</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#sequences">10. Sequences</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#iteration">11. Iteration</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#exceptions">12. Exceptions</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#input/output">13. Input / Output</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#regular-expressions">14. Regular Expressions</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#date/time">15. Date / Time</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#jml">16. Markup</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#depot">17. Source Control</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#database">18. Database</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#profiling">19. Profiling</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#remoting">20. Remoting</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#system">21. System</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#user-interface">22. User Interface</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#c-interface">23. C Interface</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#License">24. License</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#Designer">25. Designer</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#Library">26. Library</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#Java">27. Java</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#SQL">28. SQL</a>
      </div>
    </div>
    <div>
      <div class="summary1">
        <a href="#SEC25">29. Modules</a>
      </div>
    </div>
    <a name="overview"></a>
    <h3 class="section1">1. Overview</h3>
    <p>Jazz is a programming language based on Scheme. </p>
    <div>
      <p class="definition">
<b>Scheme</b></p>
      <p>
Jazz conforms to the R5RS Scheme standard and implements all optional features. For documentation, see <a href="http://www.schemers.org/Documents/Standards/R5RS/HTML/">R5RS Documentation</a></p>
    </div>
    <div>
      <p class="definition">
<b>Gambit</b></p>
      <p>
Jazz is built on top of the Gambit system. As such, it has access to every feature of Gambit. For documentation, see <a href="http://www.iro.umontreal.ca/~gambit/doc/gambit-c.html">Gambit Manual</a></p>
    </div>
    <a name="scheme"></a>
    <h4 class="section2">1.1. Scheme</h4>
Jazz fully supports every Scheme feature of the underlying Scheme system. By using Scheme's load primitive, you can load any existing Scheme code.     <a name="toplevel_syntax"></a>
    <h4 class="section2">1.2. Toplevel Syntax</h4>
    <a name="module"></a>
    <p class="form-definition">
<b>module</b> <i>module-name ...</i></p>
    <p></p>
    <a name="library"></a>
    <p class="form-definition">
<b>library</b> <i>library-name ...</i></p>
    <p></p>
    <a name="naming"></a>
    <h4 class="section2">1.3. Naming Conventions</h4>
    <div>
      <p class="definition">
<b>Comments</b></p>
      <ul>
        <li><span>; Code comment : put at the end of a line of code to document it.</span></li>
        <li><span>;; Definition comment : documents a definition and many lines may be used.</span></li>
        <li><span>;;; Section comment : documents a section.</span></li>
        <li><span>;;;; Chapter comment : specifies a section title naming and will be gathered in a chapter.</span></li>
      </ul>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>Modules & Libraries</b></p>
      <p>Modules and libraries names are lowercase separated by .</p>
      <ul>
        <li>
          <span>
            <code>jazz.ui</code>
          </span>
        </li>
        <li>
          <span>
            <code>jedi.product</code>
          </span>
        </li>
      </ul>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>Classes & Interfaces</b></p>
      <p>Class & Interfaces names are capitalized</p>
      <ul>
        <li>
          <span>
            <code>View</code>
          </span>
        </li>
        <li>
          <span>
            <code>Java-Text</code>
          </span>
        </li>
      </ul>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>Methods</b></p>
      <p>Methods are in lowercase separated by -</p>
      <ul>
        <li>
          <span>
            <code>get-application</code>
          </span>
        </li>
      </ul>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>Predicates</b></p>
      <p>Predicates end with ?</p>
      <ul>
        <li>
          <span>
            <code>eq?</code>
          </span>
        </li>
        <li>
          <span>
            <code>string?</code>
          </span>
        </li>
      </ul>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>Mutators</b></p>
      <p>Destructive functions end with !</p>
      <ul>
        <li>
          <span>
            <code>set-cdr!</code>
          </span>
        </li>
        <li>
          <span>
            <code>append!</code>
          </span>
        </li>
      </ul>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>Convertors</b></p>
      <p>Type conversion functions have -> in their name</p>
      <ul>
        <li>
          <span>
            <code>symbol->string</code>
          </span>
        </li>
        <li>
          <span>
            <code>symbol->keyword</code>
          </span>
        </li>
      </ul>
    </div>
    <a name="lexical"></a>
    <h3 class="section1">2. Lexical Syntax</h3>
    <div>
      <p class="definition">
<b>Identifiers</b></p>
      <p>Identifiers in Jazz are case sensitive. A common usage of this is to have a class named X and a variable containing an instance of X named x.</p>
      <p></p>
      <p>The following characters are considered alphabetic and can thus be used in identifiers:</p>
      <p>! $ % & * + - . / : < = > ? ^ _ ~</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>Whitespace</b></p>
      <p>Spaces, tabs, carriage returns and line feeds are considered whitespace and can be freely inserted in Jazz code without changing the meaning of the code.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>Comments</b></p>
      <p>Jazz offers two types of comments:</p>
      <ul>
        <li><span>; starts a line based comment and</span></li>
        <li><span>@name starts an sexpr based comment where name can be any symbol. It is completely ignored and can be used for documentation purposes.</span></li>
      </ul>
    </div>
    <a name="functional"></a>
    <h3 class="section1">3. Functional Programming</h3>
    <div>
      <p class="definition">
<b>Variable value</b></p>
      <p>
<code>x</code></p>
    </div>
    <p></p>
    <div>
      <p class="definition">
<b>Function invocation</b></p>
      <p>
<code>(f x y)</code></p>
    </div>
    <p></p>
    <p>Examples:</p>
    <ul>
      <li>
        <code>x</code>
      </li>
      <li>
        <code>(f 2 3)</code>
      </li>
    </ul>
    <a name="functional_syntax"></a>
    <h4 class="section2">3.1. Functional Syntax</h4>
    <a name="definition"></a>
    <p class="form-definition">
<b>definition</b> <i>name value</i></p>
    <p></p>
    <p>A definition associates name to value inside the defining unit. A definition is as field and as such is stored in the class and doesn't take any space in instances. At class instantiation, value is evaluated in an empty lexical environment and in an empty object environment.</p>
    <a name="functions"></a>
    <h4 class="section2">3.2. Functions</h4>
    <p>In Jazz, functions are first order objects and can be freely manipulated as any other objects. They can be passed as parameters, stored in variables, ...Anyone who says functions are not object-oriented is just showing they have'nt really went far enough in their understanding of the problem!</p>
    <p></p>
    <div>
      <p class="definition">
<b>Parameters</b></p>
      <p>On top of the standard positional parameter passing scheme, Jazz offers the following:</p>
      <ul>
        <li><span>Variable number of parameters</span></li>
        <li><span>Optional parameters</span></li>
        <li><span>Keyword parameters</span></li>
      </ul>
    </div>
    <a name="syntax_forms"></a>
    <h4 class="section2">3.3. Syntax</h4>
    <a name="bind"></a>
    <p class="definition">
<b>bind</b> <i>variables-tree values-tree expr ...</i></p>
    <p></p>
    <p></p>
    <a name="bind-optionals"></a>
    <p class="definition">
<b>bind-optionals</b> <i>((variable default) ...) values-list expr ...</i></p>
    <p></p>
    <p></p>
    <a name="bind-keywords"></a>
    <p class="definition">
<b>bind-keywords</b> <i>((variable default) ...) values-list expr ...</i></p>
    <p></p>
    <p></p>
    <a name="receive"></a>
    <p class="definition">
<b>receive</b> <i>(variable ...) values expr ...</i></p>
    <p></p>
    <p></p>
    <a name="quote"></a>
    <p class="definition">
<b>quote</b> <i>expr</i></p>
    <p></p>
    <p></p>
    <a name="if"></a>
    <p class="definition">
<b>if</b> <i>test yes-expr no-expr ...</i></p>
    <p></p>
    <p></p>
    <a name="when"></a>
    <p class="definition">
<b>when</b> <i>test yes-expr ...</i></p>
    <p></p>
    <p></p>
    <a name="unless"></a>
    <p class="definition">
<b>unless</b> <i>test no-expr ...</i></p>
    <p></p>
    <p></p>
    <a name="while"></a>
    <p class="definition">
<b>while</b> <i>test expr ...</i></p>
    <p></p>
    <p></p>
    <a name="begin"></a>
    <p class="definition">
<b>begin</b> <i>expr ...</i></p>
    <p></p>
    <p></p>
    <a name="prog1"></a>
    <p class="definition">
<b>prog1</b> <i>result-expr1 expr ...</i></p>
    <p></p>
    <p></p>
    <a name="tie"></a>
    <p class="definition">
<b>tie</b> <i></i></p>
    <p></p>
    <p></p>
    <a name="cond"></a>
    <p class="definition">
<b>cond</b> <i>(test expr ...) ...</i></p>
    <p></p>
    <p></p>
    <a name="case"></a>
    <p class="definition">
<b>case</b> <i>target (try expr ...) ...</i></p>
    <p></p>
    <p></p>
    <a name="ecase"></a>
    <p class="definition">
<b>ecase</b> <i>target (try expr ...) ...</i></p>
    <p></p>
    <p></p>
    <a name="typecase"></a>
    <p class="definition">
<b>typecase</b> <i>target (try expr ...) ...</i></p>
    <p></p>
    <p></p>
    <a name="set!"></a>
    <p class="definition">
<b>set!</b> <i>variable expr</i></p>
    <p></p>
    <p></p>
    <a name="increase!"></a>
    <p class="definition">
<b>increase!</b> <i>variable expr {value}</i></p>
    <p></p>
    <p></p>
    <a name="decrease!"></a>
    <p class="definition">
<b>decrease!</b> <i>variable expr {value}</i></p>
    <p></p>
    <p></p>
    <a name="let"></a>
    <p class="definition">
<b>let</b> <i>((variable value) ...) expr ...</i></p>
    <p></p>
    <p></p>
    <a name="let*"></a>
    <p class="definition">
<b>let*</b> <i>((variable value) ...) expr ...</i></p>
    <p></p>
    <p></p>
    <a name="letrec"></a>
    <p class="definition">
<b>letrec</b> <i>((variable value) ...) expr ...</i></p>
    <p></p>
    <p></p>
    <a name="catch"></a>
    <p class="definition">
<b>catch</b> <i>name expr ...</i></p>
    <p></p>
    <p></p>
    <a name="unwind-protect"></a>
    <p class="definition">
<b>unwind-protect</b> <i>protected-expr protection-expr ...</i></p>
    <p></p>
    <p></p>
    <a name="lambda"></a>
    <p class="definition">
<b>lambda</b> <i>parameters-list expr ...</i></p>
    <p></p>
    <p></p>
    <a name="function"></a>
    <p class="definition">
<b>function</b> <i>parameters-list expr ...</i></p>
    <p></p>
    <p></p>
    <a name="and"></a>
    <p class="definition">
<b>and</b> <i>expr ...</i></p>
    <p></p>
    <p>This syntactic form will return true if and only if all expr... are true. Note that and will stop as soon as it encounters a false value.</p>
    <a name="or"></a>
    <p class="definition">
<b>or</b> <i>expr ...</i></p>
    <p></p>
    <p>This syntactic form will return true if one of the expr... is true. Note that or will stop as soon as it encounters a true value.</p>
    <a name="essay"></a>
    <p class="definition">
<b>essay</b> <i>expr ...</i></p>
    <p></p>
    <p></p>
    <a name="either"></a>
    <p class="definition">
<b>either</b> <i>expr ...</i></p>
    <p></p>
    <p></p>
    <a name="assert"></a>
    <p class="definition">
<b>assert</b> <i>asserted-expr</i></p>
    <p></p>
    <p></p>
    <a name="assert-type"></a>
    <p class="definition">
<b>assert-type</b> <i>asserted-type</i></p>
    <p></p>
    <p></p>
    <a name="modifiers"></a>
    <p class="definition">
<b>Modifiers</b></p>
    <div>
      <p class="definition">
<b>meta</b></p>
      <p>Defines a field of the meta class. Because a class is an object, meta methods can use self to refer to themselves (i.e. the class).</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>private</b></p>
      <p>Access is restricted to classes that reside in the same file.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>protected</b></p>
      <p>Access is restricted to sub-classes and classes in the same package.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>public</b></p>
      <p>Access is unrestricted.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>final</b></p>
      <p>A final definition cannot be overridden.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>virtual</b></p>
      <p>A virtual definition can be overridden in sub-classes.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>chained</b></p>
      <p>A chained method can be overridden in sub-classes and the override must call the overridden method.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>abstract</b></p>
      <p>A abstract definition must overridden in some sub-class. This modifier is currently unimplemented.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>inline</b></p>
      <p>An inline method permits the compiler to inline its code.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>synchronized</b></p>
      <p>A synchronized method is guarantied to always be executing in at most one thread at a time.</p>
    </div>
    <p></p>
    <p></p>
    <div>
      <p class="definition">
<b>remote</b></p>
      <p>A remote method can be used remotely (see the JRM package).</p>
    </div>
    <p></p>
    <a name="object-oriented"></a>
    <h3 class="section1">5. Object-Oriented Programming</h3>
    <a name="classes"></a>
    <h4 class="section2">5.1. Classes</h4>
    <p>Jazz offers an object-oriented layer with :</p>
    <p></p>
    <div>
      <p class="definition">
<b>Method invocation</b></p>
      <p>
<xmp>(f~ obj x y)</xmp></p>
    </div>
    <p></p>
    <p>Examples:</p>
    <ul>
      <li>
        <code>(get-size~ window)</code>
      </li>
      <li>
        <code>(invalidate-view~ (get-parent~ view))</code>
      </li>
    </ul>
    <p></p>
    <ul>
      <li><span>Classes with single inheritance and multiple interfaces implemented</span></li>
      <li><span>Metaclasses</span></li>
      <li><span>Single-dispatch 'a la' Java</span></li>
      <li><span>Generic multi-dispatch methods 'a la' CommonLisp</span></li>
    </ul>
    <a name="class"></a>
    <p class="form-definition">
<b>class</b> <i>extends implements uses ...</i></p>
    <p></p>
    <p>Jazz uses a single inheritance model where a class can extend only one superclass. A class can implement any number of interfaces.</p>
    <a name="slot"></a>
    <p class="form-definition">
<b>slot</b> <i>name <initialize> <initial-value></i></p>
    <p></p>
    <p>A slot is a field that defines the structure of the instances of a class.</p>
    <a name="property"></a>
    <p class="form-definition">
<b>property</b> <i>name <initialize> <initial-value> <getter> <getter-name> <setter> <setter-name></i></p>
    <p></p>
    <p>A property is a slot that can specify a getter and a setter.</p>
    <a name="method"></a>
    <p class="form-definition">
<b>method</b> <i>{modifiers} (name . parameters) {return-type} . body</i></p>
    <p></p>
    <p>A method is where code resides.</p>
    <a name="meta-classes"></a>
    <h4 class="section3">5.1.5. Meta-Classes</h4>
    <a name="interfaces"></a>
    <h4 class="section2">5.2. Interfaces</h4>
    <a name="interface"></a>
    <p class="form-definition">
<b>interface</b> <i>extends uses ...</i></p>
    <p></p>
    <p>An interface defines a new type but cannot contain code.</p>
    <a name="Object"></a>
    <h4 class="class">Object</h4>
    <p>The base class of every other class.</p>
    <a name="initialize"></a>
    <p class="definition">
<b>initialize</b> <i>object ...</i></p>
    <p></p>
    <a name="destroy"></a>
    <p class="definition">
<b>destroy</b> <i></i></p>
    <p></p>
    <a name="close"></a>
    <p class="definition">
<b>close</b> <i></i></p>
    <p></p>
    <a name="print"></a>
    <p class="definition">
<b>print</b> <i>printer detail</i></p>
    <p></p>
    <a name="SEC1"></a>
    <h4 class="section3">5.3.5. Literals</h4>
    <div>
      <p class="definition">
<b>Literals</b></p>
      <p>Jazz supports a powerfull concept where any class can define it's own literal constants using the following syntax: {class-name ...}. This integrates classes fully with the reader and printer.</p>
      <p>Examples:</p>
      <ul>
        <li>
          <code>{Point 2 3}</code>
        </li>
        <li>
          <code>{Dimension 100 100}</code>
        </li>
        <li>
          <code>{Color name: Red}</code>
        </li>
        <li>
          <code>{Font name: Code}</code>
        </li>
      </ul>
    </div>
    <a name="dynamic-dispatch"></a>
    <h4 class="section2">5.4. Dynamic Dispatch</h4>
    <a name="generic-methods"></a>
    <h4 class="section2">5.5. Generic methods</h4>
    <a name="component-programming"></a>
    <h3 class="section1">6. Component Programming</h3>
    <p>One of the biggest strength of components is the full integration of the programming metaphor with the visual design metaphor they enable. By seamlessly intermixing programming code and designer data, components brings all the power of programming tools to the design part.</p>
    <a name="Component"></a>
    <h4 class="class">Component</h4>
    <p>Object-Oriented Databases</p>
    <p></p>
    <p>Inheritance and Composition</p>
    <p></p>
    <p>The Jazz component system unifies the inheritance and composition based programming models.</p>
    <p></p>
    <p>The Component class is by far the most fundamental one. It is the foundation of all the graphical user interface but can also be extremely usefull in non graphical contexes.</p>
    <p></p>
    <p>Components are the result the following design goals:</p>
    <ul>
      <li><span> Components should be editable by a graphical editor.</span></li>
      <li><span> Components should be savable to disk and restorable from disk.</span></li>
      <li><span> Components should be hierarchical.</span></li>
      <li><span> Components should integrate seamlessly with the object model.</span></li>
      <li><span> Components should integrate seamlessly with the programming language.</span></li>
    </ul>
    <a name="name"></a>
    <p class="definition">
<b>name</b></p>
    <p></p>
    <p>Every component can be named. A name must be a symbol or nil. A name of nil represents an anonymous component.</p>
    <a name="parent"></a>
    <p class="definition">
<b>parent</b></p>
    <p></p>
    <a name="children"></a>
    <p class="definition">
<b>children</b></p>
    <p></p>
    <a name="find-component"></a>
    <p class="definition">
<b>find-component</b> <i>name</i></p>
    <p></p>
    <p>Returns the child whose name is name. If no such child is found, nil is returned.</p>
    <a name="child"></a>
    <p class="definition">
<b>child</b> <i>name</i></p>
    <p></p>
    <p>Returns the child whose name is name. If no such child is found, an error is signaled.</p>
    <a name="install"></a>
    <p class="definition">
<b>install</b> <i></i></p>
    <p></p>
    <a name="conclude"></a>
    <p class="definition">
<b>conclude</b> <i></i></p>
    <p></p>
    <a name="finish"></a>
    <p class="definition">
<b>finish</b> <i></i></p>
    <p></p>
    <a name="prepare"></a>
    <p class="definition">
<b>prepare</b> <i></i></p>
    <p></p>
    <a name="locate"></a>
    <p class="definition">
<b>locate</b> <i></i></p>
    <p></p>
    <a name="Form"></a>
    <h4 class="class">Form</h4>
    <p>Forms contain properties. Each subform can redefine parts of the parent form. Properties can be added, modified or even removed.</p>
    <p></p>
    <p>For example, a class X has two properties, a and b. The derived class Y change the property a. The resulting form would contain both a and b, with a being the redefined property.</p>
    <p></p>
    <p>X (a = 2, b = 3) -> Y (a = 5) ---> a = 5, b = 3</p>
    <p></p>
    <p>When a form is created, the base form is loaded, then each modification of the successive branches are applied, up to our final form.</p>
    <p></p>
    <p>A property initialized in a class can be impacted by the class's form and all subsequent form redefinitions in the subclasses.</p>
    <a name="Branch"></a>
    <h4 class="class">Branch</h4>
    <p>A branch is simply a component that encapsulates a form. This branch can be installed or removed at will. Branchs can also be hierarchicaly nested. Thinking about components, you can now give them static shape with a form, or go further and collect some branchs that can be applied to them or go even further and thats the complete flexibility of programming. </p>
    <p></p>
    <p>With this naming, every thing becomes very clean -> for example the saved searches are branchs of the search that you package (maybe to a file or maybe you are copy pasting them or even drag and dropping them!) to a file and later on unpackage and reinstall in the search! Seeing it this way really makes it clear that branchs are clearly an outstanding feature of Jazz. </p>
    <p></p>
    <p>If I can reach a point where everytning is components that can be packaged for saving, copy pasting, ... and all the tools are based on that, I see branches as a concept that will show that a huge portion of the code out there is basically doing branch management stuff without knowing it. </p>
    <a name="types"></a>
    <h3 class="section1">7. Type Annotations</h3>
    <p>Jazz is a dynamically typed language. Types are associated with objects as opposed to statically typed languages where types are associated with variables. With a dynamically typed language, type information is always available at runtime contrary to statically typed languages where only the compiler has access to type information</p>
    <p></p>
    <p>Jazz offer optional type declarations.</p>
    <p></p>
    <p>Types are denoted by :</p>
    <xmp><primitive> (ex: <int> <bool>)</xmp>
    <xmp><class> (ex: <View> <Window>)</xmp>
    <p>denote the type of all objects of type class, the null not included</p>
    <xmp><class+> (ex: <Point+> <Rect+>)</xmp>
    <p>denote the type of all objects of type class, the null included</p>
    <p></p>
    <p>Using a &lt;class&gt; type specifier instead of the more generic &lt;class+&gt; specifier will enable the compiler to enforce non null.</p>
    <a name="numbers"></a>
    <h3 class="section1">8. Numbers</h3>
    <a name="generic-arithmetic"></a>
    <h4 class="section2">8.1. Generic Arithmetic</h4>
    <a name="symbols"></a>
    <h3 class="section1">9. Symbols</h3>
    <p>Jazz is symbolic language where symbols are used extensively. Symbols can be used as a very efficient higher level abstraction replacement for integer enumerations</p>
    <a name="sequences"></a>
    <h3 class="section1">10. Sequences</h3>
    <a name="lists"></a>
    <h4 class="section2">10.1. List</h4>
    <p>Lists are the most flexible data structure available in Jazz. They can grow to accommodate any number of elements and this very efficiently. As they are sequences, they are supported by a large number of manipulation functions</p>
    <a name="vectors"></a>
    <h4 class="section2">10.2. Vector</h4>
    <a name="u8vectors"></a>
    <h4 class="section2">10.3. U8Vector</h4>
    <a name="strings"></a>
    <h4 class="section2">10.4. String</h4>
    <a name="queues"></a>
    <h4 class="section2">10.5. Queue</h4>
    <a name="axises"></a>
    <h4 class="section2">10.6. Axis</h4>
    <a name="subseqs"></a>
    <h4 class="section2">10.7. Subseq</h4>
    <a name="iteration"></a>
    <h3 class="section1">11. Iteration</h3>
    <a name="sequences-iteration"></a>
    <h4 class="section2">11.1. Sequences</h4>
    <a name="loop-macro"></a>
    <h4 class="section2">11.2. Loop Macro</h4>
    <a name="loop"></a>
    <p class="definition">
<b>loop</b> <i>...</i></p>
    <p></p>
    <code>for</code>
    <code>in</code>
    <code>in-properties</code>
    <code>iterate</code>
    <code>from</code>
    <code>repeat</code>
    <code>do</code>
    <code>sum</code>
    <code>collect</code>
    <a name="exceptions"></a>
    <h3 class="section1">12. Exceptions</h3>
    <a name="exception"></a>
    <h4 class="section2">12.1. Exception</h4>
    <a name="input/output"></a>
    <h3 class="section1">13. Input / Output</h3>
    <a name="file"></a>
    <h4 class="section2">13.1. File</h4>
    <a name="directory"></a>
    <h4 class="section2">13.2. Directory</h4>
    <a name="aliases"></a>
    <h4 class="section2">13.3. Aliases</h4>
Aliases are symbolic names for directories. They are similar to CommonLisp's logical pathnames.     <p></p>
The following aliases are predefined:    <ul>
      <li>Home</li>
      <li>User</li>
      <li>Bin</li>
      <li>Jazz</li>
    </ul>
    <a name="formatted_output"></a>
    <h4 class="section2">13.4. Formatted Output</h4>
    <p>Implements formatted output.</p>
    <p></p>
    <div>
      <p class="definition">
<b>Directives</b></p>
      <table class="terminology" width="500">
        <th>Name</th>
        <th>Accessor</th>
        <th>Description</th>
        <tr>
          <td>ASCII</td>
          <td>a</td>
          <td>human readable</td>
        </tr>
        <tr>
          <td>SEXPR</td>
          <td>s</td>
          <td>reader readable</td>
        </tr>
        <tr>
          <td>TEXT</td>
          <td>t</td>
          <td>textual representation</td>
        </tr>
        <tr>
          <td>PRINT</td>
          <td>p</td>
          <td>ascii or sexpr or text</td>
        </tr>
        <tr>
          <td>REAL</td>
          <td>r</td>
          <td>real number</td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>h</td>
          <td>character</td>
        </tr>
        <tr>
          <td>LIST</td>
          <td>l</td>
          <td>remove parenthesis</td>
        </tr>
        <tr>
          <td>PROPERTIES</td>
          <td>k</td>
          <td>properties list</td>
        </tr>
        <tr>
          <td>UNSIGNED</td>
          <td>u</td>
          <td>unsigned integer</td>
        </tr>
        <tr>
          <td>HEXADECIMAL</td>
          <td>x</td>
          <td>hexadecimal integer</td>
        </tr>
        <tr>
          <td>COLUMN</td>
          <td>c</td>
          <td>column</td>
        </tr>
        <tr>
          <td>TAB</td>
          <td>&</td>
          <td>insert tab character</td>
        </tr>
        <tr>
          <td>NEW_LINE</td>
          <td>%</td>
          <td>insert new line</td>
        </tr>
        <tr>
          <td>LOCALIZE</td>
          <td>z</td>
          <td>localized string</td>
        </tr>
        <tr>
          <td>FORMATTED</td>
          <td>f</td>
          <td>formatted control</td>
        </tr>
      </table>
    </div>
    <p></p>
    <div>
      <p class="definition">
<b>Parameters</b></p>
      <p>{x :a value :b value ?}</p>
      <p>:v -> takes the info from the parameters</p>
      <p></p>
      <p>Examples:</p>
      <ul>
        <li>
          <code>(format :string "{_ 5}")</code>
        </li>
        <li>
          <code>(format :string "{a :width :v :justify right}" bonjour 20)</code>
        </li>
      </ul>
      <p></p>
      <p>Parameters can be optional and can be keyword based.</p>
      <ul>
        <li><span>list?</span></li>
        <li><span>width</span></li>
        <li><span>justify -> :left :right</span></li>
        <li><span>padding</span></li>
        <li><span>separator</span></li>
        <li><span>last-separator</span></li>
        <li><span>precision</span></li>
        <li><span>properties</span></li>
        <li><span>empty-value</span></li>
        <li><span>detail</span></li>
      </ul>
    </div>
    <a name="regular-expressions"></a>
    <h3 class="section1">14. Regular Expressions</h3>
    <a name="date/time"></a>
    <h3 class="section1">15. Date / Time</h3>
    <a name="jml"></a>
    <h3 class="section1">16. Markup</h3>
    <p>JML plays a key role in Jazz. Almost all data externaly persisted will use JML as its representation format.</p>
    <p></p>
    <p>Key Classes:</p>
    <div>
      <p class="definition">
<b>JML</b></p>
      <p>A module of JML related functions.</p>
    </div>
    <div>
      <p class="definition">
<b>JML-Node</b></p>
    </div>
    <div>
      <p class="definition">
<b>JML-Element</b></p>
    </div>
    <div>
      <p class="definition">
<b>JML-Text</b></p>
    </div>
    <div>
      <p class="definition">
<b>JML-Parser</b></p>
    </div>
    <div>
      <p class="definition">
<b>JML-Transformation</b></p>
    </div>
    <div>
      <p class="definition">
<b>JML-Renderer</b></p>
    </div>
    <a name="depot"></a>
    <h3 class="section1">17. Source Control</h3>
A depot is an abstraction for a source control system.     <a name="database"></a>
    <h3 class="section1">18. Database</h3>
    <a name="Connection"></a>
    <h4 class="class">Connection</h4>
    <p>A database connection.</p>
    <a name="Request"></a>
    <h4 class="class">Request</h4>
    <p>A request to a stored procedure.</p>
    <a name="Recordset"></a>
    <h4 class="class">Recordset</h4>
    <p>A recordset returned by a request.</p>
    <a name="profiling"></a>
    <h3 class="section1">19. Profiling</h3>
    <a name="remoting"></a>
    <h3 class="section1">20. Remoting</h3>
    <a name="proxies"></a>
    <h4 class="section2">20.1. Proxies</h4>
    <a name="stubs"></a>
    <h4 class="section2">20.2. Stubs</h4>
    <a name="system"></a>
    <h3 class="section1">21. System</h3>
    <a name="process"></a>
    <h4 class="section2">21.1. Process</h4>
    <a name="application"></a>
    <h4 class="section2">21.2. Application</h4>
    <a name="user-interface"></a>
    <h3 class="section1">22. User Interface</h3>
The cross-platform UI is a high level framework written in Jazz that uses Cairo for backend. It runs on Mac OS X, Windows and X11.     <a name="SEC2"></a>
    <h4 class="section2">22.1. Drawing</h4>
    <a name="SEC3"></a>
    <h4 class="section3">22.1.1. Cairo</h4>
    <a name="SEC4"></a>
    <h4 class="section3">22.1.2. Surface</h4>
    <a name="SEC5"></a>
    <h4 class="section3">22.1.3. Color</h4>
    <a name="SEC6"></a>
    <h4 class="section3">22.1.4. Font</h4>
    <a name="SEC7"></a>
    <h4 class="section3">22.1.5. Point</h4>
    <a name="SEC8"></a>
    <h4 class="section3">22.1.6. Dimension</h4>
    <a name="SEC9"></a>
    <h4 class="section3">22.1.7. Rect</h4>
    <a name="SEC10"></a>
    <h4 class="section3">22.1.8. Cell</h4>
    <a name="SEC11"></a>
    <h4 class="section3">22.1.9. Range</h4>
    <a name="SEC12"></a>
    <h4 class="section2">22.2. Windows</h4>
    <a name="Window"></a>
    <h4 class="class">Window</h4>
    <a name="Toplevel"></a>
    <h4 class="class">Toplevel</h4>
    <a name="Stage"></a>
    <h4 class="class">Stage</h4>
A stage window is the parent window of all documents.     <a name="Palette"></a>
    <h4 class="class">Palette</h4>
Windows of this class should be permanent popups.    <a name="Popup"></a>
    <h4 class="class">Popup</h4>
Windows of this class should be temporary popup windows like tooltips, menus, ... For permanent popups see Palette.     <a name="Dialog"></a>
    <h4 class="class">Dialog</h4>
    <a name="SEC13"></a>
    <h4 class="section2">22.3. Basic Views</h4>
    <a name="View"></a>
    <h4 class="class">View</h4>
    <a name="Border-View"></a>
    <h4 class="class">Border-View</h4>
    <a name="Check-Box"></a>
    <h4 class="class">Check-Box</h4>
    <a name="Group-Box"></a>
    <h4 class="class">Group-Box</h4>
    <a name="Label-View"></a>
    <h4 class="class">Label-View</h4>
    <a name="Layout-View"></a>
    <h4 class="class">Layout-View</h4>
    <a name="Push-Button"></a>
    <h4 class="class">Push-Button</h4>
    <a name="Radio-Button"></a>
    <h4 class="class">Radio-Button</h4>
    <a name="Scroller-View"></a>
    <h4 class="class">Scroller-View</h4>
    <a name="SEC14"></a>
    <h4 class="section2">22.4. Text-View</h4>
    <a name="Text-View"></a>
    <h4 class="class">Text-View</h4>
    <a name="SEC15"></a>
    <h4 class="section2">22.5. Tree-View</h4>
    <a name="Tree-View"></a>
    <h4 class="class">Tree-View</h4>
    <a name="Tree-Header"></a>
    <h4 class="class">Tree-Header</h4>
    <a name="Tree-Node-Column"></a>
    <h4 class="class">Tree-Node-Column</h4>
    <a name="Tree-Label-Column"></a>
    <h4 class="class">Tree-Label-Column</h4>
    <a name="Tree-Row"></a>
    <h4 class="class">Tree-Row</h4>
    <a name="SEC16"></a>
    <h4 class="section2">22.6. Hosting</h4>
    <a name="SEC17"></a>
    <h4 class="section3">22.6.1. Host</h4>
    <a name="SEC18"></a>
    <h4 class="section3">22.6.2. Guest</h4>
    <a name="SEC19"></a>
    <h4 class="section2">22.7. Layouting</h4>
    <a name="Flow-Layout"></a>
    <h4 class="class">Flow-Layout</h4>
    <a name="Border-Layout"></a>
    <h4 class="class">Border-Layout</h4>
    <a name="SEC20"></a>
    <h4 class="section2">22.8. Activation</h4>
    <table class="terminology" width="500">
      <th>Event</th>
      <th>Description</th>
      <tr>
        <td>focus-gain</td>
        <td>Sent to a view that gains focus</td>
      </tr>
      <tr>
        <td>focus-lose</td>
        <td>Sent to a view that loses focus</td>
      </tr>
      <tr>
        <td>host-activate</td>
        <td>Sent to guest when host gains focus</td>
      </tr>
      <tr>
        <td>host-deactivate</td>
        <td>Sent to guest when host loses focus</td>
      </tr>
      <tr>
        <td>client-activate</td>
        <td>Sent to each tool when a document activates</td>
      </tr>
      <tr>
        <td>client-deactivate</td>
        <td>Sent to each tool when last document closes</td>
      </tr>
      <tr>
        <td>stage-activate</td>
        <td>Sent to stage when last document closes</td>
      </tr>
      <tr>
        <td>stage-deactivate</td>
        <td>Sent to stage when a first document activates</td>
      </tr>
    </table>
    <a name="SEC21"></a>
    <h4 class="section2">22.9. Menus</h4>
    <a name="Menu"></a>
    <h4 class="class">Menu</h4>
    <a name="Label-Item"></a>
    <h4 class="class">Label-Item</h4>
    <a name="Separator-Item"></a>
    <h4 class="class">Separator-Item</h4>
    <a name="SEC22"></a>
    <h4 class="section2">22.10. Events</h4>
Event encapsulation puts almost no pressure on the framework because almost everywhere the direct class override is used. Events encapsulate amongst other things, modifiers state that is necessary for recording user actions.     <a name="Event"></a>
    <h4 class="class">Event</h4>
    <a name="SEC23"></a>
    <h4 class="section2">22.11. Clipboard</h4>
    <a name="SEC24"></a>
    <h4 class="section2">22.12. User Interaction</h4>
message-box    <a name="c-interface"></a>
    <h3 class="section1">23. C Interface</h3>
    <a name="c-interface.syntax"></a>
    <h4 class="section2">23.1. Syntax</h4>
    <a name="c-constant"></a>
    <p class="form-definition">
<b>c-constant</b> <i>name value</i></p>
    <p></p>
    <p>A c-constant cannot be modified. Note that currently, a constant definition is simply a definition.</p>
    <a name="c-enumeration"></a>
    <p class="form-definition">
<b>c-enumeration</b> <i>enumeration-name (name1 value1) (name2 value2) ...</i></p>
    <p></p>
    <p>A c-enumeration definition. This enumeration will create a definition enumeration-name containing an Enumeration object that can be queried at runtime and create constant definitions name1 : value1, name2 : value2, ...</p>
    <a name="c-structure"></a>
    <p class="form-definition">
<b>c-structure</b> <i>structure-name (type1 field1 <n1>) (type2 field2 <n2>) ...</i></p>
    <p></p>
    <p>A c-structure is a template that can be used to create records containing primitive types. Here, type is any primitive type and field is a symbol that can be used to access this field is records of type structure-name. If the optional n is specified, then an array of n elements of type will be inserted.</p>
    <a name="c-external"></a>
    <p class="form-definition">
<b>c-external</b> <i>module-name return-type (name param1 param2 ...) <entry-name></i></p>
    <p></p>
    <p>A c-external entry point into a Windows module, i.e. a dynamic-link library or an executable.</p>
    <a name="License"></a>
    <h3 class="section1">License</h3>
    <p>Licensing module.This module which is in development, will provide classes to enforce commercial licensing strategies.</p>
    <a name="Designer"></a>
    <h3 class="section1">Designer</h3>
    <div>
      <p class="definition">
<b>Designer</b></p>
      <p>A Designer is the interface between a jazz object and a form</p>
    </div>
    <div>
      <p class="definition">
<b>Component-Editor</b></p>
    </div>
    <div>
      <p class="definition">
<b>View-Editor</b></p>
    </div>
    <div>
      <p class="definition">
<b>Branches-Editor</b></p>
    </div>
    <div>
      <p class="definition">
<b>Components-Editor</b></p>
    </div>
    <p></p>
    <div>
      <p class="definition">
<b>Card</b></p>
    </div>
    <div>
      <p class="definition">
<b>Custom-Card</b></p>
    </div>
    <div>
      <p class="definition">
<b>Properties-Card</b></p>
    </div>
    <div>
      <p class="definition">
<b>Value-Row</b></p>
    </div>
    <p></p>
    <div>
      <p class="definition">
<b>Component-Surrogate</b></p>
    </div>
    <p></p>
    <div>
      <p class="definition">
<b>Property</b></p>
    </div>
    <div>
      <p class="definition">
<b>Property-Entry</b></p>
    </div>
    <div>
      <p class="definition">
<b>Property-View</b></p>
    </div>
    <div>
      <p class="definition">
<b>Domain</b></p>
    </div>
    <p></p>
    <div>
      <p class="definition">
<b>Designer Events</b></p>
      <ul>
        <li><span>property-change </span></li>
        <li><span>child-add </span></li>
        <li><span>child-remove </span></li>
        <li><span>child-move </span></li>
        <li><span>update</span></li>
        <li><span>refresh</span></li>
      </ul>
    </div>
    <p></p>
    <div>
      <p class="definition">
<b>Editor Events</b></p>
      <ul>
        <li><span>client-change </span></li>
        <li><span>designer-change </span></li>
        <li><span>branch-changing </span></li>
        <li><span>branch-change </span></li>
        <li><span>selection-changing </span></li>
        <li><span>selection-change</span></li>
        <li><span>saving</span></li>
      </ul>
    </div>
    <p></p>
    <div>
      <p class="definition">
<b>Notes</b></p>
      <ul>
        <li><span>Editing a form is done through a Designer and an instance of the form. Any changes to the instance or its children should be done by calling methods of the designer instead of going to the instance directly. The designer will take care of making the changes as well as recording them.</span></li>
        <li><span>Note that by having events generated when properties are modified and some others, this process could be made more automatic. But, this would imply a great performance overhead on the system and also we do not want programmatically modified properties to be recorded by the designer. This is why Jazz sticks will a manually calling the designer approach.</span></li>
        <li><span>So, if we have a Z -> Y -> X class hierarchy, an instance of Z can be used to edit the class form of X, Y or Z.</span></li>
        <li><span>When Jazz edits an object, it monitors every descendant by installing surrogates in them. Even if the edited component is changed (by double-clicking), we keep the upper surrogates installed (even if they could conceptually be removed) so as to still be able to double-click on them to change again the edited component.</span></li>
        <li><span>Surrogates take the place of an edited component and its descendants when there's a need to trap user events sent to the component. They are most commonly used for visual components like views.</span></li>
        <li><span>An editor is an view that will permit edition of its client and do so by calling designer methods in response to events generated three optional subviews: a branches tree, a descendants tree and a properties tree. An editor has an installed client on which you can put one or more (currently only one) designers on specific descendants of the client. Each designer will record edition to its part of the client descendants tree.</span></li>
        <li><span>So, we have a component and its descendants being monitored by surrogates and one of then is the edited component (so changes to it or any of its descendants is being sent to the designer).</span></li>
        <li><span>When editing a form I should also specify the edited branch (can be nil of course).</span></li>
        <li><span>Note that branch and form unification while desirable is not a good idea because always having an installed branch for every component instance would impose to great a memory load for a very small gain. Also the present approach has the very nice property of having branches as ordinary objects that could have been developed outside of the main system. They are as any other component, they simply have a different behavior.</span></li>
        <li><span>The designer and the various elements of the editor follow the MVC model. The designer plays the model role and the editor elements are views of this model. The editor never modifies its view directly. Instead it calls methods of the designer that will modify the edited component and also send events to every listening view who can then update their interface accordingly.</span></li>
      </ul>
    </div>
    <a name="Library"></a>
    <h3 class="section1">Library</h3>
    <a name="Node"></a>
    <h4 class="class">Node</h4>
    <p>A node is a class that supports dynamic properties</p>
    <p></p>
    <ul>
      <li>An node can optionally be named</li>
    </ul>
    <p>
Node properties, for efficiency are stored as slots for direct access but can also be accessed in a generic fashion via the <a href="manual.htm#get-property">get-property</a> method</p>
    <p></p>
    <a name="Element"></a>
    <h4 class="class">Element</h4>
    <p>An element is a node with a hierarchical structure</p>
    <p></p>
    <a name="Exemplar"></a>
    <h4 class="class">Exemplar</h4>
    <p>An Exemplar is a dynamic class whose hierarchy can be modified at runtime</p>
    <p></p>
    <ul>
      <li><span>Exemplars don't have instances</span></li>
    </ul>
    <ul>
      <li><span>All properties are fully inherited in the sense that whenever an exemplar is modified, every descendant is automatically updated. Because the most used operation is by far property access, exemplars have a full internal copy of every property. To implement inheritance, exemplars also have a list of which properties are owned by the exemplar, i.e. what properties should not be updated when an ascendant is modified</span></li>
    </ul>
    <ul>
      <li>
        <span>
Exemplar properties, for efficiency are stored as slots for direct access but they can also be accessed in a generic fashion via the           <a href="manual.htm#get-property">get-property</a>
 method        </span>
      </li>
    </ul>
    <ul>
      <li>
        <span>
Exemplars are grouped in an           <a href="manual.htm#Exemplar-Domain">Exemplar-Domain</a>
 which is the domain in which an exemplar name is a valid reference        </span>
      </li>
    </ul>
    <ul>
      <li>
        <span>
An Exemplar can be named and can inherit from another exemplar via its           <code>base</code>
        </span>
      </li>
    </ul>
    <a name="Java"></a>
    <h3 class="section1">Java</h3>
    <p>Java integration module</p>
    <p></p>
    <p>This module is at an experimental stage at the moment though it was used to implement full database access through Java's JDBC library.</p>
    <a name="SQL"></a>
    <h3 class="section1">SQL</h3>
    <p>SQL access module.</p>
    <p></p>
    <p>This module is a very mature module that provides a sophisticated UI over the database access classes of the Access module.</p>
    <a name="SEC25"></a>
    <h3 class="section1">29. Modules</h3>
    <a name="jazz"></a>
    <h4 class="package">jazz</h4>
    <a name="SEC26"></a>
    <h4 class="section3">29.1.1. Boolean</h4>
    <a name="eq?"></a>
    <p class="definition">
<b>eq?</b> <i>x y</i></p>
    <p></p>
    <p>
Tests if <i>x</i> is physicaly equal to <i>y</i>. In other words, if both memory pointers are the same.</p>
    <a name="neq?"></a>
    <p class="definition">
<b>neq?</b> <i>x y</i></p>
    <p></p>
    <p>The inverse test of eq?.</p>
    <a name="eqv?"></a>
    <p class="definition">
<b>eqv?</b> <i>x y</i></p>
    <p></p>
    <p>eqv? will succed if the two objects are eq? or if they can be simply compared without going into their structures. For example, (eq? 2.3 2.3) migth return false whereas (eqv? 2.3 2.3) will always return true.</p>
    <a name="equal?"></a>
    <p class="definition">
<b>equal?</b> <i>x y</i></p>
    <p></p>
    <p>The most general equivalence predicate of all.</p>
    <p>equal? will succed if the two objects are eqv? but will also try to determine if the two objets structures are identical. For example, (eq? (list 1 2 3) (list 1 2 3)) returns false but (equal? (list 1 2 3) (list 1 2 3)) returns true.</p>
    <a name="not"></a>
    <p class="definition">
<b>not</b> <i>obj</i></p>
    <p></p>
    <p>
Returns the logical negation of <i>obj</i>.</p>
    <a name="boolean?"></a>
    <p class="definition">
<b>boolean?</b> <i>obj</i></p>
    <p></p>
    <p>
Tests if <i>obj</i> is of <code>Boolean</code> type.</p>
    <p></p>
    <p>Examples</p>
    <ul>
      <li>
        <span>
          <code>(boolean? true)</code>
 returns true.        </span>
      </li>
      <li>
        <span>
          <code>(boolean? false)</code>
 returns true.        </span>
      </li>
      <li>
        <span>
          <code>(boolean? nil)</code>
 return false.        </span>
      </li>
    </ul>
    <a name="xor"></a>
    <p class="definition">
<b>xor</b> <i>x y</i></p>
    <p></p>
    <a name="="></a>
    <p class="definition">
<b>=</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="/="></a>
    <p class="definition">
<b>/=</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="<"></a>
    <p class="definition">
<b><</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="<="></a>
    <p class="definition">
<b><=</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name=">"></a>
    <p class="definition">
<b>></b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name=">="></a>
    <p class="definition">
<b>>=</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="ci="></a>
    <p class="definition">
<b>ci=</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="ci/="></a>
    <p class="definition">
<b>ci/=</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="ci<"></a>
    <p class="definition">
<b>ci<</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="ci<="></a>
    <p class="definition">
<b>ci<=</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="ci>"></a>
    <p class="definition">
<b>ci></b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="ci>="></a>
    <p class="definition">
<b>ci>=</b> <i>obj1 obj2 obj3 ...</i></p>
    <p></p>
    <a name="boolean"></a>
    <p class="definition">
<b>boolean</b> <i>obj</i></p>
    <p></p>
    <a name="boolean->integer"></a>
    <p class="definition">
<b>boolean->integer</b> <i>bool</i></p>
    <p></p>
    <a name="integer->boolean"></a>
    <p class="definition">
<b>integer->boolean</b> <i>z</i></p>
    <p></p>
    <a name="SEC27"></a>
    <h4 class="section3">29.1.2. Char</h4>
    <a name="char?"></a>
    <p class="definition">
<b>char?</b> <i>obj</i></p>
    <p></p>
    <a name="jazz-constituent?"></a>
    <p class="definition">
<b>jazz-constituent?</b> <i>obj</i></p>
    <p></p>
    <a name="cpp/java-constituent?"></a>
    <p class="definition">
<b>cpp/java-constituent?</b> <i>obj</i></p>
    <p></p>
    <a name="alphabetic?"></a>
    <p class="definition">
<b>alphabetic?</b> <i>obj</i></p>
    <p></p>
    <p>
Tests if <i>obj</i> is alphabetic. An object is alphabetic if it is an alphabetic character or a sequence composed only of alphabetic parts.</p>
    <a name="numeric?"></a>
    <p class="definition">
<b>numeric?</b> <i>obj</i></p>
    <p></p>
    <p>Tests if obj is numeric. An object is numeric if it is a numeric character or a sequence composed only of numeric parts.</p>
    <a name="alphanumeric?"></a>
    <p class="definition">
<b>alphanumeric?</b> <i>obj</i></p>
    <p></p>
    <p></p>
    <a name="whitespace?"></a>
    <p class="definition">
<b>whitespace?</b> <i>obj</i></p>
    <p></p>
    <p>Tests if obj is whitespace. An object is whitespace if it is a whitespace character or a sequence composed only of whitespace parts.</p>
    <a name="upper-case?"></a>
    <p class="definition">
<b>upper-case?</b> <i>obj</i></p>
    <p></p>
    <p>Tests if obj is upper-case. An object is upper-case if it is an upper-case character or a sequence composed only of upper-case parts.</p>
    <a name="lower-case?"></a>
    <p class="definition">
<b>lower-case?</b> <i>obj</i></p>
    <p></p>
    <p>Tests if obj is lower-case. An object is lower-case if it is a lower-case character or a sequence composed only of lower-case parts.</p>
    <a name="upcase"></a>
    <p class="definition">
<b>upcase</b> <i>obj</i></p>
    <p></p>
    <p>Converts obj to upper-case. If obj is a sequence, every part of obj with be converted to upper-case.</p>
    <a name="downcase"></a>
    <p class="definition">
<b>downcase</b> <i>obj</i></p>
    <p></p>
    <p>Converts obj to lower-case. If obj is a sequence, every part of obj with be converted to lower-case.</p>
    <a name="capitalize"></a>
    <p class="definition">
<b>capitalize</b> <i>obj</i></p>
    <p></p>
    <p>Converts obj to capitalized form where every word starts with a capital letter and the rest is in lower-case. If obj is a sequence, every part of obj with be converted to capitalized form.</p>
    <a name="SEC28"></a>
    <h4 class="section3">29.1.3. Class</h4>
    <p>The Class type is the supertype of every class. It enables a class to be inspected and manipulated as any other object.</p>
    <a name="class?"></a>
    <p class="definition">
<b>class?</b> <i>obj</i></p>
    <p></p>
    <p></p>
    <a name="class-members"></a>
    <p class="definition">
<b>class-members</b> <i>class</i></p>
    <p></p>
    <p>Returns a list of all members of class.</p>
    <a name="class-fields"></a>
    <p class="definition">
<b>class-fields</b> <i>class</i></p>
    <p></p>
    <p>Returns a list of all fields of class.</p>
    <a name="class-slots"></a>
    <p class="definition">
<b>class-slots</b> <i>class</i></p>
    <p></p>
    <p>Returns a list of all slots of class.</p>
    <a name="SEC29"></a>
    <h4 class="section3">29.1.4. Closure</h4>
    <a name="closure?"></a>
    <p class="definition">
<b>closure?</b> <i>obj</i></p>
    <p></p>
    <a name="SEC30"></a>
    <h4 class="section3">29.1.5. Collector</h4>
    <a name="gc"></a>
    <p class="definition">
<b>gc</b> <i></i></p>
    <p></p>
    <a name="SEC31"></a>
    <h4 class="section3">29.1.6. Control</h4>
    <a name="throw"></a>
    <p class="definition">
<b>throw</b> <i>name</i></p>
    <p></p>
    <a name="exit"></a>
    <p class="definition">
<b>exit</b> <i></i></p>
    <p></p>
    <a name="SEC32"></a>
    <h4 class="section3">29.1.7. Debugger</h4>
    <a name="signal"></a>
    <p class="definition">
<b>signal</b> <i>exception</i></p>
    <p></p>
    <a name="error"></a>
    <p class="definition">
<b>error</b> <i>format-string obj ...</i></p>
    <p></p>
    <a name="SEC33"></a>
    <h4 class="section3">29.1.8. Enumeration</h4>
    <a name="enumeration?"></a>
    <p class="definition">
<b>enumeration?</b> <i>obj</i></p>
    <p></p>
    <a name="SEC34"></a>
    <h4 class="section3">29.1.9. Eval</h4>
    <a name="eval"></a>
    <p class="definition">
<b>eval</b> <i>expr</i></p>
    <p></p>
    <a name="identity"></a>
    <p class="definition">
<b>identity</b> <i>obj</i></p>
    <p></p>
    <a name="SEC35"></a>
    <h4 class="section3">29.1.10. Format</h4>
    <a name="format"></a>
    <p class="definition">
<b>format</b> <i>format-string obj ...</i></p>
    <p></p>
    <a name="SEC36"></a>
    <h4 class="section3">29.1.11. Function</h4>
    <a name="function?"></a>
    <p class="definition">
<b>function?</b> <i>obj</i></p>
    <p></p>
    <a name="SEC37"></a>
    <h4 class="section3">29.1.12. Hashtable</h4>
    <a name="hash-ref"></a>
    <p class="definition">
<b>hash-ref</b> <i>hashtable key</i></p>
    <p></p>
    <p>
Gets the value associated with <i>key</i> inside <i>hashtable</i>.</p>
    <a name="hash-set!"></a>
    <p class="definition">
<b>hash-set!</b> <i>hashtable key value</i></p>
    <p></p>
    <p>
Sets the value associated with <i>key</i> inside <i>hashtable</i> to <i>value</i>.</p>
    <a name="hash-clear"></a>
    <p class="definition">
<b>hash-clear</b> <i>hashtable key</i></p>
    <p></p>
    <a name="empty-hashtable"></a>
    <p class="definition">
<b>empty-hashtable</b> <i>hashtable</i></p>
    <p></p>
    <a name="load-hashtable"></a>
    <p class="definition">
<b>load-hashtable</b> <i>hashtable file</i></p>
    <p></p>
    <a name="hash-remove!"></a>
    <p class="definition">
<b>hash-remove!</b> <i>hashtable key value</i></p>
    <p></p>
    <a name="for-each-hash"></a>
    <p class="definition">
<b>for-each-hash</b> <i>proc hashtable</i></p>
    <p></p>
    <a name="SEC38"></a>
    <h4 class="section3">29.1.13. Integer</h4>
    <a name="integer?"></a>
    <p class="definition">
<b>integer?</b> <i>obj</i></p>
    <p></p>
    <a name="even?"></a>
    <p class="definition">
<b>even?</b> <i>z</i></p>
    <p></p>
    <a name="odd?"></a>
    <p class="definition">
<b>odd?</b> <i>z</i></p>
    <p></p>
    <a name="quotient"></a>
    <p class="definition">
<b>quotient</b> <i>z1 z2</i></p>
    <p></p>
    <a name="modulo"></a>
    <p class="definition">
<b>modulo</b> <i>z1 z2</i></p>
    <p></p>
    <a name="separate"></a>
    <p class="definition">
<b>separate</b> <i>z1 z2</i></p>
    <p></p>
    <a name="randomize"></a>
    <p class="definition">
<b>randomize</b> <i></i></p>
    <p></p>
    <a name="random"></a>
    <p class="definition">
<b>random</b> <i>n</i></p>
    <p></p>
    <a name="bit-not"></a>
    <p class="definition">
<b>bit-not</b> <i>n</i></p>
    <p></p>
    <a name="bit-and"></a>
    <p class="definition">
<b>bit-and</b> <i>n ...</i></p>
    <p></p>
    <a name="bit-or"></a>
    <p class="definition">
<b>bit-or</b> <i>n ...</i></p>
    <p></p>
    <a name="bit-xor"></a>
    <p class="definition">
<b>bit-xor</b> <i>n ...</i></p>
    <p></p>
    <a name="bit-set"></a>
    <p class="definition">
<b>bit-set</b> <i>n1 n2 n3</i></p>
    <p></p>
    <a name="bit-set?"></a>
    <p class="definition">
<b>bit-set?</b> <i>n1 n2</i></p>
    <p></p>
    <a name="shift-left"></a>
    <p class="definition">
<b>shift-left</b> <i>n1 n2</i></p>
    <p></p>
    <a name="shift-right"></a>
    <p class="definition">
<b>shift-right</b> <i>n1 n2</i></p>
    <p></p>
    <a name="SEC39"></a>
    <h4 class="section3">29.1.14. Interface</h4>
    <a name="interface?"></a>
    <p class="definition">
<b>interface?</b> <i>obj</i></p>
    <p></p>
    <a name="SEC40"></a>
    <h4 class="section3">29.1.15. List</h4>
    <a name="car"></a>
    <p class="definition">
<b>car</b> <i>pair</i></p>
    <p></p>
    <p>
Returns the car field of <i>pair</i>.</p>
    <a name="cdr"></a>
    <p class="definition">
<b>cdr</b> <i>pair</i></p>
    <p></p>
    <p>
Returns the cdr field of <i>pair</i>.</p>
    <a name="set-car!"></a>
    <p class="definition">
<b>set-car!</b> <i>pair obj</i></p>
    <p></p>
    <p>
Sets the car field of <i>pair</i> to <i>obj</i>.</p>
    <a name="set-cdr!"></a>
    <p class="definition">
<b>set-cdr!</b> <i>pair obj</i></p>
    <p></p>
    <p>
Sets the cdr field of <i>pair</i> to <i>obj</i>.</p>
    <a name="cons"></a>
    <p class="definition">
<b>cons</b> <i>x y</i></p>
    <p></p>
    <p>
Returns a newly allocated pair whose car is <i>x</i> and whose cdr is <i>y</i>.</p>
    <a name="reverse"></a>
    <p class="definition">
<b>reverse</b> <i>seq</i></p>
    <p></p>
    <p>Reverses a sequence.</p>
    <a name="list?"></a>
    <p class="definition">
<b>list?</b> <i>obj</i></p>
    <p></p>
    <p>Returns true if obj is a list, false otherwise.</p>
    <p></p>
    <p>Examples</p>
    <ul>
      <li><span>(list? nil) -> true</span></li>
      <li><span>(list? '(a b c)) -> true</span></li>
      <li><span>(list? 2) -> false</span></li>
    </ul>
    <a name="nil?"></a>
    <p class="definition">
<b>nil?</b> <i>obj</i></p>
    <p></p>
    <p>Returns true if obj is the empty list, false otherwise.</p>
    <a name="not-nil?"></a>
    <p class="definition">
<b>not-nil?</b> <i></i></p>
    <p></p>
    <a name="pair?"></a>
    <p class="definition">
<b>pair?</b> <i>obj</i></p>
    <p></p>
    <p>Returns true if obj is a pair and otherwise returns false.</p>
    <p></p>
    <p>Examples</p>
    <ul>
      <li><span>(pair? 2) -> false</span></li>
      <li><span>(pair? nil) -> false</span></li>
      <li><span>(pair? (cons 1 2)) -> true</span></li>
      <li><span>(pair? '(a b c)) -> true</span></li>
    </ul>
    <a name="atom?"></a>
    <p class="definition">
<b>atom?</b> <i>obj</i></p>
    <p></p>
    <a name="caar"></a>
    <p class="definition">
<b>caar</b> <i>pair</i></p>
    <p></p>
    <p>
Returns the car field of the car field of <i>pair</i>.</p>
    <a name="cadr"></a>
    <p class="definition">
<b>cadr</b> <i>pair</i></p>
    <p></p>
    <p>
Returns the car field of the cdr field of <i>pair</i>.</p>
    <a name="cdar"></a>
    <p class="definition">
<b>cdar</b> <i>pair</i></p>
    <p></p>
    <p>
Returns the cdr field of the car field of <i>pair</i>.</p>
    <a name="cddr"></a>
    <p class="definition">
<b>cddr</b> <i>pair</i></p>
    <p></p>
    <p>
Returns the cdr field of the cdr field of <i>pair</i>.</p>
    <a name="list"></a>
    <p class="definition">
<b>list</b> <i>obj ...</i></p>
    <p></p>
    <p>Returns a list constructed of all its arguments.</p>
    <a name="memq?"></a>
    <p class="definition">
<b>memq?</b> <i>obj list</i></p>
    <p></p>
    <a name="memv?"></a>
    <p class="definition">
<b>memv?</b> <i>obj list</i></p>
    <p></p>
    <a name="member?"></a>
    <p class="definition">
<b>member?</b> <i>obj list &key key test</i></p>
    <p></p>
    <a name="assq"></a>
    <p class="definition">
<b>assq</b> <i>obj list</i></p>
    <p></p>
    <a name="assv"></a>
    <p class="definition">
<b>assv</b> <i>obj list</i></p>
    <p></p>
    <a name="assoc"></a>
    <p class="definition">
<b>assoc</b> <i>obj list &key key test</i></p>
    <p></p>
    <a name="rassoc"></a>
    <p class="definition">
<b>rassoc</b> <i>obj list &key key test</i></p>
    <p></p>
    <a name="reverse!"></a>
    <p class="definition">
<b>reverse!</b> <i>list</i></p>
    <p></p>
    <a name="remove!"></a>
    <p class="definition">
<b>remove!</b> <i>obj list</i></p>
    <p></p>
    <a name="getprop"></a>
    <p class="definition">
<b>getprop</b> <i>plist key</i></p>
    <p></p>
    <a name="getf"></a>
    <p class="definition">
<b>getf</b> <i>plist key</i></p>
    <p></p>
    <a name="setf"></a>
    <p class="definition">
<b>setf</b> <i>plist key value</i></p>
    <p></p>
    <a name="for-each-pair"></a>
    <p class="definition">
<b>for-each-pair</b> <i>proc list</i></p>
    <p></p>
    <a name="for-each-property"></a>
    <p class="definition">
<b>for-each-property</b> <i>proc list</i></p>
    <p></p>
    <a name="SEC41"></a>
    <h4 class="section3">29.1.16. Manifest</h4>
    <a name="load"></a>
    <p class="definition">
<b>load</b> <i>unit-name</i></p>
    <p></p>
    <a name="unit-loaded?"></a>
    <p class="definition">
<b>unit-loaded?</b> <i>unit-name</i></p>
    <p></p>
    <a name="in-manifest?"></a>
    <p class="definition">
<b>in-manifest?</b> <i>unit-name</i></p>
    <p></p>
    <a name="SEC42"></a>
    <h4 class="section3">29.1.17. Map</h4>
    <a name="map-ref"></a>
    <p class="definition">
<b>map-ref</b> <i>map key</i></p>
    <p></p>
    <a name="map-set!"></a>
    <p class="definition">
<b>map-set!</b> <i>map key value</i></p>
    <p></p>
    <a name="map-clear"></a>
    <p class="definition">
<b>map-clear</b> <i>map key</i></p>
    <p></p>
    <a name="empty-map"></a>
    <p class="definition">
<b>empty-map</b> <i>map</i></p>
    <p></p>
    <a name="load-map"></a>
    <p class="definition">
<b>load-map</b> <i>map file</i></p>
    <p></p>
    <a name="for-each-map"></a>
    <p class="definition">
<b>for-each-map</b> <i>proc map</i></p>
    <p></p>
    <a name="SEC43"></a>
    <h4 class="section3">29.1.18. Metaclass</h4>
    <a name="metaclass?"></a>
    <p class="definition">
<b>metaclass?</b> <i>obj</i></p>
    <p></p>
    <a name="metaclass-instance"></a>
    <p class="definition">
<b>metaclass-instance</b> <i>metaclass</i></p>
    <p></p>
    <a name="SEC44"></a>
    <h4 class="section3">29.1.19. Number</h4>
    <a name="+"></a>
    <p class="definition">
<b>+</b> <i>obj ...</i></p>
    <p></p>
    <a name="-"></a>
    <p class="definition">
<b>-</b> <i>obj1 obj2 ...</i></p>
    <p></p>
    <a name="*"></a>
    <p class="definition">
<b>*</b> <i>obj ...</i></p>
    <p></p>
    <a name="number?"></a>
    <p class="definition">
<b>number?</b> <i>obj</i></p>
    <p></p>
    <a name="zero?"></a>
    <p class="definition">
<b>zero?</b> <i>obj</i></p>
    <p></p>
    <a name="positive?"></a>
    <p class="definition">
<b>positive?</b> <i>obj</i></p>
    <p></p>
    <a name="negative?"></a>
    <p class="definition">
<b>negative?</b> <i>obj</i></p>
    <p></p>
    <a name="/"></a>
    <p class="definition">
<b>/</b> <i>obj1 obj2 ...</i></p>
    <p></p>
    <a name="relate"></a>
    <p class="definition">
<b>relate</b> <i>x y</i></p>
    <p></p>
    <a name="sign"></a>
    <p class="definition">
<b>sign</b> <i>z</i></p>
    <p></p>
    <a name="floor"></a>
    <p class="definition">
<b>floor</b> <i>r</i></p>
    <p></p>
    <a name="round"></a>
    <p class="definition">
<b>round</b> <i>r</i></p>
    <p></p>
    <a name="ceil"></a>
    <p class="definition">
<b>ceil</b> <i>r</i></p>
    <p></p>
    <a name="abs"></a>
    <p class="definition">
<b>abs</b> <i>z</i></p>
    <p></p>
    <a name="min"></a>
    <p class="definition">
<b>min</b> <i>obj ...</i></p>
    <p></p>
    <a name="max"></a>
    <p class="definition">
<b>max</b> <i>obj ...</i></p>
    <p></p>
    <a name="between?"></a>
    <p class="definition">
<b>between?</b> <i>n lower upper</i></p>
    <p></p>
    <a name="between"></a>
    <p class="definition">
<b>between</b> <i>lower n upper</i></p>
    <p></p>
    <a name="in-interval?"></a>
    <p class="definition">
<b>in-interval?</b> <i>n lower upper</i></p>
    <p></p>
    <a name="norm"></a>
    <p class="definition">
<b>norm</b> <i>x</i></p>
    <p></p>
    <a name="near?"></a>
    <p class="definition">
<b>near?</b> <i>x y distance</i></p>
    <p></p>
    <a name="SEC45"></a>
    <h4 class="section3">29.1.20. Object</h4>
    <a name="object?"></a>
    <p class="definition">
<b>object?</b> <i>obj</i></p>
    <p></p>
    <a name="copy"></a>
    <p class="definition">
<b>copy</b> <i>obj</i></p>
    <p></p>
    <a name="SEC46"></a>
    <h4 class="section3">29.1.21. Package</h4>
    <a name="package?"></a>
    <p class="definition">
<b>package?</b> <i>obj</i></p>
    <p></p>
    <a name="SEC47"></a>
    <h4 class="section3">29.1.22. Printer</h4>
    <a name="display"></a>
    <p class="definition">
<b>display</b> <i>obj &optional printer</i></p>
    <p></p>
    <a name="write"></a>
    <p class="definition">
<b>write</b> <i>obj &optional printer</i></p>
    <p></p>
    <a name="describe"></a>
    <p class="definition">
<b>describe</b> <i>obj &optional printer</i></p>
    <p></p>
    <a name="new-line"></a>
    <p class="definition">
<b>new-line</b> <i>&optional printer</i></p>
    <p></p>
    <a name="print-unreadable"></a>
    <p class="definition">
<b>print-unreadable</b> <i>obj printer proc</i></p>
    <p></p>
    <a name="SEC48"></a>
    <h4 class="section3">29.1.23. Procedure</h4>
    <a name="procedure?"></a>
    <p class="definition">
<b>procedure?</b> <i>obj</i></p>
    <p></p>
    <a name="SEC49"></a>
    <h4 class="section3">29.1.24. Reader</h4>
    <a name="read"></a>
    <p class="definition">
<b>read</b> <i>&optional reader</i></p>
    <p></p>
    <a name="get-char"></a>
    <p class="definition">
<b>get-char</b> <i>&optional reader</i></p>
    <p></p>
    <a name="unget-char"></a>
    <p class="definition">
<b>unget-char</b> <i>char &optional reader</i></p>
    <p></p>
    <a name="peek-char"></a>
    <p class="definition">
<b>peek-char</b> <i>&optional reader</i></p>
    <p></p>
    <a name="end-of-stream?"></a>
    <p class="definition">
<b>end-of-stream?</b> <i>&optional reader</i></p>
    <p></p>
    <a name="SEC50"></a>
    <h4 class="section3">29.1.25. Real</h4>
    <a name="real?"></a>
    <p class="definition">
<b>real?</b> <i>obj</i></p>
    <p></p>
    <a name="sin"></a>
    <p class="definition">
<b>sin</b> <i>r</i></p>
    <p></p>
    <a name="cos"></a>
    <p class="definition">
<b>cos</b> <i>r</i></p>
    <p></p>
    <a name="tan"></a>
    <p class="definition">
<b>tan</b> <i>r</i></p>
    <p></p>
    <a name="asin"></a>
    <p class="definition">
<b>asin</b> <i>r</i></p>
    <p></p>
    <a name="acos"></a>
    <p class="definition">
<b>acos</b> <i>r</i></p>
    <p></p>
    <a name="atan"></a>
    <p class="definition">
<b>atan</b> <i>r1 r2</i></p>
    <p></p>
    <a name="sqrt"></a>
    <p class="definition">
<b>sqrt</b> <i>r</i></p>
    <p></p>
    <a name="exp"></a>
    <p class="definition">
<b>exp</b> <i>r</i></p>
    <p></p>
    <a name="log"></a>
    <p class="definition">
<b>log</b> <i>r</i></p>
    <p></p>
    <a name="expt"></a>
    <p class="definition">
<b>expt</b> <i>r1 r2</i></p>
    <p></p>
    <a name="percentage"></a>
    <p class="definition">
<b>percentage</b> <i>part total</i></p>
    <p></p>
    <a name="percent"></a>
    <p class="definition">
<b>percent</b> <i>percent n</i></p>
    <p></p>
    <a name="SEC51"></a>
    <h4 class="section3">29.1.26. Sequence</h4>
Sequences are an abstract data type representing objects capable of storing sequences of objects. Some examples of sequences are lists, strings and vectors. The Jazz language possesses a important number of sequence manipulation functions    <a name="sequence?"></a>
    <p class="definition">
<b>sequence?</b> <i>obj</i></p>
    <p></p>
    <p>Tests if obj is of Sequence type.</p>
    <a name="length"></a>
    <p class="definition">
<b>length</b> <i>sequence</i></p>
    <p></p>
    <p>
Returns the number of elements in <i>seq</i>.</p>
    <a name="element"></a>
    <p class="definition">
<b>element</b> <i>sequence n</i></p>
    <p></p>
    <p>Returns the nth element of sequence.</p>
    <a name="set-element!"></a>
    <p class="definition">
<b>set-element!</b> <i>sequence n value</i></p>
    <p></p>
    <p>Destructively sets the nth element of sequence to value.</p>
    <a name="empty?"></a>
    <p class="definition">
<b>empty?</b> <i>sequence</i></p>
    <p></p>
    <a name="tail"></a>
    <p class="definition">
<b>tail</b> <i>sequence n</i></p>
    <p></p>
    <p>Returns the elements of sequence that range from n to the end. Note that this operation can be done very efficiently for lists.</p>
    <a name="last"></a>
    <p class="definition">
<b>last</b> <i>sequence</i></p>
    <p></p>
    <p>Returns the last element of sequence.</p>
    <a name="last-tail"></a>
    <p class="definition">
<b>last-tail</b> <i>sequence</i></p>
    <p></p>
    <p>Returns a sequence made-up of only the last element of sequence. Note that this operation can be done very efficiently for lists.</p>
    <a name="butlast"></a>
    <p class="definition">
<b>butlast</b> <i>sequence</i></p>
    <p></p>
    <p>Returns a sequence made up of every element of sequence except the last.</p>
    <a name="subseq"></a>
    <p class="definition">
<b>subseq</b> <i>sequence start &optional end</i></p>
    <p></p>
    <p>Returns a sequence made up of the elements of sequence that range from start to end exclusively. If end is omited, the elements are taken till the end of sequence.</p>
    <a name="subseq!"></a>
    <p class="definition">
<b>subseq!</b> <i>sequence start &optional end</i></p>
    <p></p>
    <a name="sort"></a>
    <p class="definition">
<b>sort</b> <i>predicate sequence &key key test</i></p>
    <p></p>
    <a name="for-each-reversed"></a>
    <p class="definition">
<b>for-each-reversed</b> <i>sequence</i></p>
    <p></p>
    <a name="append"></a>
    <p class="definition">
<b>append</b> <i>sequence</i></p>
    <p></p>
    <p>
Returns a sequence composed of all the elements of <i>seq</i>.</p>
    <p></p>
    <p>Examples</p>
    <ul>
      <li><span>(append) -> nil</span></li>
      <li><span>(append '(a b c) nil '(1 2) '(1 2 3)) -> (a b c 1 2 1 2 3)</span></li>
      <li><span>(append \"Hello\" \" \" \"there\") -> \"Hello there\"</span></li>
      <li><span>(append 2 3) -> <error>"</span></li>
    </ul>
    <a name="append!"></a>
    <p class="definition">
<b>append!</b> <i>sequence ...</i></p>
    <p></p>
    <a name="insert!"></a>
    <p class="definition">
<b>insert!</b> <i>obj sequence pos</i></p>
    <p></p>
    <a name="insert-sequence!"></a>
    <p class="definition">
<b>insert-sequence!</b> <i>sequence inserted pos</i></p>
    <p></p>
    <a name="replace-subseq!"></a>
    <p class="definition">
<b>replace-subseq!</b> <i>sequence start end replacement</i></p>
    <p></p>
    <a name="element-reversed"></a>
    <p class="definition">
<b>element-reversed</b> <i>sequence n</i></p>
    <p></p>
    <a name="for-each"></a>
    <p class="definition">
<b>for-each</b> <i>procedure sequence1 &optional sequence2</i></p>
    <p></p>
    <p>Applies procedure to every element of sequence1 and optionaly sequence2</p>
    <a name="map"></a>
    <p class="definition">
<b>map</b> <i>procedure sequence1 &optional sequence2</i></p>
    <p></p>
    <p>Applies procedure to every element of sequence1 and optionaly sequence2 and collects the results in a list that it returns.</p>
    <a name="map-to"></a>
    <p class="definition">
<b>map-to</b> <i>type proc sequence</i></p>
    <p></p>
    <a name="gather"></a>
    <p class="definition">
<b>gather</b> <i>sequence</i></p>
    <p></p>
    <a name="collect"></a>
    <p class="definition">
<b>collect</b> <i>proc sequence</i></p>
    <p></p>
    <a name="collect-if"></a>
    <p class="definition">
<b>collect-if</b> <i>predicate sequence</i></p>
    <p></p>
    <a name="collect-type"></a>
    <p class="definition">
<b>collect-type</b> <i>type sequence</i></p>
    <p></p>
    <a name="count"></a>
    <p class="definition">
<b>count</b> <i>obj sequence</i></p>
    <p></p>
    <p>Finds the number of occurrences of obj in sequence.</p>
    <a name="count-if"></a>
    <p class="definition">
<b>count-if</b> <i>predicate sequence</i></p>
    <p></p>
    <a name="count-type"></a>
    <p class="definition">
<b>count-type</b> <i>type sequence</i></p>
    <p></p>
    <a name="find"></a>
    <p class="definition">
<b>find</b> <i>object sequence</i></p>
    <p></p>
    <a name="find-if"></a>
    <p class="definition">
<b>find-if</b> <i>predicate sequence</i></p>
    <p></p>
    <a name="skip"></a>
    <p class="definition">
<b>skip</b> <i>predicate sequence</i></p>
    <p></p>
    <a name="some?"></a>
    <p class="definition">
<b>some?</b> <i>predicate sequence</i></p>
    <p></p>
    <a name="every?"></a>
    <p class="definition">
<b>every?</b> <i>predicate sequence</i></p>
    <p></p>
    <a name="union"></a>
    <p class="definition">
<b>union</b> <i>sequence ...</i></p>
    <p></p>
    <a name="intersection"></a>
    <p class="definition">
<b>intersection</b> <i>sequence ...</i></p>
    <p></p>
    <a name="difference"></a>
    <p class="definition">
<b>difference</b> <i>sequence1 sequence2</i></p>
    <p></p>
    <p>Returns the set difference sequence1 \ sequence2.</p>
    <a name="remove"></a>
    <p class="definition">
<b>remove</b> <i>target sequence</i></p>
    <p></p>
    <a name="remove-trailing"></a>
    <p class="definition">
<b>remove-trailing</b> <i>target list</i></p>
    <p></p>
    <a name="remove-duplicates"></a>
    <p class="definition">
<b>remove-duplicates</b> <i>sequence</i></p>
    <p></p>
    <p>Returns a sequence that has exactly the same elements as sequence and in the same order but with no duplicates.</p>
    <a name="remove-nils"></a>
    <p class="definition">
<b>remove-nils</b> <i>sequence</i></p>
    <p></p>
    <a name="mismatch"></a>
    <p class="definition">
<b>mismatch</b> <i>target sequence</i></p>
    <p></p>
    <a name="prefix"></a>
    <p class="definition">
<b>prefix</b> <i>sequences</i></p>
    <p></p>
    <a name="prefix?"></a>
    <p class="definition">
<b>prefix?</b> <i>target sequence</i></p>
    <p></p>
    <a name="search"></a>
    <p class="definition">
<b>search</b> <i>target sequence</i></p>
    <p></p>
    <a name="split"></a>
    <p class="definition">
<b>split</b> <i>sequence separator</i></p>
    <p></p>
    <a name="split-justified"></a>
    <p class="definition">
<b>split-justified</b> <i>sequence width separators</i></p>
    <p></p>
    <a name="join"></a>
    <p class="definition">
<b>join</b> <i>sequences separator</i></p>
    <p></p>
    <a name="substitute"></a>
    <p class="definition">
<b>substitute</b> <i>old new sequence</i></p>
    <p></p>
    <a name="substitute-alist"></a>
    <p class="definition">
<b>substitute-alist</b> <i>replacements sequence</i></p>
    <p></p>
    <a name="fill!"></a>
    <p class="definition">
<b>fill!</b> <i>sequence object</i></p>
    <p></p>
    <a name="replace!"></a>
    <p class="definition">
<b>replace!</b> <i>sequence replacement</i></p>
    <p></p>
    <a name="insert-ordered!"></a>
    <p class="definition">
<b>insert-ordered!</b> <i>object sequence</i></p>
    <p></p>
    <a name="merge-ordered"></a>
    <p class="definition">
<b>merge-ordered</b> <i>proc x y</i></p>
    <p></p>
    <a name="random-element"></a>
    <p class="definition">
<b>random-element</b> <i>sequence</i></p>
    <p></p>
    <a name="partition"></a>
    <p class="definition">
<b>partition</b> <i>sequence &key key test</i></p>
    <p></p>
    <a name="starts-with?"></a>
    <p class="definition">
<b>starts-with?</b> <i>string target</i></p>
    <p></p>
    <a name="ends-with?"></a>
    <p class="definition">
<b>ends-with?</b> <i>string target</i></p>
    <p></p>
    <a name="first"></a>
    <p class="definition">
<b>first</b> <i>sequence</i></p>
    <p></p>
    <a name="second"></a>
    <p class="definition">
<b>second</b> <i>sequence</i></p>
    <p></p>
    <a name="third"></a>
    <p class="definition">
<b>third</b> <i>sequence</i></p>
    <p></p>
    <a name="fourth"></a>
    <p class="definition">
<b>fourth</b> <i>sequence</i></p>
    <p></p>
    <a name="fifth"></a>
    <p class="definition">
<b>fifth</b> <i>sequence</i></p>
    <p></p>
    <a name="sixth"></a>
    <p class="definition">
<b>sixth</b> <i>sequence</i></p>
    <p></p>
    <a name="seventh"></a>
    <p class="definition">
<b>seventh</b> <i>sequence</i></p>
    <p></p>
    <a name="eighth"></a>
    <p class="definition">
<b>eighth</b> <i>sequence</i></p>
    <p></p>
    <a name="ninth"></a>
    <p class="definition">
<b>ninth</b> <i>sequence</i></p>
    <p></p>
    <a name="tenth"></a>
    <p class="definition">
<b>tenth</b> <i>sequence</i></p>
    <p></p>
    <a name="set-first!"></a>
    <p class="definition">
<b>set-first!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-second!"></a>
    <p class="definition">
<b>set-second!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-third!"></a>
    <p class="definition">
<b>set-third!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-fourth!"></a>
    <p class="definition">
<b>set-fourth!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-fifth!"></a>
    <p class="definition">
<b>set-fifth!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-sixth!"></a>
    <p class="definition">
<b>set-sixth!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-seventh!"></a>
    <p class="definition">
<b>set-seventh!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-eighth!"></a>
    <p class="definition">
<b>set-eighth!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-ninth!"></a>
    <p class="definition">
<b>set-ninth!</b> <i>sequence object</i></p>
    <p></p>
    <a name="set-tenth!"></a>
    <p class="definition">
<b>set-tenth!</b> <i>sequence object</i></p>
    <p></p>
    <a name="SEC52"></a>
    <h4 class="section3">29.1.27. String</h4>
    <a name="string?"></a>
    <p class="definition">
<b>string?</b> <i>object</i></p>
    <p></p>
    <a name="empty-string?"></a>
    <p class="definition">
<b>empty-string?</b> <i>object</i></p>
    <p></p>
    <a name="SEC53"></a>
    <h4 class="section3">29.1.28. Symbol</h4>
    <a name="symbol?"></a>
    <p class="definition">
<b>symbol?</b> <i>object</i></p>
    <p></p>
    <a name="keyword?"></a>
    <p class="definition">
<b>keyword?</b> <i>object</i></p>
    <p></p>
    <a name="symbol->keyword"></a>
    <p class="definition">
<b>symbol->keyword</b> <i>symbol</i></p>
    <p></p>
    <a name="keyword->symbol"></a>
    <p class="definition">
<b>keyword->symbol</b> <i>keyword</i></p>
    <p></p>
    <a name="string->symbol"></a>
    <p class="definition">
<b>string->symbol</b> <i>string</i></p>
    <p></p>
    <a name="symbol->string"></a>
    <p class="definition">
<b>symbol->string</b> <i>symbol</i></p>
    <p></p>
    <a name="find-symbol"></a>
    <p class="definition">
<b>find-symbol</b> <i>string</i></p>
    <p></p>
    <a name="generate-symbol"></a>
    <p class="definition">
<b>generate-symbol</b> <i>&optional prefix</i></p>
    <p></p>
    <a name="symbol-bound?"></a>
    <p class="definition">
<b>symbol-bound?</b> <i>symbol</i></p>
    <p></p>
    <a name="symbol-unbound?"></a>
    <p class="definition">
<b>symbol-unbound?</b> <i>symbol</i></p>
    <p></p>
    <a name="SEC54"></a>
    <h4 class="section3">29.1.29. Thread</h4>
    <a name="primordial-thread"></a>
    <p class="definition">
<b>primordial-thread</b> <i></i></p>
    <p></p>
    <a name="current-thread"></a>
    <p class="definition">
<b>current-thread</b> <i></i></p>
    <p></p>
    <a name="SEC55"></a>
    <h4 class="section3">29.1.30. Time</h4>
    <a name="clock"></a>
    <p class="definition">
<b>clock</b> <i></i></p>
    <p></p>
    <a name="SEC56"></a>
    <h4 class="section3">29.1.31. Type</h4>
    <a name="type?"></a>
    <p class="definition">
<b>type?</b> <i>object</i></p>
    <p></p>
    <a name="new"></a>
    <p class="definition">
<b>new</b> <i>class object ...</i></p>
    <p></p>
    <a name="new-in"></a>
    <p class="definition">
<b>new-in</b> <i>context class object ...</i></p>
    <p></p>
    <a name="coerce"></a>
    <p class="definition">
<b>coerce</b> <i>object type</i></p>
    <p></p>
    <a name="class-of"></a>
    <p class="definition">
<b>class-of</b> <i>object</i></p>
    <p></p>
    <a name="is?"></a>
    <p class="definition">
<b>is?</b> <i>object type</i></p>
    <p></p>
    <a name="is-not?"></a>
    <p class="definition">
<b>is-not?</b> <i>object type</i></p>
    <p></p>
    <a name="typed?"></a>
    <p class="definition">
<b>typed?</b> <i>object type-name</i></p>
    <p></p>
    <a name="subtype?"></a>
    <p class="definition">
<b>subtype?</b> <i>class type</i></p>
    <p></p>
    <a name="subtyped?"></a>
    <p class="definition">
<b>subtyped?</b> <i>class type-name</i></p>
    <p></p>
    <a name="type-name"></a>
    <p class="definition">
<b>type-name</b> <i>type</i></p>
    <p></p>
    <a name="type-ascendant"></a>
    <p class="definition">
<b>type-ascendant</b> <i>type</i></p>
    <p></p>
    <a name="type-descendants"></a>
    <p class="definition">
<b>type-descendants</b> <i>type</i></p>
    <p></p>
    <a name="type-ancestors"></a>
    <p class="definition">
<b>type-ancestors</b> <i>type</i></p>
    <p></p>
    <a name="SEC57"></a>
    <h4 class="section3">29.1.32. Unit</h4>
    <a name="unit?"></a>
    <p class="definition">
<b>unit?</b> <i>object</i></p>
    <p></p>
    <a name="all-units"></a>
    <p class="definition">
<b>all-units</b> <i></i></p>
    <p></p>
    <a name="SEC58"></a>
    <h4 class="section3">29.1.33. Values</h4>
    <a name="values"></a>
    <p class="definition">
<b>values</b> <i>object ...</i></p>
    <p></p>
    <a name="SEC59"></a>
    <h4 class="section3">29.1.34. Vector</h4>
    <a name="vector?"></a>
    <p class="definition">
<b>vector?</b> <i>object</i></p>
    <p></p>
    <a name="TOC">
      <h3 class="toc">Table of Contents</h3>
    </a>
    <div>
      <div class="toc_first1">
        <a href="#overview">1. Overview</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#scheme">1.1. Scheme</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#toplevel_syntax">1.2. Toplevel Syntax</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#naming">1.3. Naming Conventions</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#lexical">2. Lexical Syntax</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#functional">3. Functional Programming</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#functional_syntax">3.1. Functional Syntax</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#functions">3.2. Functions</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#syntax_forms">3.3. Syntax</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#modifiers">4. Modifiers</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#object-oriented">5. Object-Oriented Programming</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#classes">5.1. Classes</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#meta-classes">5.1.1. Meta-Classes</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#interfaces">5.2. Interfaces</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#Object">5.3. Object</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#SEC1">5.3.1. Literals</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#dynamic-dispatch">5.4. Dynamic Dispatch</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#generic-methods">5.5. Generic methods</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#component-programming">6. Component Programming</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#Component">6.1. Component</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#Form">6.2. Form</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#Branch">6.3. Branch</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#types">7. Type Annotations</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#numbers">8. Numbers</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#generic-arithmetic">8.1. Generic Arithmetic</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#symbols">9. Symbols</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#sequences">10. Sequences</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#lists">10.1. List</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#vectors">10.2. Vector</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#u8vectors">10.3. U8Vector</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#strings">10.4. String</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#queues">10.5. Queue</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#axises">10.6. Axis</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#subseqs">10.7. Subseq</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#iteration">11. Iteration</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#sequences-iteration">11.1. Sequences</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#loop-macro">11.2. Loop Macro</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#exceptions">12. Exceptions</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#exception">12.1. Exception</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#input/output">13. Input / Output</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#file">13.1. File</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#directory">13.2. Directory</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#aliases">13.3. Aliases</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#formatted_output">13.4. Formatted Output</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#regular-expressions">14. Regular Expressions</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#date/time">15. Date / Time</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#jml">16. Markup</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#depot">17. Source Control</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#database">18. Database</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#Connection">18.1. Connection</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#Request">18.2. Request</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#Recordset">18.3. Recordset</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#profiling">19. Profiling</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#remoting">20. Remoting</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#proxies">20.1. Proxies</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#stubs">20.2. Stubs</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#system">21. System</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#process">21.1. Process</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#application">21.2. Application</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#user-interface">22. User Interface</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#SEC2">22.1. Drawing</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#SEC3">22.1.1. Cairo</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC4">22.1.2. Surface</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC5">22.1.3. Color</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC6">22.1.4. Font</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC7">22.1.5. Point</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC8">22.1.6. Dimension</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC9">22.1.7. Rect</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC10">22.1.8. Cell</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC11">22.1.9. Range</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC12">22.2. Windows</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#Window">22.2.1. Window</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Toplevel">22.2.2. Toplevel</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Stage">22.2.3. Stage</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Palette">22.2.4. Palette</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Popup">22.2.5. Popup</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Dialog">22.2.6. Dialog</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC13">22.3. Basic Views</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#View">22.3.1. View</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Border-View">22.3.2. Border-View</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Check-Box">22.3.3. Check-Box</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Group-Box">22.3.4. Group-Box</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Label-View">22.3.5. Label-View</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Layout-View">22.3.6. Layout-View</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Push-Button">22.3.7. Push-Button</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Radio-Button">22.3.8. Radio-Button</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Scroller-View">22.3.9. Scroller-View</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC14">22.4. Text-View</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#Text-View">22.4.1. Text-View</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC15">22.5. Tree-View</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#Tree-View">22.5.1. Tree-View</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Tree-Header">22.5.2. Tree-Header</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Tree-Node-Column">22.5.3. Tree-Node-Column</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Tree-Label-Column">22.5.4. Tree-Label-Column</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Tree-Row">22.5.5. Tree-Row</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC16">22.6. Hosting</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#SEC17">22.6.1. Host</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC18">22.6.2. Guest</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC19">22.7. Layouting</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#Flow-Layout">22.7.1. Flow-Layout</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Border-Layout">22.7.2. Border-Layout</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC20">22.8. Activation</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC21">22.9. Menus</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#Menu">22.9.1. Menu</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Label-Item">22.9.2. Label-Item</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#Separator-Item">22.9.3. Separator-Item</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC22">22.10. Events</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#Event">22.10.1. Event</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC23">22.11. Clipboard</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#SEC24">22.12. User Interaction</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#c-interface">23. C Interface</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#c-interface.syntax">23.1. Syntax</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#License">24. License</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#Designer">25. Designer</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#Library">26. Library</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#Node">26.1. Node</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#Element">26.2. Element</a>
          </div>
        </div>
        <div>
          <div class="toc2">
            <a href="#Exemplar">26.3. Exemplar</a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#Java">27. Java</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#SQL">28. SQL</a>
      </div>
    </div>
    <div>
      <div class="toc1">
        <a href="#SEC25">29. Modules</a>
      </div>
      <div>
        <div>
          <div class="toc_first2">
            <a href="#jazz">29.1. jazz</a>
          </div>
          <div>
            <div>
              <div class="toc_first3">
                <a href="#SEC26">29.1.1. Boolean</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC27">29.1.2. Char</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC28">29.1.3. Class</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC29">29.1.4. Closure</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC30">29.1.5. Collector</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC31">29.1.6. Control</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC32">29.1.7. Debugger</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC33">29.1.8. Enumeration</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC34">29.1.9. Eval</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC35">29.1.10. Format</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC36">29.1.11. Function</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC37">29.1.12. Hashtable</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC38">29.1.13. Integer</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC39">29.1.14. Interface</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC40">29.1.15. List</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC41">29.1.16. Manifest</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC42">29.1.17. Map</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC43">29.1.18. Metaclass</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC44">29.1.19. Number</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC45">29.1.20. Object</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC46">29.1.21. Package</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC47">29.1.22. Printer</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC48">29.1.23. Procedure</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC49">29.1.24. Reader</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC50">29.1.25. Real</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC51">29.1.26. Sequence</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC52">29.1.27. String</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC53">29.1.28. Symbol</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC54">29.1.29. Thread</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC55">29.1.30. Time</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC56">29.1.31. Type</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC57">29.1.32. Unit</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC58">29.1.33. Values</a>
              </div>
            </div>
            <div>
              <div class="toc3">
                <a href="#SEC59">29.1.34. Vector</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <a name="INDEX">
      <h3 class="index">Index</h3>
    </a>
    <a class="letter-navigator" href="#SEC60">
      <b>*</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC61">
      <b>+</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC62">
      <b>-</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC63">
      <b>/</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC64">
      <b><</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC65">
      <b>=</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC66">
      <b>></b>
    </a>
&nbsp;    <br/>
    <a class="letter-navigator" href="#SEC67">
      <b>A</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC68">
      <b>B</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC69">
      <b>C</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC70">
      <b>D</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC71">
      <b>E</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC72">
      <b>F</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC73">
      <b>G</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC74">
      <b>H</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC75">
      <b>I</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC76">
      <b>J</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC77">
      <b>K</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC78">
      <b>L</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC79">
      <b>M</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC80">
      <b>N</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC81">
      <b>O</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC82">
      <b>P</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC83">
      <b>Q</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC84">
      <b>R</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC85">
      <b>S</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC86">
      <b>T</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC87">
      <b>U</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC88">
      <b>V</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC89">
      <b>W</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC90">
      <b>X</b>
    </a>
&nbsp;    <a class="letter-navigator" href="#SEC91">
      <b>Z</b>
    </a>
&nbsp;    <table width="100%">
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC60">*</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#*">
            <code>*</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC61">+</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#+">
            <code>+</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC62">-</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#-">
            <code>-</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC63">/</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#/">
            <code>/</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#/=">
            <code>/=</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC64"><</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#<">
            <code><</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#<=">
            <code><=</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC65">=</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#=">
            <code>=</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC66">></a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#>">
            <code>></code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#>=">
            <code>>=</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC67">A</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#aliases">
            <code>Aliases</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#application">
            <code>Application</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#axises">
            <code>Axis</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#abs">
            <code>abs</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#acos">
            <code>acos</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#all-units">
            <code>all-units</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#alphabetic?">
            <code>alphabetic?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#alphanumeric?">
            <code>alphanumeric?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#and">
            <code>and</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#append">
            <code>append</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#append!">
            <code>append!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#asin">
            <code>asin</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#assert">
            <code>assert</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#assert-type">
            <code>assert-type</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#assoc">
            <code>assoc</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#assq">
            <code>assq</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#assv">
            <code>assv</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#atan">
            <code>atan</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#atom?">
            <code>atom?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC68">B</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Border-Layout">
            <code>Border-Layout</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Border-View">
            <code>Border-View</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Branch">
            <code>Branch</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#begin">
            <code>begin</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#between">
            <code>between</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#between?">
            <code>between?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bind">
            <code>bind</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bind-keywords">
            <code>bind-keywords</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bind-optionals">
            <code>bind-optionals</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bit-and">
            <code>bit-and</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bit-not">
            <code>bit-not</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bit-or">
            <code>bit-or</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bit-set">
            <code>bit-set</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bit-set?">
            <code>bit-set?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#bit-xor">
            <code>bit-xor</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#boolean">
            <code>boolean</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#boolean->integer">
            <code>boolean->integer</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#boolean?">
            <code>boolean?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#butlast">
            <code>butlast</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC69">C</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#c-interface">
            <code>C Interface</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Check-Box">
            <code>Check-Box</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#classes">
            <code>Classes</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Component">
            <code>Component</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#component-programming">
            <code>Component Programming</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Connection">
            <code>Connection</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#c-constant">
            <code>c-constant</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#c-enumeration">
            <code>c-enumeration</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#c-external">
            <code>c-external</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#c-structure">
            <code>c-structure</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#caar">
            <code>caar</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#cadr">
            <code>cadr</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#capitalize">
            <code>capitalize</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#car">
            <code>car</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#case">
            <code>case</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#catch">
            <code>catch</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#cdar">
            <code>cdar</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#cddr">
            <code>cddr</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#cdr">
            <code>cdr</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ceil">
            <code>ceil</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#char?">
            <code>char?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#child">
            <code>child</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#children">
            <code>children</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ci/=">
            <code>ci/=</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ci<">
            <code>ci<</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ci<=">
            <code>ci<=</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ci=">
            <code>ci=</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ci>">
            <code>ci></code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ci>=">
            <code>ci>=</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#class">
            <code>class</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#class-fields">
            <code>class-fields</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#class-members">
            <code>class-members</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#class-of">
            <code>class-of</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#class-slots">
            <code>class-slots</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#class?">
            <code>class?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#clock">
            <code>clock</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#close">
            <code>close</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#closure?">
            <code>closure?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#coerce">
            <code>coerce</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#collect">
            <code>collect</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#collect-if">
            <code>collect-if</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#collect-type">
            <code>collect-type</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#conclude">
            <code>conclude</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#cond">
            <code>cond</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#cons">
            <code>cons</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#copy">
            <code>copy</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#cos">
            <code>cos</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#count">
            <code>count</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#count-if">
            <code>count-if</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#count-type">
            <code>count-type</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#cpp/java-constituent?">
            <code>cpp/java-constituent?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#current-thread">
            <code>current-thread</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC70">D</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#database">
            <code>Database</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#date/time">
            <code>Date / Time</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Designer">
            <code>Designer</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Dialog">
            <code>Dialog</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#directory">
            <code>Directory</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#dynamic-dispatch">
            <code>Dynamic Dispatch</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#decrease!">
            <code>decrease!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#definition">
            <code>definition</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#describe">
            <code>describe</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#destroy">
            <code>destroy</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#difference">
            <code>difference</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#display">
            <code>display</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#downcase">
            <code>downcase</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC71">E</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Element">
            <code>Element</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Event">
            <code>Event</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#exception">
            <code>Exception</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#exceptions">
            <code>Exceptions</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Exemplar">
            <code>Exemplar</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ecase">
            <code>ecase</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#eighth">
            <code>eighth</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#either">
            <code>either</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#element">
            <code>element</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#element-reversed">
            <code>element-reversed</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#empty-hashtable">
            <code>empty-hashtable</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#empty-map">
            <code>empty-map</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#empty-string?">
            <code>empty-string?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#empty?">
            <code>empty?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#end-of-stream?">
            <code>end-of-stream?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ends-with?">
            <code>ends-with?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#enumeration?">
            <code>enumeration?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#eq?">
            <code>eq?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#equal?">
            <code>equal?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#eqv?">
            <code>eqv?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#error">
            <code>error</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#essay">
            <code>essay</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#eval">
            <code>eval</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#even?">
            <code>even?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#every?">
            <code>every?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#exit">
            <code>exit</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#exp">
            <code>exp</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#expt">
            <code>expt</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC72">F</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#file">
            <code>File</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Flow-Layout">
            <code>Flow-Layout</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Form">
            <code>Form</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#formatted_output">
            <code>Formatted Output</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#functional">
            <code>Functional Programming</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#functional_syntax">
            <code>Functional Syntax</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#functions">
            <code>Functions</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#fifth">
            <code>fifth</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#fill!">
            <code>fill!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#find">
            <code>find</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#find-component">
            <code>find-component</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#find-if">
            <code>find-if</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#find-symbol">
            <code>find-symbol</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#finish">
            <code>finish</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#first">
            <code>first</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#floor">
            <code>floor</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#for-each">
            <code>for-each</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#for-each-hash">
            <code>for-each-hash</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#for-each-map">
            <code>for-each-map</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#for-each-pair">
            <code>for-each-pair</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#for-each-property">
            <code>for-each-property</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#for-each-reversed">
            <code>for-each-reversed</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#format">
            <code>format</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#fourth">
            <code>fourth</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#function">
            <code>function</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#function?">
            <code>function?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC73">G</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#generic-arithmetic">
            <code>Generic Arithmetic</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#generic-methods">
            <code>Generic methods</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Group-Box">
            <code>Group-Box</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#gather">
            <code>gather</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#gc">
            <code>gc</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#generate-symbol">
            <code>generate-symbol</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#get-char">
            <code>get-char</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#getf">
            <code>getf</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#getprop">
            <code>getprop</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC74">H</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#hash-clear">
            <code>hash-clear</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#hash-ref">
            <code>hash-ref</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#hash-remove!">
            <code>hash-remove!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#hash-set!">
            <code>hash-set!</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC75">I</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#input/output">
            <code>Input / Output</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#interfaces">
            <code>Interfaces</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#iteration">
            <code>Iteration</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#identity">
            <code>identity</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#if">
            <code>if</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#in-interval?">
            <code>in-interval?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#in-manifest?">
            <code>in-manifest?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#increase!">
            <code>increase!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#initialize">
            <code>initialize</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#insert!">
            <code>insert!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#insert-ordered!">
            <code>insert-ordered!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#insert-sequence!">
            <code>insert-sequence!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#install">
            <code>install</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#integer->boolean">
            <code>integer->boolean</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#integer?">
            <code>integer?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#interface">
            <code>interface</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#interface?">
            <code>interface?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#intersection">
            <code>intersection</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#is-not?">
            <code>is-not?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#is?">
            <code>is?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC76">J</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Java">
            <code>Java</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#jazz">
            <code>jazz</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#jazz-constituent?">
            <code>jazz-constituent?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#join">
            <code>join</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC77">K</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#keyword->symbol">
            <code>keyword->symbol</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#keyword?">
            <code>keyword?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC78">L</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Label-Item">
            <code>Label-Item</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Label-View">
            <code>Label-View</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Layout-View">
            <code>Layout-View</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#lexical">
            <code>Lexical Syntax</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Library">
            <code>Library</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#License">
            <code>License</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#lists">
            <code>List</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#loop-macro">
            <code>Loop Macro</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#lambda">
            <code>lambda</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#last">
            <code>last</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#last-tail">
            <code>last-tail</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#length">
            <code>length</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#let">
            <code>let</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#let*">
            <code>let*</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#letrec">
            <code>letrec</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#library">
            <code>library</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#list">
            <code>list</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#list?">
            <code>list?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#load">
            <code>load</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#load-hashtable">
            <code>load-hashtable</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#load-map">
            <code>load-map</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#locate">
            <code>locate</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#log">
            <code>log</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#loop">
            <code>loop</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#lower-case?">
            <code>lower-case?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC79">M</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#jml">
            <code>Markup</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Menu">
            <code>Menu</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#meta-classes">
            <code>Meta-Classes</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#modifiers">
            <code>Modifiers</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#map">
            <code>map</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#map-clear">
            <code>map-clear</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#map-ref">
            <code>map-ref</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#map-set!">
            <code>map-set!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#map-to">
            <code>map-to</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#max">
            <code>max</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#member?">
            <code>member?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#memq?">
            <code>memq?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#memv?">
            <code>memv?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#merge-ordered">
            <code>merge-ordered</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#metaclass-instance">
            <code>metaclass-instance</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#metaclass?">
            <code>metaclass?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#method">
            <code>method</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#min">
            <code>min</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#mismatch">
            <code>mismatch</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#module">
            <code>module</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#modulo">
            <code>modulo</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC80">N</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#naming">
            <code>Naming Conventions</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Node">
            <code>Node</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#numbers">
            <code>Numbers</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#name">
            <code>name</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#near?">
            <code>near?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#negative?">
            <code>negative?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#neq?">
            <code>neq?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#new">
            <code>new</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#new-in">
            <code>new-in</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#new-line">
            <code>new-line</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#nil?">
            <code>nil?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#ninth">
            <code>ninth</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#norm">
            <code>norm</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#not">
            <code>not</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#not-nil?">
            <code>not-nil?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#number?">
            <code>number?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#numeric?">
            <code>numeric?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC81">O</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Object">
            <code>Object</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#object-oriented">
            <code>Object-Oriented Programming</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#overview">
            <code>Overview</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#object?">
            <code>object?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#odd?">
            <code>odd?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#or">
            <code>or</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC82">P</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Palette">
            <code>Palette</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Popup">
            <code>Popup</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#process">
            <code>Process</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#profiling">
            <code>Profiling</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#proxies">
            <code>Proxies</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Push-Button">
            <code>Push-Button</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#package?">
            <code>package?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#pair?">
            <code>pair?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#parent">
            <code>parent</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#partition">
            <code>partition</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#peek-char">
            <code>peek-char</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#percent">
            <code>percent</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#percentage">
            <code>percentage</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#positive?">
            <code>positive?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#prefix">
            <code>prefix</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#prefix?">
            <code>prefix?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#prepare">
            <code>prepare</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#primordial-thread">
            <code>primordial-thread</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#print">
            <code>print</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#print-unreadable">
            <code>print-unreadable</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#procedure?">
            <code>procedure?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#prog1">
            <code>prog1</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#property">
            <code>property</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC83">Q</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#queues">
            <code>Queue</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#quote">
            <code>quote</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#quotient">
            <code>quotient</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC84">R</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Radio-Button">
            <code>Radio-Button</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Recordset">
            <code>Recordset</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#regular-expressions">
            <code>Regular Expressions</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#remoting">
            <code>Remoting</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Request">
            <code>Request</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#random">
            <code>random</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#random-element">
            <code>random-element</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#randomize">
            <code>randomize</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#rassoc">
            <code>rassoc</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#read">
            <code>read</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#real?">
            <code>real?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#receive">
            <code>receive</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#relate">
            <code>relate</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#remove">
            <code>remove</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#remove!">
            <code>remove!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#remove-duplicates">
            <code>remove-duplicates</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#remove-nils">
            <code>remove-nils</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#remove-trailing">
            <code>remove-trailing</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#replace!">
            <code>replace!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#replace-subseq!">
            <code>replace-subseq!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#reverse">
            <code>reverse</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#reverse!">
            <code>reverse!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#round">
            <code>round</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC85">S</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#SQL">
            <code>SQL</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#scheme">
            <code>Scheme</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Scroller-View">
            <code>Scroller-View</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Separator-Item">
            <code>Separator-Item</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#sequences-iteration">
            <code>Sequences</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#sequences">
            <code>Sequences</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#depot">
            <code>Source Control</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Stage">
            <code>Stage</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#strings">
            <code>String</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#stubs">
            <code>Stubs</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#subseqs">
            <code>Subseq</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#symbols">
            <code>Symbols</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#c-interface.syntax">
            <code>Syntax</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#syntax_forms">
            <code>Syntax</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#system">
            <code>System</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#search">
            <code>search</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#second">
            <code>second</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#separate">
            <code>separate</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#sequence?">
            <code>sequence?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set!">
            <code>set!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-car!">
            <code>set-car!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-cdr!">
            <code>set-cdr!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-eighth!">
            <code>set-eighth!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-element!">
            <code>set-element!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-fifth!">
            <code>set-fifth!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-first!">
            <code>set-first!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-fourth!">
            <code>set-fourth!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-ninth!">
            <code>set-ninth!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-second!">
            <code>set-second!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-seventh!">
            <code>set-seventh!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-sixth!">
            <code>set-sixth!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-tenth!">
            <code>set-tenth!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#set-third!">
            <code>set-third!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#setf">
            <code>setf</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#seventh">
            <code>seventh</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#shift-left">
            <code>shift-left</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#shift-right">
            <code>shift-right</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#sign">
            <code>sign</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#signal">
            <code>signal</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#sin">
            <code>sin</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#sixth">
            <code>sixth</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#skip">
            <code>skip</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#slot">
            <code>slot</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#some?">
            <code>some?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#sort">
            <code>sort</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#split">
            <code>split</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#split-justified">
            <code>split-justified</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#sqrt">
            <code>sqrt</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#starts-with?">
            <code>starts-with?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#string->symbol">
            <code>string->symbol</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#string?">
            <code>string?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#subseq">
            <code>subseq</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#subseq!">
            <code>subseq!</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#substitute">
            <code>substitute</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#substitute-alist">
            <code>substitute-alist</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#subtype?">
            <code>subtype?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#subtyped?">
            <code>subtyped?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#symbol->keyword">
            <code>symbol->keyword</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#symbol->string">
            <code>symbol->string</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#symbol-bound?">
            <code>symbol-bound?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#symbol-unbound?">
            <code>symbol-unbound?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#symbol?">
            <code>symbol?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC86">T</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Text-View">
            <code>Text-View</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Toplevel">
            <code>Toplevel</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#toplevel_syntax">
            <code>Toplevel Syntax</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Tree-Header">
            <code>Tree-Header</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Tree-Label-Column">
            <code>Tree-Label-Column</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Tree-Node-Column">
            <code>Tree-Node-Column</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Tree-Row">
            <code>Tree-Row</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Tree-View">
            <code>Tree-View</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#types">
            <code>Type Annotations</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#tail">
            <code>tail</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#tan">
            <code>tan</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#tenth">
            <code>tenth</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#third">
            <code>third</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#throw">
            <code>throw</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#tie">
            <code>tie</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#type-ancestors">
            <code>type-ancestors</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#type-ascendant">
            <code>type-ascendant</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#type-descendants">
            <code>type-descendants</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#type-name">
            <code>type-name</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#type?">
            <code>type?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#typecase">
            <code>typecase</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#typed?">
            <code>typed?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC87">U</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#u8vectors">
            <code>U8Vector</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#user-interface">
            <code>User Interface</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#unget-char">
            <code>unget-char</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#union">
            <code>union</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#unit-loaded?">
            <code>unit-loaded?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#unit?">
            <code>unit?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#unless">
            <code>unless</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#unwind-protect">
            <code>unwind-protect</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#upcase">
            <code>upcase</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#upper-case?">
            <code>upper-case?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC88">V</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#vectors">
            <code>Vector</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#View">
            <code>View</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#values">
            <code>values</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#vector?">
            <code>vector?</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC89">W</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#Window">
            <code>Window</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#when">
            <code>when</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#while">
            <code>while</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#whitespace?">
            <code>whitespace?</code>
          </a></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#write">
            <code>write</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC90">X</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#xor">
            <code>xor</code>
          </a></td>
      </tr>
      <tr>
        <td colspan="2">
<div class="index-letter">
            <a name="SEC91">Z</a>
          </div></td>
      </tr>
      <tr>
        <td></td>
        <td>
<a href="#zero?">
            <code>zero?</code>
          </a></td>
      </tr>
    </table>
    <div id="footer">
      <p>Copyright &copy; 1996-2009 Guillaume Cartier</p>
    </div>
  </div>
</div>
</body>

</html>
