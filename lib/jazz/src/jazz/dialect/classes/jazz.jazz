;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Jazz Walker
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.dialect.classes.jazz jazz.dialect


(export (jazz.dialect.classes.scheme))
(import (jazz.dialect.classes.scheme)
        (jazz.language.runtime.kernel)
        (jazz.language.runtime.format)
        (jazz.language.runtime.functional)
        (jazz.language.runtime.object))


;;;
;;;; Definition
;;;


(class Definition-Declaration extends Declaration
  
  
  (slot expansion getter generate)
  (slot signature getter generate)
  (slot value     getter generate)
  
  
  (method override (initialize . rest)
    (bind-keywords ((expansion #f) (signature #f) . others) rest
      (apply nextmethod others)
      (set! expansion~self expansion)
      (set! signature~self signature))))


;;;
;;;; Specialize
;;;


(class Specialize extends Expression)


;;;
;;;; Generic
;;;


(class Generic-Declaration extends Declaration
  
  
  (slot dispatch-types getter generate)
  (slot signature      getter generate)
  (slot body           getter generate))


;;;
;;;; Specific
;;;


(class Specific-Declaration extends Declaration
  
  
  (slot generic   getter generate)
  (slot signature getter generate)
  (slot body      getter generate)
  (slot root?     getter generate))


;;;
;;;; Category
;;;


(class Category-Declaration extends Namespace-Declaration
  
  
  (slot implementor         getter generate)
  (slot metaclass           getter generate)
  (slot metaclass-explicit? getter generate))


;;;
;;;; Class
;;;


(class Class-Declaration extends Category-Declaration
  
  
  (slot ascendant          getter generate)
  (slot ascendant-relation getter generate)
  (slot ascendant-base     getter generate)
  (slot interfaces         getter generate))


;;;
;;;; Interface
;;;


(class Interface-Declaration extends Category-Declaration
  
  
  (slot ascendants getter generate))


;;;
;;;; Field
;;;


(class Field-Declaration extends Declaration)


;;;
;;;; Slot
;;;


(class Slot-Declaration extends Field-Declaration
  
  
  (slot initialize  getter generate)
  (slot getter-name getter generate)
  (slot setter-name getter generate))


;;;
;;;; Property
;;;


(class Property-Declaration extends Slot-Declaration
  
  
  (slot getter getter generate)
  (slot setter getter generate))


;;;
;;;; Method
;;;


(class Method-Declaration extends Field-Declaration
  
  
  (slot root         getter generate)
  (slot propagation  getter generate)
  (slot abstraction  getter generate)
  (slot expansion    getter generate)
  (slot remote       getter generate)
  (slot synchronized getter generate)
  (slot signature    getter generate)
  (slot body         getter generate))


;;;
;;;; Hub
;;;


(class Hub-Declaration extends Declaration
  
  
  (slot nodes getter generate))


;;;
;;;; Node
;;;


(class Node-Declaration extends Declaration
  
  
  (slot hub-name  getter generate)
  (slot signature getter generate))


;;;
;;;; With Self
;;;


(class With-Self extends Expression
  
  
  (slot body getter generate))


;;;
;;;; With Dynamic Self
;;;


(class With-Dynamic-Self extends Expression
  
  
  (slot code getter generate)
  (slot body getter generate))


;;;
;;;; Cast
;;;


(class Cast extends Expression
  
  
  (slot expression getter generate))


;;;
;;;; Allocate
;;;


(class Allocate extends Expression
  
  
  (slot class  getter generate)
  (slot values getter generate))


;;;
;;;; Dispatch Call
;;;


(class Dispatch-Call extends Expression
  
  
  (slot name      getter generate)
  (slot arguments getter generate)
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{s}" name)))))


;;;
;;;; Dispatch Reference
;;;


(class Dispatch-Reference extends Expression
  
  
  (slot name getter generate)
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{s}" name)))))


;;;
;;;; Dialect
;;;


(class Jazz-Dialect extends Dialect)


;;;
;;;; Walker
;;;


(class Jazz-Walker extends Scheme-Walker))
