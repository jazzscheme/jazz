;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Output
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.language.runtime.output jazz.dialect


(import (jazz.language.runtime.format)
        (jazz.language.runtime.functional))


(definition public (output-header title printer (language: language 'jazz) (system: system #f) (license: license #f) (author: author #f) (copyright: copyright #f) (contributors: contributors '()) (end-proper?: end-proper? #t))
  (with-printer printer
    (lambda (output)
      (let* ((system (or system "JazzScheme"))
             (system-padding (make-string (string-length system) #\=))
             (comment (case language ((jazz) ";;;") ((c) "//")))
             (toplevel-comment (case language ((jazz) ";;;;") ((c) "///"))))
        (format output #"{a}=={a}=={%}"# comment system-padding)
        (format output #"{a}  {a}{%}"# comment system)
        (format output #"{a}=={a}=={%}"# comment system-padding)
        (format output #"{a}{%}"# comment)
        (format output #"{a} {a}{%}"# toplevel-comment title)
        (format output #"{a}"# comment)
        (case license
          ((jazzscheme)
           (format output "{%}")
           (format output #"{a}  The contents of this file are subject to the Mozilla Public License Version{%}"# comment)
           (format output #"{a}  1.1 (the "License"); you may not use this file except in compliance with{%}"# comment)
           (format output #"{a}  the License. You may obtain a copy of the License at{%}"# comment)
           (format output #"{a}  http://www.mozilla.org/MPL/{%}"# comment)
           (format output #"{a}{%}"# comment)
           (format output #"{a}  Software distributed under the License is distributed on an "AS IS" basis,{%}"# comment)
           (format output #"{a}  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License{%}"# comment)
           (format output #"{a}  for the specific language governing rights and limitations under the{%}"# comment)
           (format output #"{a}  License.{%}"# comment)
           (format output #"{a}{%}"# comment)
           (format output #"{a}  The Original Code is JazzScheme.{%}"# comment)
           (format output #"{a}{%}"# comment)
           (format output #"{a}  The Initial Developer of the Original Code is {a}.{%}"# comment author)
           (format output #"{a}  Portions created by the Initial Developer are Copyright (C) {a}{%}"# comment copyright)
           (format output #"{a}  the Initial Developer. All Rights Reserved.{%}"# comment)
           (format output #"{a}{%}"# comment)
           (format output #"{a}  Contributor(s):{%}"# comment)
           (for-each (lambda (contributor)
                       (format output #"{a}    {a}{%}"# comment contributor))
                     contributors)
           (format output #"{a}{%}"# comment)
           (format output #"{a}  Alternatively, the contents of this file may be used under the terms of{%}"# comment)
           (format output #"{a}  the GNU General Public License Version 2 or later (the "GPL"), in which{%}"# comment)
           (format output #"{a}  case the provisions of the GPL are applicable instead of those above. If{%}"# comment)
           (format output #"{a}  you wish to allow use of your version of this file only under the terms of{%}"# comment)
           (format output #"{a}  the GPL, and not to allow others to use your version of this file under the{%}"# comment)
           (format output #"{a}  terms of the MPL, indicate your decision by deleting the provisions above{%}"# comment)
           (format output #"{a}  and replace them with the notice and other provisions required by the GPL.{%}"# comment)
           (format output #"{a}  If you do not delete the provisions above, a recipient may use your version{%}"# comment)
           (format output #"{a}  of this file under the terms of any one of the MPL or the GPL.{%}"# comment)
           (format output #"{a}{%}"# comment)
           (format output #"{a}  See www.jazzscheme.org for details."# comment)))
        (when end-proper?
          (format output "{%}"))))))


(definition public (output-section title output (language: language 'jazz) (level: level 0))
  (let ((comment (case language ((jazz) ";;;") ((c) "//")))
        (toplevel (case language ((jazz) ";;;;") ((c) "///")))
        (extra (case language ((jazz) "") ((c) (make-string (+ (string-length title) 4) #\-)))))
    (format output "{%}{%}")
    (format output "{_ :v}{a}{a}{%}" (* level 2) comment extra)
    (format output "{_ :v}{a} {a}{%}" (* level 2) toplevel title)
    (format output "{_ :v}{a}{a}{%}" (* level 2) comment extra)
    (format output "{%}{%}"))))
