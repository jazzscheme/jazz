;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Text Actions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.preference.Text-Actions jazz


(import (jazz.jml)
        (jazz.library)
        (jazz.ui)
        (jazz.utilities))


(class Text-Actions extends Actions
  
  
  (form
    (<install>
      (<Action-Item> name: move-backward-char           action-handler: {Event-Handler :focus on-move direction: left extend?: #f word?: #f} shortcut: {Shortcut Left})
      (<Action-Item> name: extend-backward-char         action-handler: {Event-Handler :focus on-move direction: left extend?: #t word?: #f} shortcut: {Shortcut :shift Left})
      (<Action-Item> name: move-backward-word           action-handler: {Event-Handler :focus on-move direction: left extend?: #f word?: #t} shortcut: {Shortcut :control Left})
      (<Action-Item> name: extend-backward-word         action-handler: {Event-Handler :focus on-move direction: left extend?: #t word?: #t} shortcut: {Shortcut :shift :control Left})
      (<Action-Item> name: move-forward-char            action-handler: {Event-Handler :focus on-move direction: right extend?: #f word?: #f} shortcut: {Shortcut Right})
      (<Action-Item> name: extend-forward-char          action-handler: {Event-Handler :focus on-move direction: right extend?: #t word?: #f} shortcut: {Shortcut :shift Right})
      (<Action-Item> name: move-forward-word            action-handler: {Event-Handler :focus on-move direction: right extend?: #f word?: #t} shortcut: {Shortcut :control Right})
      (<Action-Item> name: extend-forward-word          action-handler: {Event-Handler :focus on-move direction: right extend?: #t word?: #t} shortcut: {Shortcut :shift :control Right})
      (<Action-Item> name: move-upward                  action-handler: {Event-Handler :focus on-move direction: up} shortcut: {Shortcut Up})
      (<Action-Item> name: extend-upward                action-handler: {Event-Handler :focus on-move direction: up extend?: #t} shortcut: {Shortcut :shift Up})
      (<Action-Item> name: scroll-upward                action-handler: {Event-Handler :focus on-move direction: up scroll?: #t} shortcut: {Shortcut :control Up})
      (<Action-Item> name: move-downward                action-handler: {Event-Handler :focus on-move direction: down} shortcut: {Shortcut Down})
      (<Action-Item> name: extend-downward              action-handler: {Event-Handler :focus on-move direction: down extend?: #t} shortcut: {Shortcut :shift Down})
      (<Action-Item> name: scroll-downward              action-handler: {Event-Handler :focus on-move direction: down scroll?: #t} shortcut: {Shortcut :control Down})
      (<Action-Item> name: backward-compound            action-handler: {Event-Handler :focus on-backward-compound extend?: #f} shortcut: {Shortcut :control :alt Left})
      (<Action-Item> name: extend-backward-compound     action-handler: {Event-Handler :focus on-backward-compound extend?: #t} shortcut: {Shortcut :control :alt :shift Left})
      (<Action-Item> name: forward-compound             action-handler: {Event-Handler :focus on-forward-compound extend?: #f} shortcut: {Shortcut :control :alt Right})
      (<Action-Item> name: extend-forward-compound      action-handler: {Event-Handler :focus on-forward-compound extend?: #t} shortcut: {Shortcut :control :alt :shift Right})
      (<Action-Item> name: upward-compound              action-handler: {Event-Handler :focus on-upward-compound} shortcut: {Shortcut :alt Up})
      (<Action-Item> name: downward-compound            action-handler: {Event-Handler :focus on-downward-compound} shortcut: {Shortcut :alt Down})
      (<Action-Item> name: delete-char                  action-handler: {Event-Handler :focus on-delete-char} shortcut: {Shortcut Delete})
      (<Action-Item> name: delete-word                  action-handler: {Event-Handler :focus on-delete-word} shortcut: {Shortcut :control Delete})
      (<Action-Item> name: kill-line                    action-handler: {Event-Handler :focus on-kill-line} shortcut: {Shortcut :control #\M})
      (<Action-Item> name: home                         action-handler: {Event-Handler :focus on-home} shortcut: {Shortcut Home})
      (<Action-Item> name: extend-home                  action-handler: {Event-Handler :focus on-home extend?: #t} shortcut: {Shortcut :shift Home})
      (<Action-Item> name: end                          action-handler: {Event-Handler :focus on-end} shortcut: {Shortcut End})
      (<Action-Item> name: extend-end                   action-handler: {Event-Handler :focus on-end extend?: #t} shortcut: {Shortcut :shift End})
      (<Action-Item> name: document-home                action-handler: {Event-Handler :focus on-home document?: #t} shortcut: {Shortcut :control Home})
      (<Action-Item> name: extend-document-home         action-handler: {Event-Handler :focus on-home document?: #t extend?: #t} shortcut: {Shortcut :control :shift Home})
      (<Action-Item> name: document-end                 action-handler: {Event-Handler :focus on-end document?: #t} shortcut: {Shortcut :control End})
      (<Action-Item> name: extend-document-end          action-handler: {Event-Handler :focus on-end document?: #t extend?: #t} shortcut: {Shortcut :control :shift End})
      (<Action-Item> name: prior                        action-handler: {Event-Handler :focus on-prior} shortcut: {Shortcut Prior})
      (<Action-Item> name: extend-prior                 action-handler: {Event-Handler :focus on-prior extend?: #t} shortcut: {Shortcut :shift Prior})
      (<Action-Item> name: next                         action-handler: {Event-Handler :focus on-next} shortcut: {Shortcut Next})
      (<Action-Item> name: extend-next                  action-handler: {Event-Handler :focus on-next extend?: #t} shortcut: {Shortcut :shift Next})
      (<Action-Item> name: tab                          action-handler: {Event-Handler :focus on-tab-press} shortcut: {Shortcut Tab})
      (<Action-Item> name: shift-tab                    action-handler: {Event-Handler :focus on-tab-press} shortcut: {Shortcut :shift Tab})
      (<Action-Item> name: backspace-word               action-handler: {Event-Handler :focus on-backspace-press word?: #t} shortcut: {Shortcut :control Backspace})
      (<Action-Item> name: cut                          action-handler: {Event-Handler :focus on-cut} shortcut: {Shortcut :shift Delete})
      (<Action-Item> name: copy                         action-handler: {Event-Handler :focus on-copy} shortcut: {Shortcut :control Insert})
      (<Action-Item> name: paste                        action-handler: {Event-Handler :focus on-paste} shortcut: {Shortcut :shift Insert})
      (<Action-Item> name: search-forward-mode          action-handler: {Event-Handler :focus on-search-forward-mode} shortcut: {Shortcut :control #\S})
      (<Action-Item> name: search-backward-mode         action-handler: {Event-Handler :focus on-search-backward-mode} shortcut: {Shortcut :control #\R})
      (<Action-Item> name: find-forward                 action-handler: {Event-Handler :focus on-find-forward} shortcut: {Shortcut :control #\J})
      (<Action-Item> name: find-backward                action-handler: {Event-Handler :focus on-find-backward} shortcut: {Shortcut :control :shift #\J})
      (<Action-Item> name: find-next                    action-handler: {Event-Handler :focus on-find-next} shortcut: {Shortcut :control F3})
      (<Action-Item> name: find-previous                action-handler: {Event-Handler :focus on-find-previous} shortcut: {Shortcut :control :shift F3})
      (<Action-Item> name: goto-line                    action-handler: {Event-Handler :focus on-goto-line} shortcut: {Shortcut :alt #\G})
      (<Action-Item> name: select-outer                 action-handler: {Event-Handler :focus on-select-outer} shortcut: {Shortcut :control Space})
      (<Action-Item> name: set-mark                     action-handler: {Event-Handler :focus on-set-mark} shortcut: {Shortcut :alt #\M})
      (<Action-Item> name: jump-mark                    action-handler: {Event-Handler :focus on-jump-mark} shortcut: {Shortcut :control :alt #\M})
      (<Action-Item> name: extend-mark                  action-handler: {Event-Handler :focus on-jump-mark extend?: #t} shortcut: {Shortcut :alt :shift #\J})
      (<Action-Item> name: center-caret                 action-handler: {Event-Handler :focus on-center-caret} shortcut: {Shortcut :control #\L})
      (<Action-Item> name: top-caret                    action-handler: {Event-Handler :focus on-top-caret} shortcut: {Shortcut :alt #\L})
      (<Action-Item> name: display-info                 action-handler: {Event-Handler :focus on-display-info} shortcut: {Shortcut :control :alt #\I})
      (<Action-Item> name: no-space                     action-handler: {Event-Handler :focus on-remove-spaces keep: none})
      (<Action-Item> name: one-space                    action-handler: {Event-Handler :focus on-remove-spaces keep: one})
      (<Action-Item> name: one/no-space                 action-handler: {Event-Handler :focus on-remove-spaces keep: one/none} shortcut: {Shortcut :alt Space})
      (<Action-Item> name: lock-anchor                  action-handler: {Event-Handler :focus on-lock-anchor} shortcut: {Shortcut :control #\I})
      (<Action-Item> name: unlock-anchor                action-handler: {Event-Handler :focus on-unlock-anchor} shortcut: {Shortcut :control :shift #\I})
      
      ;; auxiliary
      (<Action-Item> name: move-backward-char-aux       action-handler: {Event-Handler :focus on-move direction: left extend?: #f word?: #f})
      (<Action-Item> name: extend-backward-char-aux     action-handler: {Event-Handler :focus on-move direction: left extend?: #t word?: #f})
      (<Action-Item> name: move-backward-word-aux       action-handler: {Event-Handler :focus on-move direction: left extend?: #f word?: #t})
      (<Action-Item> name: extend-backward-word-aux     action-handler: {Event-Handler :focus on-move direction: left extend?: #t word?: #t})
      (<Action-Item> name: move-forward-char-aux        action-handler: {Event-Handler :focus on-move direction: right extend?: #f word?: #f})
      (<Action-Item> name: extend-forward-char-aux      action-handler: {Event-Handler :focus on-move direction: right extend?: #t word?: #f})
      (<Action-Item> name: move-forward-word-aux        action-handler: {Event-Handler :focus on-move direction: right extend?: #f word?: #t})
      (<Action-Item> name: extend-forward-word-aux      action-handler: {Event-Handler :focus on-move direction: right extend?: #t word?: #t})
      (<Action-Item> name: move-upward-aux              action-handler: {Event-Handler :focus on-move direction: up})
      (<Action-Item> name: extend-upward-aux            action-handler: {Event-Handler :focus on-move direction: up extend?: #t})
      (<Action-Item> name: move-downward-aux            action-handler: {Event-Handler :focus on-move direction: down})
      (<Action-Item> name: extend-downward-aux          action-handler: {Event-Handler :focus on-move direction: down extend?: #t})
      (<Action-Item> name: backward-compound-aux        action-handler: {Event-Handler :focus on-backward-compound})
      (<Action-Item> name: extend-backward-compound-aux action-handler: {Event-Handler :focus on-backward-compound extend?: #t})
      (<Action-Item> name: forward-compound-aux         action-handler: {Event-Handler :focus on-forward-compound})
      (<Action-Item> name: extend-forward-compound-aux  action-handler: {Event-Handler :focus on-forward-compound extend?: #t})
      (<Action-Item> name: upward-compound-aux          action-handler: {Event-Handler :focus on-upward-compound})
      (<Action-Item> name: downward-compound-aux        action-handler: {Event-Handler :focus on-downward-compound})
      (<Action-Item> name: delete-char-aux              action-handler: {Event-Handler :focus on-delete-char})
      (<Action-Item> name: delete-word-aux              action-handler: {Event-Handler :focus on-delete-word})
      (<Action-Item> name: home-aux                     action-handler: {Event-Handler :focus on-home})
      (<Action-Item> name: extend-home-aux              action-handler: {Event-Handler :focus on-home extend?: #t})
      (<Action-Item> name: end-aux                      action-handler: {Event-Handler :focus on-end})
      (<Action-Item> name: extend-end-aux               action-handler: {Event-Handler :focus on-end extend?: #t})
      (<Action-Item> name: document-home-aux            action-handler: {Event-Handler :focus on-home document?: #t})
      (<Action-Item> name: document-end-aux             action-handler: {Event-Handler :focus on-end document?: #t})
      (<Action-Item> name: prior-aux                    action-handler: {Event-Handler :focus on-prior})
      (<Action-Item> name: next-aux                     action-handler: {Event-Handler :focus on-next})))))
