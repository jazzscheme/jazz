;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Form Tests
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.validate.suite.Form-Tester jazz


(import (jazz.component)
        (jazz.jml)
        (jazz.validation))


(class Form-Tester extends Tester
  
  
  (form
    (<install> title: "Form"))


  (method (test-form)
    (invoke #f test-fields))
  
  
  ;;;
  ;;;; Form
  ;;;
  
  
  (method (test-fields)
    ;; temp patch because of install-properties
    (new X)
    (let ((form (get-class-form X)))
      (validate (= (get-model form) 'X))
      (validate (= (get-name form) #f))
      (validate (= (get-properties form) (list (category-field X 'a) 2)))
      (validate (= (length (get-children form)) 1)))))


;;;
;;;; Update
;;;


(class F extends Component
  
  
  (property f1 initialize #f accessors explicit)
  
  
  (form
    (<install> f1: 2))
  
  
  (method (get-f1) f1)
  (method (set-f1 value) (set! f1 value)))


(class X extends Component
  
  
  (property x1 initialize #f accessors explicit)
  (property x2 initialize #f accessors explicit)
  
  
  (form
    (<install>          x1: 2 x2: 3
      (<F>     name: fa f1: 3)
      (<F>     name: fb f1: 4)
      (<F>     name: fc f1: 5)))
  
  
  (method (get-x1) x1)
  (method (set-x1 value) (set! x1 value))
  
  
  (method (get-x2) x2)
  (method (set-x2 value) (set! x2 value)))


(class Y extends X
  
  
  (form
    (<install> x2: 5))))
