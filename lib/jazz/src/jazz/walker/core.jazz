;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Core Walker
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library protected jazz.walker.core jazz


;;;
;;;; Walk-Binding
;;;


(class Walk-Binding extends Type)


;;;
;;;; Lexical-Binding
;;;


(class Lexical-Binding extends Walk-Binding
  
  
  (slot name getter generate)
  (slot type getter generate)
  
  
  (method (print output detail)
    (print-unreadable self output
      (function (output)
        (format output "{s}" (get-name))))))


;;;
;;;; Declaration
;;;


(class Declaration extends Lexical-Binding
  
  
  (slot access        getter generate)
  (slot compatibility getter generate)
  (slot attributes    getter generate)
  (slot toplevel      getter generate)
  (slot parent        getter generate)
  (slot locator       getter generate)
  (slot source        getter generate))


;;;
;;;; Declaration-Reference
;;;


(class Declaration-Reference extends Object
  
  
  (slot name        getter generate)
  (slot declaration getter generate))


;;;
;;;; Library-Reference
;;;


(class Library-Reference extends Declaration-Reference)


;;;
;;;; Export-Reference
;;;


(class Export-Reference extends Declaration-Reference
  
  
  (slot library-reference getter generate))


;;;
;;;; Autoload-Reference
;;;


(class Autoload-Reference extends Export-Reference)


;;;
;;;; Module-Declaration
;;;


(class Module-Declaration extends Declaration
  
  
  (slot requires getter generate))


;;;
;;;; Namespace-Declaration
;;;


(class Namespace-Declaration extends Declaration
  
  
  (slot lookups         getter generate)
  (slot children-lookup getter generate)
  (slot children        getter generate)
  (slot body            getter generate))


;;;
;;;; Library-Declaration
;;;


(class Library-Declaration extends Namespace-Declaration
  
  
  (slot dialect-name    getter generate)
  (slot dialect-invoice getter generate)
  (slot requires        getter generate)
  (slot exports         getter generate)
  (slot imports         getter generate)
  (slot proclaims       getter generate)
  (slot literals        getter generate)
  (slot variables       getter generate)
  (slot references      getter generate)
  (slot inclusions      getter generate)
  (slot autoloads       getter generate))


;;;
;;;; Library-Invoice
;;;


(class Library-Invoice extends Object
  
  
  (slot library getter generate)
  (slot phase   getter generate)
  (slot version getter generate)
  (slot only    getter generate)
  (slot except  getter generate)
  (slot prefix  getter generate)
  (slot rename  getter generate))


;;;
;;;; Export-Invoice
;;;


(class Export-Invoice extends Library-Invoice
  
  
  (slot autoload getter generate))


;;;
;;;; Import-Invoice
;;;


(class Import-Invoice extends Library-Invoice)


;;;
;;;; Export
;;;


(class Export-Declaration extends Declaration
  
  
  (slot symbol getter generate))


;;;
;;;; Autoload
;;;


(class Autoload-Declaration extends Declaration
  
  
  (slot library          getter generate)
  (slot exported-library getter generate)
  (slot declaration      getter generate))


;;;
;;;; Macro
;;;


(class Macro-Declaration extends Declaration
  
  
  (slot signature getter generate)
  (slot body      getter generate))


;;;
;;;; Syntax
;;;


(class Syntax-Declaration extends Declaration
  
  
  (slot signature getter generate)
  (slot body      getter generate))


;;;
;;;; C-Type
;;;


(class C-Type-Declaration extends Declaration
  
  
  (slot kind          getter generate)
  (slot expansion     getter generate)
  (slot base-type     getter generate)
  (slot pointer-types getter generate)
  (slot inclusions    getter generate)
  (slot c-to-scheme   getter generate)
  (slot scheme-to-c   getter generate)
  (slot declare       getter generate))


;;;
;;;; C-Definition
;;;


(class C-Definition-Declaration extends Declaration
  
  
  (slot signature       getter generate)
  (slot parameter-types getter generate)
  (slot result-type     getter generate)
  (slot c-name          getter generate)
  (slot scope           getter generate)
  (slot body            getter generate))


;;;
;;;; Signature
;;;


(class Signature extends Object
  
  
  (slot mandatory  getter generate)
  (slot positional getter generate)
  (slot optional   getter generate)
  (slot named      getter generate)
  (slot rest       getter generate))


;;;
;;;; Symbol Binding
;;;


(class Symbol-Binding extends Lexical-Binding)


;;;
;;;; Variable
;;;


(class Variable extends Symbol-Binding
  
  
  (slot reference-count getter generate))


;;;
;;;; NextMethod Variable
;;;


(class NextMethod-Variable extends Variable)


;;;
;;;; Parameter
;;;


(class Parameter extends Variable)


;;;
;;;; Dynamic Parameter
;;;


(class Dynamic-Parameter extends Parameter
  
  
  (slot class getter generate))


;;;
;;;; Optional Parameter
;;;


(class Optional-Parameter extends Parameter
  
  
  (slot default getter generate))


;;;
;;;; Named Parameter
;;;


(class Named-Parameter extends Parameter
  
  
  (slot default getter generate))


;;;
;;;; Rest Parameter
;;;


(class Rest-Parameter extends Parameter)


;;;
;;;; Expression
;;;


(class Expression extends Object
  
  
  (slot type   getter generate)
  (slot source getter generate)))
