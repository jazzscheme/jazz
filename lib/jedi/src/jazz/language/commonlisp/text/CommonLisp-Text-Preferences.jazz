;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; CommonLisp Text Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.language.commonlisp.text.CommonLisp-Text-Preferences jazz


(import (jazz.graphic)
        (jazz.designer)
        (jazz.jml)
        (jazz.language.commonlisp)
        (jazz.language.lisp)
        (jazz.library)
        (jazz.literals)
        (jazz.ui)
        (jazz.utilities))


(class CommonLisp-Text-Preferences extends Lisp-Text-Preferences
  
  
  (form
    (<install>
      title: "CommonLisp Text"
      title-color: {Color name: Dark-Red}
      comment-color: {Color name: Purple}
      expr-comment-color: {Color name: Text-Gray}
      declaration-keyword-color: {Color name: Dark-Blue}
      declaration-color: {Color name: Dark-Green}
      keyword-color: {Color name: Dark-Blue}
      char-color: {Color name: Ochre}
      number-color: {Color name: Ochre}
      boolean-color: {Color name: Ochre}
      string-color: {Color name: Ochre}
      named-string-color: {Color name: Ochre}
      quotation-color: {Color name: Ochre}
      completions: (("be" . "begin")
                    ("co" . "compile")
                    ("de" . "debug")
                    ("deb" . "debugger")
                    ("def" . "define")
                    ("el" . "else")
                    ("la" . "lambda")
                    ("le" . "length")
                    ("li" . "list")
                    ("nu" . "not")
                    ("va" . "values"))))


  ;;;
  ;;;; Designer
  ;;;

  
  (method (get-categorized-properties)
    '(completions title-color comment-color expr-comment-color declaration-color keyword-color translate-keys?))
  
  
  (method (get-row-instance property)
    (case (field-name property)
      ((title-color comment-color expr-comment-color declaration-color keyword-color) (new Color-Row))
      ((completions) (new Completion-List-Row))
      ((translate-keys?) (new Boolean-Row))
      (else (nextmethod property))))))
