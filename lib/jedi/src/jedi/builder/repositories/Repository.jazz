;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Repositories
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jedi.builder.repositories.Repository jazz


(import (jazz.designer)
        (jazz.library)
        (jedi))


(class Repository extends Component
  
  
  (property title     initialize {} accessors generate)
  (property directory initialize {} accessors generate)
  
  
  (method override (print printer readably)
    (print-unreadable self printer
      (lambda (printer)
        (format printer "{a}"
                title))))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Repository-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer))


(class Repository-Descriptor extends Component-Descriptor
  
  
  (method override (class-image class)
    {Image-Resource "CompareManager"})
  
  
  (method override (class-property-presentation class property)
    (case (field-name property)
      ((title) "Title")
      ((directory) "Directory")
      (else (nextmethod class property))))
  
  
  (method override (component-presentation-property? component property)
    (memq? (field-name property) '(title)))
  
  
  (method override (component-get-presentation component)
    (get-title~ component))
  
  
  (method override (component-set-presentation component designer presentation)
    (set-property~ designer component title: presentation))
  
  
  (method override (component-addable-class? component class)
    (or (subtype? class Project-File)
        (subtype? class Project-Group)))
  
  
  (method override (component-get-addable-classes component)
    (list
      Project-Group))
    
  
  (method override (class-get-domain class property)
    (case (field-name property)
      ((directory) (new Directory-Row))
      (else (nextmethod class property))))
  
  
  (method override (component-get-categorized-properties component)
    '(directory)))))
