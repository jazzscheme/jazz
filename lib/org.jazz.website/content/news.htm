<html>

<head>
  <link href="css/master.css" rel="stylesheet" type="text/css"/>
  <title>News</title>
</head>

<body>
<div id="page">
  <h1 id="title">JazzScheme</h1>
  <div id="sectionnav">
    <a class="section" href="index.htm">Home</a>
    <a class="section" href="news.htm">
      <b>News</b>
    </a>
    <a class="section" href="features.htm">Features</a>
    <a class="section" href="screenshots.htm">Screenshots</a>
    <a class="section" href="documentation.htm">Documentation</a>
    <a class="section" href="development.htm">Development</a>
    <a class="section" href="download.htm">Download</a>
  </div>
  <div id="content">
    <div>
      <a name="#f"></a>
      <h3>2007-11-11 - Progress Update</h3>
A lot has happened since the last news update a month 1/2 ago. Let me try and summarize the most important developments :      <span>
        <p></p>
        <b>Performance</b>
        <p></p>
As I was saying in the last message, performance was very critical as this stage as it was so far behind the old Jazz as to make the new one unusable. The benchmark I have been using is editing Window.jazz a big file with lots of syntax coloring necessitating a lot of sexpr navigation. As every Lisp related tool must be able to navigate sexpr in text, those operations are so critical that in the old Jazz they where handcoded directly in C. So keep in mind that in the benchmark results, it is handcoded C code vs Jazz code generating Gambit code.        <p></p>
First timing was :        <p></p>
Old Jazz : 0.3s        <br/>
New Jazz : 28.5s        <p></p>
so 95x slower.        <p></p>
We are now at 0.17s so 167x faster than the first version and 60% faster than the old handcoded C code. Note that there is still a lot of room to make this much faster but now that performance is acceptable we are going to put performance aside for a while in favor of other priorities.         <p></p>
Thanks to Guillaume Germain for his wonderful statprof statistical profiler which really helped in finding the hot spots to optimize.      </span>
      <span>
        <p></p>
        <b>Type System</b>
        <p></p>
Jazz now supports a fairly complete and completely optional type system.        <p></p>
Every part of a Scheme program can now be type annotated. Note that usually, just annotating the type of the input parameters of a function will be sufficient, as the new type system will use type inference whenever possible to deduce the type of expressions.         <p></p>
To support the new type system, a new experimental specializer / template system is also available. Any comments / suggestions on this part are most welcome as it is unclear what is the best approach: templates a la c++, generics a la java, parameterized types, ...         <p></p>
Note that Jazz as a whole doesn't use the new type system a lot. I'd say that around 30 files out of Jazz's 3000+ files use the new type system. Annotating only those 30 something critical modules resulted in huge performance improvements. Also note that the type annotations are purely optional and removing any of them will not change any code semantics.       </span>
      <span>
        <p></p>
        <b>IDE</b>
        <p></p>
The IDE while still missing a lot of functionality has become functional enough for it to become usable. I now try and use it as my main development IDE over the old Jazz's IDE.        <p></p>
Mainly missing from the old Jazz IDE is debugging support. We are still relying on the Gambit console. Note that this is really not painful at all as the Jazz generated Scheme code is so close to the original code that reading a Gambit stack of Jazz code is almost identical as what a pure Jazz debugger stack would look like.       </span>
      <span>
        <p></p>
        <b>Scheme Compliance</b>
        <p></p>
The old Jazz, although 'Scheme inspired' was never a full Scheme implementation.        <p></p>
Everything that Jazz was redefining from Scheme was rethought / renamed so that now I am very happy to report that Jazz is now a full R5RS Scheme (to be more precise: as R5RS as the underlying Scheme you are using is) system where any R5RS Scheme code can be run as is inside a Jazz module or library.         <p></p>
If pure Scheme is used inside a Jazz module or library, the resulting code will have no overhead and will be the exact same code. The Jazz library system will just validate at compile time that every symbol referenced exists in the underlying Scheme system and report any unresolved symbols.       </span>
      <span>
        <p></p>
        <b>Multi-platform / X11</b>
        <p></p>
The Jedi IDE while not functional, is now booting completely under X11! What was astonishing was that nothing was working, and a couple changes later, Jeremie had a version where *everything* was rendering perfectly! The port of the graphical code to Cairo really payed off there. I am very happy about this new development, especially as Jeremie was able to pull this off part time while studying for his master's degree. Gratz!         <p></p>
Public beta release is still planned for very early 2008.      </span>
    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-09-26 - Jedi running under the new Gambit based kernel</h3>
I am very happy to report that Jedi, the Jazz IDE is now running under the new Gambit based kernel. Lots of features where temporarely commented out but basically most of the language and the library has now been ported to the new kernel.       <p></p>
The port of 100+ C++ classes to Gambit was very demanding at first but now the development has really become a joy. Even though the start was difficult, developing the new kernel on Gambit's extremely robust, fast and flexible architecture has now surpassed all my expentations in development speed and quality of code that could be developed with it. Cheers to Gambit!       <p></p>
Next steps are:       <ul>
        <li>Complete the port</li>
        <li>Optimize the new kernel to make it as fast as Gambit can be (that's fast!)</li>
        <li>Port the library and IDE to Mac and X11 (this should be fairly fast at this point)</li>
      </ul>
I expect a first beta, beginning of 2008.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-08-08 - Presentation at the lispvan</h3>
Guillaume Cartier gave a presentation of JazzScheme at the Vancouver Lisp Users Group. See       <a href="http://bc.tech.coop/blog/070810.html">Bill Clementson's Blog</a>
 for a nice summary.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-05-28 - JazzScheme 1.0b6 available</h3>
This version is a candidate for the public release. Only bug fixes are planned until the public release. See the       <a href="new.htm">What's New</a>
 section for details.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-05-14 - Work on porting JazzScheme to X11 and Macintosh started</h3>
Active work has started on porting the JazzScheme platform to other operating systems. Support is planned for the following platforms: Windows, X11 and Macintosh.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-05-03 - JazzScheme 1.0b5 available</h3>
This version adds a lot of support for Scheme code edition which is now almost on par with Jazz code. See the       <a href="new.htm">What's New</a>
 section for details.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-04-23 - JazzScheme public beta released</h3>
First publicly available beta release of JazzScheme.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-01-12 - JazzScheme ported to Visual Studio 2005</h3>
JazzScheme was successfully ported to Visual Studio 2005. This is a key milestone for Jazz, as with Microsoft's release of Visual Studio 2005 Express as a free downloadable package that can be used to build C++ applications with no licensing restrictions, Jazz can now be used as a 100% free development platform for building Windows applications.    </div>
    <div>
      <a name="#f"></a>
      <h3>2006-12-13 - Presentation at the MSLUG</h3>
Guillaume Cartier gave a presentation of JazzScheme at the Montreal Lisp/Scheme User Group. See       <a href="http://schemeway.dyndns.org/mslug">http://schemeway.dyndns.org/mslug</a>
 for details.    </div>
    <div>
      <a name="#f"></a>
      <h3>2006-12-12 - Montreal company to use JazzScheme</h3>
      <a href="http://www.isaix.com">IsaiX Technologies</a>
 a high tech Montreal company, has decided to use JazzScheme for one of its top projects. Using JazzScheme, they plan on developing a real time scheduling engine for       <a href="http://www.chyma.net">Chyma</a>
 their Health Care Industry product.    </div>
    <div>
      <a name="#f"></a>
      <h3>2006-11-22 - Website goes live</h3>
A first version of the JazzScheme website is now live!    </div>
    <div id="footer">
      <p>Copyright &copy; 1996-2007 Guillaume Cartier</p>
    </div>
  </div>
</div>
</body>

</html>
