<html>

<head>
  <link href="css/master.css" rel="stylesheet" type="text/css"/>
  <title>News</title>
</head>

<body>
<div id="page">
  <h1 id="title">JazzScheme</h1>
  <div id="sectionnav">
    <a class="section" href="index.htm">Home</a>
    <a class="section" href="news.htm">
      <b>News</b>
    </a>
    <a class="section" href="features.htm">Features</a>
    <a class="section" href="screenshots.htm">Screenshots</a>
    <a class="section" href="documentation.htm">Documentation</a>
    <a class="section" href="development.htm">Development</a>
    <a class="section" href="download.htm">Download</a>
  </div>
  <div id="content">
    <div>
      <a name="#f"></a>
      <h3>2008-11-06 - X11 Port Update</h3>
      <span>
        <p></p>
        <b>X11</b>
        <p></p>
I am very happy to report that X11 has progressed by leaps and bounds in the last weeks. A big structural change to the windowing system where Jazz now manages everything inside the toplevel windows fixed nearly all the X11 problems. This change has also unified profoundly the windowing architecture of all platforms so that all platforms should now evolve much more uniformly towards stability and completness.         <p></p>
Personnaly, I have now worked exclusively on X11 for the last 2 weeks and it felt almost as working under the Windows version. The only things I missed where drag & drop (we are looking into it) and faster scrolling (we are looking into using XCopyArea to implement fast scrolling on X11). There are other shortcomings like dialogs not beeing modal at the moment so that you can crash the system by beeing a smart ... and breaking the modality but those are no show-stoppers to use the system as-is imo.       </span>
      <p></p>
      <span>
        <p></p>
        <b>Debugging</b>
        <p></p>
The other big change is that after beeing unsure for the last 2 years about what was the right approach to having a debugger fully support the Jazz language, between :        <p></p>
        <ul>
          <li>1) writting my own Jazz interpreter that fully understands the Jazz language and</li>
          <li>2) fully integrating the Jazz macros with Gambit</li>
        </ul>
I have finally decided after discussions with Marc Feeley that 2) was the right approach and so I rewrote all Jazz macros as ##define-syntax and added full Gambit source code annotations so that now every Gambit debugging feature works seamlessly with Jazz code like :        <p></p>
        <ul>
          <li>stack backtrace with for every frame precise highlighting of the call site</li>
          <li>statprof statisticall profiler is now integrated with Jedi. </li>
          <li>...</li>
        </ul>
      </span>
    </div>
    <div>
      <a name="#f"></a>
      <h3>2008-09-26 - Public Open-Source Release Update</h3>
Now that our first JazzScheme contract is over, here is an update on where we stand.       <p></p>
First of all, I am very happy to say that the contract was a complete success. It proved that developing a business application in the new Gambit based JazzScheme is a viable solution. I must say that development was a charm and on top, the client loves the result!       <p></p>
For some other very good news, during the contract, to support development we added many missing features to the Jazz platform :       <p></p>
      <ul>
        <li>Kernel module and build system is now language agnostic</li>
        <li>Project management through a visual workbench</li>
        <li>GUI remote debugger</li>
        <li>Programmatic restarts</li>
        <li>Full unicode support throughout the IDE</li>
        <li>Printing support on Windows</li>
        <li>Windows COM support</li>
        <li>A new crash handler routine on Windows will dump a Gambit stack even on fatal crashes</li>
      </ul>
      <p></p>
      <span>
        <p></p>
        <b>Public Open-Source Release</b>
        <p></p>
With those new features added, we are very close to a public open-source release of the JazzScheme platform.         <p></p>
The key feature that still needs work is X11. Unfortunately, the student who did the port now has less available time to spend on the project as his master's degree is taking a lot of his resources. We are still both working on X11 but it may take a while to complete.         <p></p>
Note that the port was advanced enough that the whole IDE was 90% functional. I would guess the work remaining to be around 2-3 weeks for someone both knowledgeable in X11 and in Jazz. Personally I do not have the time required to delve into X11 but if anyone with good X11 knowledge wants to team up, it could be a fun project and accelerate the completion of the X11 port. Just let me know.       </span>
      <p></p>
      <span>
        <p></p>
        <b>In Development</b>
        <p></p>
        <ul>
          <li>Jedi as a Gambit IDE with full remote debugging</li>
          <li>Emacs inspired bindings for basic commands (almost complete)</li>
        </ul>
      </span>
    </div>
    <div>
      <a name="#f"></a>
      <h3>2008-04-30 - Contract awarded to use the new Gambit based JazzScheme</h3>
I am very happy to announce that MetaScoop was awarded a contract to implement a full business application using the newly developed Gambit based JazzScheme.      <p></p>
Note that we will still be developing JazzScheme actively but with focus on more 'business' aspects like :      <ul>
        <li>Robustness and Performance</li>
        <li>Full database support on Windows using ADO</li>
        <li>Printing support on Windows</li>
        <li>Localization</li>
        <li>Distribution of built code</li>
      </ul>
      <p></p>
We expect work on the open-source release to resume in about 2 months where at this point finishing X11 will be pretty much all that remains.    </div>
    <div>
      <a name="#f"></a>
      <h3>2008-04-30 - Progress update</h3>
Here's a summary of the most important developments in the last 2 months :      <p></p>
      <span>
        <p></p>
        <b>Build system</b>
        <p></p>
        <ul>
          <li>Now using pkg-config to simplify build dependencies processing</li>
          <li>Added support for binary packages for a complete distribution solution</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Gambit</b>
        <p></p>
Support for the following Gambit features was added :        <ul>
          <li>TCP/IP</li>
          <li>Threading</li>
          <li>U8 vectors</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Language</b>
        <p></p>
        <ul>
          <li>Added branch prediction to the type system for nillable types and the 'or' special form</li>
          <li>Implemented a new 'meta' keyword that greatly simplifies metaclass programming</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Multi-platform</b>
        <p></p>
        <ul>
          <li>Many improvements on X11</li>
          <li>Carbon work started up to the point where the Jedi IDE now fully loads</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Web Server</b>
        <p></p>
Ported the Web server / framework to the new Jazz. I must say that Gambit's TCP/IP support, threads, ports and u8vectors made this port a pure pleasure.        <p></p>
Two new tutorials where developed to demonstrate the new web framework :        <ul>
          <li>Gomoku</li>
          <li>Connect-4</li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Various</b>
        <p></p>
        <ul>
          <li>Views now support arbitrary scaling</li>
          <li>Added printing support on windows</li>
          <li>Ported many parts of the visual GUI designer</li>
        </ul>
      </span>
    </div>
    <div>
      <a name="#f"></a>
      <h3>2008-02-04 - New build system fully implemented in Gambit</h3>
Here's a summary of the most important developments since the last update (apart from a very nice Christmas vacation with my son :-) :      <span>
        <p></p>
        <b>Build system</b>
        <p></p>
A new build system was developed to automate Jazz building and deployment. It follows the usual configure / make methodology and is fully implemented in Gambit making it highly portable. See the INSTALL file at the root of the distribution for details.         <p></p>
        <ul>
          <li><span>The build will now create a 'jazz' executable file that encapsulates the Jazz kernel. Use this executable to load Jazz code, launch Jazz applications, ...</span></li>
          <li><span>Under Unix, we are now using pkg-config to simplify building library depencies. </span></li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Package system</b>
        <p></p>
A new package system was developed to manage resources uniformly accross the development and deployment stages of a project.         <p></p>
        <ul>
          <li>With it, Jazz applications can be deployed as compiled binaries, source files or as a mix of both. </li>
          <li>Jazz will use a sha-1 digest of the source file to automatically determine if a file should be loaded interpreted or compiled. </li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>Generic methods</b>
        <p></p>
Jazz now implements generic dispatch on an arbitrary number of parameters.      </span>
      <span>
        <p></p>
        <b>Port fixes</b>
        <p></p>
        <ul>
          <li>View debugging tools (F8) are now fully functional under Windows. </li>
          <li>Groupware compare directories and compare files. </li>
          <li>Login dialog. </li>
          <li>Users management. </li>
        </ul>
      </span>
      <span>
        <p></p>
        <b>X11</b>
        <p></p>
A lot of progress was made on the X11 port which is now very close to beeing usable.       </span>
      <span>
        <p></p>
        <b>Time</b>
        <p></p>
Ported the very nice Time Data Types and Procedures SRFI-19 to Jazz.       </span>
      <span>
        <p></p>
        <b>Various</b>
        <p></p>
        <ul>
          <li>Many Gambit specific improvements related to performance and space. </li>
          <li>All jazz modules have now been ported to the new kernel at least enough to load correctly. </li>
        </ul>
      </span>
    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-11-11 - New Gambit based kernel now faster than the old C++ kernel!</h3>
A lot has happened since the last news update a month 1/2 ago. Let me try and summarize the most important developments :      <span>
        <p></p>
        <b>Performance</b>
        <p></p>
As I was saying in the last message, performance was very critical as this stage as it was so far behind the old Jazz as to make the new one unusable. The benchmark I have been using is editing Window.jazz a big file with lots of syntax coloring necessitating a lot of sexpr navigation. As every Lisp related tool must be able to navigate sexpr in text, those operations are so critical that in the old Jazz they where handcoded directly in C. So keep in mind that in the benchmark results, it is handcoded C code vs Jazz code generating Gambit code.        <p></p>
First timing was :        <p></p>
Old Jazz : 0.3s        <br/>
New Jazz : 28.5s        <p></p>
so 95x slower.        <p></p>
We are now at 0.17s so 167x faster than the first version and 60% faster than the old handcoded C code. Note that there is still a lot of room to make this much faster but now that performance is acceptable we are going to put performance aside for a while in favor of other priorities.         <p></p>
Thanks to Guillaume Germain for his wonderful statprof statistical profiler which really helped in finding the hot spots to optimize.      </span>
      <span>
        <p></p>
        <b>Type System</b>
        <p></p>
Jazz now supports a fairly complete and completely optional type system.        <p></p>
Every part of a Scheme program can now be type annotated. Note that usually, just annotating the type of the input parameters of a function will be sufficient, as the new type system will use type inference whenever possible to deduce the type of expressions.         <p></p>
To support the new type system, a new experimental specializer / template system is also available. Any comments / suggestions on this part are most welcome as it is unclear what is the best approach: templates a la c++, generics a la java, parameterized types, ...         <p></p>
Note that Jazz as a whole doesn't use the new type system a lot. I'd say that around 30 files out of Jazz's 3000+ files use the new type system. Annotating only those 30 something critical modules resulted in huge performance improvements. Also note that the type annotations are purely optional and removing any of them will not change any code semantics.       </span>
      <span>
        <p></p>
        <b>IDE</b>
        <p></p>
The IDE while still missing a lot of functionality has become functional enough for it to become usable. I now try and use it as my main development IDE over the old Jazz's IDE.        <p></p>
Mainly missing from the old Jazz IDE is debugging support. We are still relying on the Gambit console. Note that this is really not painful at all as the Jazz generated Scheme code is so close to the original code that reading a Gambit stack of Jazz code is almost identical as what a pure Jazz debugger stack would look like.       </span>
      <span>
        <p></p>
        <b>Scheme Compliance</b>
        <p></p>
The old Jazz, although 'Scheme inspired' was never a full Scheme implementation.        <p></p>
Everything that Jazz was redefining from Scheme was rethought / renamed so that now I am very happy to report that Jazz is now a full R5RS Scheme (to be more precise: as R5RS as the underlying Scheme you are using is) system where any R5RS Scheme code can be run as is inside a Jazz module or library.         <p></p>
If pure Scheme is used inside a Jazz module or library, the resulting code will have no overhead and will be the exact same code. The Jazz library system will just validate at compile time that every symbol referenced exists in the underlying Scheme system and report any unresolved symbols.       </span>
      <span>
        <p></p>
        <b>Multi-platform / X11</b>
        <p></p>
The Jedi IDE while not functional, is now booting completely under X11! What was astonishing was that nothing was working, and a couple changes later, Jeremie had a version where *everything* was rendering perfectly! The port of the graphical code to Cairo really payed off there. I am very happy about this new development, especially as Jeremie was able to pull this off part time while studying for his master's degree. Gratz!         <p></p>
Public beta release is still planned for very early 2008.      </span>
    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-09-26 - Jedi running under the new Gambit based kernel</h3>
I am very happy to report that Jedi, the Jazz IDE is now running under the new Gambit based kernel. Lots of features where temporarely commented out but basically most of the language and the library has now been ported to the new kernel.       <p></p>
The port of 100+ C++ classes to Gambit was very demanding at first but now the development has really become a joy. Even though the start was difficult, developing the new kernel on Gambit's extremely robust, fast and flexible architecture has now surpassed all my expentations in development speed and quality of code that could be developed with it. Cheers to Gambit!       <p></p>
Next steps are:       <ul>
        <li>Complete the port</li>
        <li>Optimize the new kernel to make it as fast as Gambit can be (that's fast!)</li>
        <li>Port the library and IDE to Mac and X11 (this should be fairly fast at this point)</li>
      </ul>
I expect a first beta, beginning of 2008.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-08-08 - Presentation at the lispvan</h3>
Guillaume Cartier gave a presentation of JazzScheme at the Vancouver Lisp Users Group. See       <a href="http://bc.tech.coop/blog/070810.html">Bill Clementson's Blog</a>
 for a nice summary.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-05-28 - JazzScheme 1.0b6 available</h3>
This version is a candidate for the public release. Only bug fixes are planned until the public release. See the       <a href="new.htm">What's New</a>
 section for details.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-05-14 - Work on porting JazzScheme to X11 and Macintosh started</h3>
Active work has started on porting the JazzScheme platform to other operating systems. Support is planned for the following platforms: Windows, X11 and Macintosh.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-05-03 - JazzScheme 1.0b5 available</h3>
This version adds a lot of support for Scheme code edition which is now almost on par with Jazz code. See the       <a href="new.htm">What's New</a>
 section for details.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-04-23 - JazzScheme public beta released</h3>
First publicly available beta release of JazzScheme.    </div>
    <div>
      <a name="#f"></a>
      <h3>2007-01-12 - JazzScheme ported to Visual Studio 2005</h3>
JazzScheme was successfully ported to Visual Studio 2005. This is a key milestone for Jazz, as with Microsoft's release of Visual Studio 2005 Express as a free downloadable package that can be used to build C++ applications with no licensing restrictions, Jazz can now be used as a 100% free development platform for building Windows applications.    </div>
    <div>
      <a name="#f"></a>
      <h3>2006-12-13 - Presentation at the MSLUG</h3>
Guillaume Cartier gave a presentation of JazzScheme at the Montreal Lisp/Scheme User Group. See       <a href="http://schemeway.dyndns.org/mslug">http://schemeway.dyndns.org/mslug</a>
 for details.    </div>
    <div>
      <a name="#f"></a>
      <h3>2006-12-12 - Montreal company to use JazzScheme</h3>
      <a href="http://www.isaix.com">IsaiX Technologies</a>
 a high tech Montreal company, has decided to use JazzScheme for one of its top projects. Using JazzScheme, they plan on developing a real time scheduling engine for       <a href="http://www.chyma.net">Chyma</a>
 their Health Care Industry product.    </div>
    <div>
      <a name="#f"></a>
      <h3>2006-11-22 - Website goes live</h3>
A first version of the JazzScheme website is now live!    </div>
    <div id="footer">
      <p>Copyright &copy; 1996-2008 Guillaume Cartier</p>
    </div>
  </div>
</div>
</body>

</html>
