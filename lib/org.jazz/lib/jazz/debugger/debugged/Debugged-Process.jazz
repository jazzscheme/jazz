;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Debugged Process
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.debugger.debugged.Debugged-Process jazz


(import (jazz.debugger))


(class Debugged-Process extends Debugged-Object
  
  
  ;;;
  ;;;; Equality
  ;;;
  
  
  (method (same? debugged)
    (and (is? debugged Debugged-Process)
         (process=?~ debugger object (get-object~ debugged))))
  
  
  ;;;
  ;;;; Delegation
  ;;;
  
  
  (method public (live?)
    (process-live?~ debugger object))
  
  
  (method public (get-name)
    (process-name~ debugger object))
  
  
  (method public (get-icon)
    (process-icon~ debugger object))
  
  
  (method public (get-threads)
    (process-threads~ debugger object))
  
  
  (method public (present)
    (present-process~ debugger object))
  
  
  (method public (break-thread thread)
    (break-thread~ debugger object thread))
  
  
  (method public (restart-stop stop)
    (restart-stop~ debugger object stop))
  
  
  (method public (continue-stop stop)
    (continue-stop~ debugger object stop))
  
  
  (method public (eval-expressions expressions)
    (eval-expressions~ debugger object expressions))
  
  
  (method public (evaluate-expressions expressions)
    (evaluate-expressions~ debugger object expressions))
  
  
  (method public (exit)
    (process-exit~ debugger object))))
