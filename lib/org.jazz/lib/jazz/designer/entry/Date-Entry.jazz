;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Date Entry
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.designer.entry.Date-Entry jazz


(import (jazz.designer)
        (jazz.jml)
        (jazz.library)
        (jazz.literals)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.view)
        (jazz.utilities)
        (time))


(class Date-Entry extends Text-Entry
  
  
  (form
    (<install>
      @wait (<Action-Icon>           name: action  size: {Dimension 22 22} image-name: {Bitmap-Resource "PageDate"} tooltip-text: "Choisir la date" action-handler: {Event-Handler :form on-choose-date})))
  
  
  ;;;
  ;;;; Validate
  ;;;
  
  
  (method (validate domain)
    (or (nextmethod domain)
        (let ((content (get-string-content~ (locate 'text))))
          (if (or (empty-string? content)
                  (and (= (string-length content) 10)
                       (numeric? (substring content 0 4))
                       (eqv? (string-ref content 4) #\/)
                       (numeric? (substring content 5 7))
                       (eqv? (string-ref content 7) #\/)
                       (numeric? (substring content 8 10))))
              {}
            (new Property-Violation message: (new Locales english: "Date format is yyyy/mm/dd" french: "Le format de date est yyyy/mm/dd"))))))
  
  
  ;;;
  ;;;; Value
  ;;;
  
  
  (method (get-value)
    (let ((content (get-string-content~ (locate 'text))))
      (if (or (empty-string? content) (string=? content "{}"))
          nil
        (parse-date-day content))))
  
  
  (method (set-value value)
    (set-string-content~ (locate 'text)
      (if (nil? value)
          "{}"
        (present-date-day value))))
    
  
  ;;;
  ;;;; Layout
  ;;;

  
  (method (layout)
    (let ((size (get-size)))
      (set-size~ (locate 'border) size @wait (- size {Dimension 24 0}))
      @wait (set-position~ (locate 'action) (new Point (- (get-width~ size) 22) 0))))
    
  
  ;;;
  ;;;; Events
  ;;;

  
  (method (on-choose-date evt)
    (set-value (get-modal Calendar-Dialog initial-date: (get-value)))
    (set-modified? #t))))
