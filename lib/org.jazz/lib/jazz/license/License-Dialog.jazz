;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; License Dialog
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.license.License-Dialog jazz


(import (jazz.jml)
        (jazz.license)
        (jazz.library)
        (jazz.literals)
        (jazz.ui)
        (jazz.utilities))


(class License-Dialog extends View


  (form
    (<install>                                          size: {Dimension 400 206}
      (<Label-View>                name: title          title: "Welcome to the MetaModeler" position: {Point 10 9} size: {Dimension 350 16} font: {Font name: Label-Bold})
      (<Label-View>                name: description    title: "Please enter your name and license number" position: {Point 30 27} size: {Dimension 350 16} font: {Font name: Default-GUI})
      (<Group-Box>                 name: content        position: {Point -2 44} size: {Dimension 404 116}
        (<content~>
          (<Label-View>            name: name-label     title: "Name:" position: {Point 58 29} size: {Dimension 33 16} font: {Font name: Default-GUI})
          (<Border-View>           name: name-border    position: {Point 151 27} size: {Dimension 196 19} border-type: edge style: entry
            (<Scroller-View>                            hscroll?: #f vscroll?: #f
              (<!>                 name: content        layout-type: fill
                (<Plain-Text-View> name: name           left-padding: 2 top-padding: 2 accepts-returns?: #f default-style: {Text-Style name: Default font: {Font name: Ansi-Var}} return-press-handler: {Event-Handler :form on-return-press} escape-press-handler: {Event-Handler :form on-escape-press}))))
          (<Label-View>            name: license-label  title: "License Number:" position: {Point 58 54} size: {Dimension 82 16} font: {Font name: Default-GUI})
          (<Border-View>           name: license-border position: {Point 151 52} size: {Dimension 196 19} border-type: edge style: entry
            (<Scroller-View>                            hscroll?: #f vscroll?: #f
              (<!>                 name: content        layout-type: fill
                (<Plain-Text-View> name: license        left-padding: 2 top-padding: 2 accepts-returns?: #f default-style: {Text-Style name: Default font: {Font name: Ansi-Var}} return-press-handler: {Event-Handler :form on-return-press} escape-press-handler: {Event-Handler :form on-escape-press}))))))
      (<Push-Button>               name: ok             title: "OK" position: {Point 220 172} size: {Dimension 80 24} default?: #t action-handler: {Event-Handler :host on-ok})
      (<Push-Button>               name: cancel         title: "Cancel" position: {Point 310 172} size: {Dimension 80 24} action-handler: {Event-Handler :host on-cancel})))
  
  
  (method (install-in-host host)
    (nextmethod host)
    (acquire-focus~ (locate 'name)))

  
  ;;;
  ;;;; Host
  ;;;
  
  
  (method meta (host-title)
    "License")
  
  
  (method meta (host-position)
    {Point 450 300})
  
  
  (method meta (host-size)
    {Dimension 302 120})
  

  ;;;
  ;;;; Modal
  ;;;
  
  
  (method (get-modal-result)
    (values (get-string-content~ (locate 'name))
            (get-string-content~ (locate 'license))))
  

  ;;;
  ;;;; Tab
  ;;;
  
  
  (method (get-tab-stops)
    (list
      (locate 'name)
      (locate 'license)))
  

  ;;;
  ;;;; Events
  ;;;
  
  
  ;; Should really be generic in the Dialog class
  (method (on-double-click evt)
    (let ((dialog (get-host)))
      (end-modal~ dialog (get-modal-result~ dialog))))
  
  
  ;; Should really be generic in the Dialog class
  (method (on-return-press evt)
    (let ((dialog (get-host)))
      (end-modal~ dialog (get-modal-result~ dialog))))
  
  
  ;; Should really be generic in the Dialog class
  (method (on-escape-press evt)
    (let ((dialog (get-host)))
      (cancel-modal~ dialog)))
  

  ;;;
  ;;;; Drawing
  ;;;
  
  
  (definition Header-Color
    (new Color red: 120 green: 120 blue: 255))

  
  (method (draw surface context update lh lv)
    (let ((size (get-size)))
      (gradient-fill~ surface (new Rect 0 0 (get-width~ size) 50) {Color name: White} Header-Color)))))
