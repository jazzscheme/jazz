;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; HTML Generator
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.network.http.HTML-Generator jazz


(import (jazz.library)
        (jazz.network)
        (jazz.utilities))


(class HTML-Generator extends Object
  
  
  (slot directory)
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-directory)
    directory)
  
  
  ;;;
  ;;;; Generate
  ;;;
  
  
  (method public virtual (generate-page? resource pages)
    )
  
  
  (method public virtual (setup-directory request resource pages)
    (set! directory (generated-directory request resource pages)))
  
  
  (method public virtual (generated-directory request resource pages)
    )
  
  
  (method public virtual (generated-page request root-directory resource pages)
    (let* ((name (generated-pagename request resource pages))
           (file (new-file~ (new-directory~ root-directory directory) name)))
      file))
  
  
  (method public virtual (generated-pagename request resource pages (include-action?: include-action? #t))
    (let* ((action (essay include-action? (get-parameter~ request "Action" error?: #f)))
           (base (substitute #\slash #\_ resource))
           (name (format "{a}{a}.html" base (either action ""))))
      name))
  
  
  ;;;
  ;;;; Aliases
  ;;;
  
  
  (method public virtual (get-alias name)
    (error "Unknown alias: {s}" name))))
