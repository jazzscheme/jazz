;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Windows GDI Definitions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.platform.windows.WinGDI jazz


(import (jazz.platform.windows.WinTypes)
        (jazz.platform.windows.WinBase)
        (jazz.platform.windows.WinDef)
        (jazz.library))


;;;
;;;; Constants
;;;


(constant ANSI_CHARSET                0)
(constant DEFAULT_CHARSET             1)
(constant SYMBOL_CHARSET              2)

(constant TRANSPARENT                 1)
(constant OPAQUE                      2)

(constant RGN_AND                     1)
(constant RGN_OR                      2)
(constant RGN_XOR                     3)
(constant RGN_DIFF                    4)
(constant RGN_COPY                    5)
(constant RGN_MIN                     RGN_AND)
(constant RGN_MAX                     RGN_COPY)

(constant OUT_DEFAULT_PRECIS          0)
(constant OUT_STRING_PRECIS           1)
(constant OUT_CHARACTER_PRECIS        2)
(constant OUT_STROKE_PRECIS           3)
(constant OUT_TT_PRECIS               4)
(constant OUT_DEVICE_PRECIS           5)
(constant OUT_RASTER_PRECIS           6)
(constant OUT_TT_ONLY_PRECIS          7)
(constant OUT_OUTLINE_PRECIS          8)
(constant OUT_SCREEN_OUTLINE_PRECIS   9)

(constant CLIP_DEFAULT_PRECIS         0)
(constant CLIP_CHARACTER_PRECIS       1)
(constant CLIP_STROKE_PRECIS          2)

(constant DEFAULT_QUALITY             0)
(constant DRAFT_QUALITY               1)
(constant PROOF_QUALITY               2)
(constant NONANTIALIASED_QUALITY      3)
(constant ANTIALIASED_QUALITY         4)

(constant DEFAULT_PITCH               0)
(constant FIXED_PITCH                 1)
(constant VARIABLE_PITCH              2)
(constant MONO_FONT                   8)

(constant GM_COMPATIBLE               1)
(constant GM_ADVANCED                 2)

(constant MM_TEXT                     1)
(constant MM_LOMETRIC                 2)
(constant MM_HIMETRIC                 3)
(constant MM_LOENGLISH                4)
(constant MM_HIENGLISH                5)
(constant MM_TWIPS                    6)
(constant MM_ISOTROPIC                7)
(constant MM_ANISOTROPIC              8)

(constant BS_SOLID                    0)
(constant BS_NULL                     1)
(constant BS_HOLLOW                   BS_NULL)
(constant BS_HATCHED                  2)
(constant BS_PATTERN                  3)
(constant BS_INDEXED                  4)
(constant BS_DIBPATTERN               5)
(constant BS_DIBPATTERNPT             6)
(constant BS_PATTERN8X8               7)
(constant BS_DIBPATTERN8X8            8)
(constant BS_MONOPATTERN              9)

(constant HS_HORIZONTAL               0)
(constant HS_VERTICAL                 1)
(constant HS_FDIAGONAL                2)
(constant HS_BDIAGONAL                3)
(constant HS_CROSS                    4)
(constant HS_DIAGCROSS                5)

(constant PS_SOLID                    0)
(constant PS_DASH                     1)
(constant PS_DOT                      2)
(constant PS_DASHDOT                  3)
(constant PS_DASHDOTDOT               4)
(constant PS_NULL                     5)
(constant PS_INSIDEFRAME              6)
(constant PS_USERSTYLE                7)
(constant PS_ALTERNATE                8)

(constant PS_COSMETIC                 #x00000000)
(constant PS_GEOMETRIC                #x00010000)

(constant WHITE_BRUSH                 0)
(constant LTGRAY_BRUSH                1)
(constant GRAY_BRUSH                  2)
(constant DKGRAY_BRUSH                3)
(constant BLACK_BRUSH                 4)
(constant NULL_BRUSH                  5)
(constant HOLLOW_BRUSH                NULL_BRUSH)
(constant WHITE_PEN                   6)
(constant BLACK_PEN                   7)
(constant NULL_PEN                    8)
(constant OEM_FIXED_FONT              10)
(constant ANSI_FIXED_FONT             11)
(constant ANSI_VAR_FONT               12)
(constant SYSTEM_FONT                 13)
(constant DEVICE_DEFAULT_FONT         14)
(constant DEFAULT_PALETTE             15)
(constant SYSTEM_FIXED_FONT           16)
(constant DEFAULT_GUI_FONT            17)

(constant FW_DONTCARE                 0)
(constant FW_THIN                     100)
(constant FW_EXTRALIGHT               200)
(constant FW_LIGHT                    300)
(constant FW_NORMAL                   400)
(constant FW_MEDIUM                   500)
(constant FW_SEMIBOLD                 600)
(constant FW_BOLD                     700)
(constant FW_EXTRABOLD                800)
(constant FW_HEAVY                    900)
(constant FW_ULTRALIGHT               FW_EXTRALIGHT)
(constant FW_REGULAR                  FW_NORMAL)
(constant FW_DEMIBOLD                 FW_SEMIBOLD)
(constant FW_ULTRABOLD                FW_EXTRABOLD)
(constant FW_BLACK                    FW_HEAVY)

(constant SRCCOPY                     #x00CC0020)
(constant SRCPAINT                    #x00EE0086)
(constant SRCAND                      #x008800C6)
(constant SRCINVERT                   #x00660046)
(constant SRCERASE                    #x00440328)
(constant NOTSRCCOPY                  #x00330008)
(constant NOTSRCERASE                 #x001100A6)
(constant MERGECOPY                   #x00C000CA)
(constant MERGEPAINT                  #x00BB0226)
(constant PATCOPY                     #x00F00021)
(constant PATPAINT                    #x00FB0A09)
(constant PATINVERT                   #x005A0049)
(constant DSTINVERT                   #x00550009)
(constant BLACKNESS                   #x00000042)
(constant WHITENESS                   #x00FF0062)

(constant OBJ_PEN                     1)
(constant OBJ_BRUSH                   2)
(constant OBJ_DC                      3)
(constant OBJ_METADC                  4)
(constant OBJ_PAL                     5)
(constant OBJ_FONT                    6)
(constant OBJ_BITMAP                  7)
(constant OBJ_REGION                  8)
(constant OBJ_METAFILE                9)
(constant OBJ_MEMDC                   10)
(constant OBJ_EXTPEN                  11)
(constant OBJ_ENHMETADC               12)
(constant OBJ_ENHMETAFILE             13)

(constant R2_BLACK                    1)
(constant R2_NOTMERGEPEN              2)
(constant R2_MASKNOTPEN               3)
(constant R2_NOTCOPYPEN               4)
(constant R2_MASKPENNOT               5)
(constant R2_NOT                      6)
(constant R2_XORPEN                   7)
(constant R2_NOTMASKPEN               8)
(constant R2_MASKPEN                  9)
(constant R2_NOTXORPEN                10)
(constant R2_NOP                      11)
(constant R2_MERGENOTPEN              12)
(constant R2_COPYPEN                  13)
(constant R2_MERGEPENNOT              14)
(constant R2_MERGEPEN                 15)
(constant R2_WHITE                    16)
(constant R2_LAST                     16)

(constant ETO_OPAQUE                  #x0002)
(constant ETO_CLIPPED                 #x0004)
(constant ETO_GLYPH_INDEX             #x0010)
(constant ETO_RTLREADING              #x0080)
(constant ETO_NUMERICSLOCAL           #x0400)
(constant ETO_NUMERICSLATIN           #x0800)
(constant ETO_IGNORELANGUAGE          #x1000)

(constant DRIVERVERSION               0)
(constant TECHNOLOGY                  2)
(constant HORZSIZE                    4)
(constant VERTSIZE                    6)
(constant HORZRES                     8)
(constant VERTRES                     10)
(constant BITSPIXEL                   12)
(constant PLANES                      14)
(constant NUMBRUSHES                  16)
(constant NUMPENS                     18)
(constant NUMMARKERS                  20)
(constant NUMFONTS                    22)
(constant NUMCOLORS                   24)
(constant PDEVICESIZE                 26)
(constant CURVECAPS                   28)
(constant LINECAPS                    30)
(constant POLYGONALCAPS               32)
(constant TEXTCAPS                    34)
(constant CLIPCAPS                    36)
(constant RASTERCAPS                  38)
(constant ASPECTX                     40)
(constant ASPECTY                     42)
(constant ASPECTXY                    44)
(constant SHADEBLENDCAPS              45)
(constant LOGPIXELSX                  88)
(constant LOGPIXELSY                  90)
(constant SIZEPALETTE                 104)
(constant NUMRESERVED                 106)
(constant COLORRES                    108)
(constant PHYSICALWIDTH               110)
(constant PHYSICALHEIGHT              111)
(constant PHYSICALOFFSETX             112)
(constant PHYSICALOFFSETY             113)
(constant SCALINGFACTORX              114)
(constant SCALINGFACTORY              115)
(constant VREFRESH                    116)
(constant DESKTOPVERTRES              117)
(constant DESKTOPHORZRES              118)
(constant BLTALIGNMENT                119)


(constant LF_FACESIZE                 32)


(constant DM_ORIENTATION      #x00000001)
(constant DM_PAPERSIZE        #x00000002)
(constant DM_PAPERLENGTH      #x00000004)
(constant DM_PAPERWIDTH       #x00000008)
(constant DM_SCALE            #x00000010)
(constant DM_POSITION         #x00000020)
(constant DM_COPIES           #x00000100)
(constant DM_DEFAULTSOURCE    #x00000200)
(constant DM_PRINTQUALITY     #x00000400)
(constant DM_COLOR            #x00000800)
(constant DM_DUPLEX           #x00001000)
(constant DM_YRESOLUTION      #x00002000)
(constant DM_TTOPTION         #x00004000)
(constant DM_COLLATE          #x00008000)
(constant DM_FORMNAME         #x00010000)
(constant DM_LOGPIXELS        #x00020000)
(constant DM_BITSPERPEL       #x00040000)
(constant DM_PELSWIDTH        #x00080000)
(constant DM_PELSHEIGHT       #x00100000)
(constant DM_DISPLAYFLAGS     #x00200000)
(constant DM_DISPLAYFREQUENCY #x00400000)
(constant DM_ICMMETHOD        #x00800000)
(constant DM_ICMINTENT        #x01000000)
(constant DM_MEDIATYPE        #x02000000)
(constant DM_DITHERTYPE       #x04000000)
(constant DM_PANNINGWIDTH     #x08000000)
(constant DM_PANNINGHEIGHT    #x10000000)


(constant DMORIENT_PORTRAIT            1)
(constant DMORIENT_LANDSCAPE           2)


(constant DMPAPER_LETTER               1)
(constant DMPAPER_LETTERSMALL          2)
(constant DMPAPER_TABLOID              3)
(constant DMPAPER_LEDGER               4)
(constant DMPAPER_LEGAL                5)
(constant DMPAPER_STATEMENT            6)
(constant DMPAPER_EXECUTIVE            7)
(constant DMPAPER_A3                   8)
(constant DMPAPER_A4                   9)
(constant DMPAPER_A4SMALL             10)
(constant DMPAPER_A5                  11)
(constant DMPAPER_B4                  12)
(constant DMPAPER_B5                  13)
(constant DMPAPER_FOLIO               14)
(constant DMPAPER_QUARTO              15)
(constant DMPAPER_10X14               16)
(constant DMPAPER_11X17               17)
(constant DMPAPER_NOTE                18)
(constant DMPAPER_ENV_9               19)
(constant DMPAPER_ENV_10              20)
(constant DMPAPER_ENV_11              21)
(constant DMPAPER_ENV_12              22)
(constant DMPAPER_ENV_14              23)
(constant DMPAPER_CSHEET              24)
(constant DMPAPER_DSHEET              25)
(constant DMPAPER_ESHEET              26)
(constant DMPAPER_ENV_DL              27)
(constant DMPAPER_ENV_C5              28)
(constant DMPAPER_ENV_C3              29)
(constant DMPAPER_ENV_C4              30)
(constant DMPAPER_ENV_C6              31)
(constant DMPAPER_ENV_C65             32)
(constant DMPAPER_ENV_B4              33)
(constant DMPAPER_ENV_B5              34)
(constant DMPAPER_ENV_B6              35)
(constant DMPAPER_ENV_ITALY           36)
(constant DMPAPER_ENV_MONARCH         37)
(constant DMPAPER_ENV_PERSONAL        38)
(constant DMPAPER_FANFOLD_US          39)
(constant DMPAPER_FANFOLD_STD_GERMAN  40)
(constant DMPAPER_FANFOLD_LGL_GERMAN  41)


(constant DMBIN_ONLYONE               1)
(constant DMBIN_LOWER                 2)
(constant DMBIN_MIDDLE                3)
(constant DMBIN_MANUAL                4)
(constant DMBIN_ENVELOPE              5)
(constant DMBIN_ENVMANUAL             6)
(constant DMBIN_AUTO                  7)
(constant DMBIN_TRACTOR               8)
(constant DMBIN_SMALLFMT              9)
(constant DMBIN_LARGEFMT              10)
(constant DMBIN_LARGECAPACITY         11)
(constant DMBIN_CASSETTE              14)
(constant DMBIN_FORMSOURCE            15)


(constant GRADIENT_FILL_RECT_H        #x00000000)
(constant GRADIENT_FILL_RECT_V        #x00000001)
(constant GRADIENT_FILL_TRIANGLE      #x00000002)
(constant GRADIENT_FILL_OP_FLAG       #x000000ff)


(constant AC_SRC_OVER                 #x00)
(constant AC_SRC_ALPHA                #x01)
  
  
(constant GR_GDIOBJECTS                 0)
(constant GR_USEROBJECTS                1)


;;;
;;;; Structures
;;;


(c-structure BITMAP
  (INT bmType)
  (INT bmWidth)
  (INT bmHeight)
  (INT bmWidthBytes)
  (INT bmPlanes)
  (INT bmBitsPixel)
  (LPVOID bmBits))


(definition size-of-BITMAP (c-function () INT "___result = sizeof(BITMAP);"))


(c-structure LOGBRUSH
  (INT lbStyle)
  (INT lbColor)
  (INT lbHatch))


(c-structure LOGFONTW
  (LONG   lfHeight)
  (LONG   lfWidth)
  (LONG   lfEscapement)
  (LONG   lfOrientation)
  (LONG   lfWeight)
  (BYTE   lfItalic)
  (BYTE   lfUnderline)
  (BYTE   lfStrikeOut)
  (BYTE   lfCharSet)
  (BYTE   lfOutPrecision)
  (BYTE   lfClipPrecision)
  (BYTE   lfQuality)
  (BYTE   lfPitchAndFamily)
  (SHORT  lfFaceName 32 @only-numeric-for-now LF_FACESIZE))


(definition size-of-LOGFONTW (c-function () INT "___result = sizeof(LOGFONTW);"))
(definition LOGFONTW*->PVOID (c-function (LOGFONTW*) PVOID "___result_voidstar = ___arg1;"))


(definition VOID*->DEVMODE (c-function (VOID*) DEVMODE* "___result_voidstar = ___arg1;"))
(definition DEVMODE->HANDLE (c-function (DEVMODE*) HANDLE "___result_voidstar = ___arg1;"))


(c-structure DEVMODE
  (SHORT dmDeviceName 32 @only-numeric-for-now CCHDEVICENAME)
  (SHORT dmSpecVersion)
  (SHORT dmDriverVersion)
  (SHORT dmSize)
  (SHORT dmDriverExtra)
  (INT dmFields)
  (SHORT dmOrientation)
  (SHORT dmPaperSize)
  (SHORT dmPaperLength)
  (SHORT dmPaperWidth)
  (SHORT dmScale)
  (SHORT dmCopies)
  (SHORT dmDefaultSource)
  (SHORT dmPrintQuality)
  (SHORT dmColor)
  (SHORT dmDuplex)
  (SHORT dmYResolution)
  (SHORT dmTTOption)
  (SHORT dmCollate)
  (SHORT dmFormName 32 @only-numeric-for-now CCHFORMNAME)
  (SHORT dmLogPixels)
  (INT dmBitsPerPel)
  (INT dmPelsWidth)
  (INT dmPelsHeight)
  (INT dmDisplayFlags)
  (INT dmDisplayFrequency)
  (INT dmICMMethod)
  (INT dmICMIntent)
  (INT dmMediaType)
  (INT dmDitherType)
  (INT dmReserved1)
  (INT dmReserved2)
  (INT dmPanningWidth)
  (INT dmPanningHeight))


(c-structure DEVNAMES
  (SHORT wDriverOffset)
  (SHORT wDeviceOffset)
  (SHORT wOutputOffset)
  (SHORT wDefault))


(c-structure DOCINFO
  (INT      cbSize)
  (LPCWSTR  lpszDocName)  ;; Warning const
  (LPCWSTR  lpszOutput)   ;; Warning const
  (LPCWSTR  lpszDatatype) ;; Warning const
  (DWORD    fwType))


(c-structure TEXTMETRIC
  (INT   tmHeight)
  (INT   tmAscent)
  (INT   tmDescent)
  (INT   tmInternalLeading)
  (INT   tmExternalLeading)
  (INT   tmAveCharWidth)
  (INT   tmMaxCharWidth)
  (INT   tmWeight)
  (INT   tmOverhang)
  (INT   tmDigitizedAspectX)
  (INT   tmDigitizedAspectY)
  (SHORT tmFirstChar)
  (SHORT tmLastChar)
  (SHORT tmDefaultChar)
  (SHORT tmBreakChar)
  (BYTE  tmItalic)
  (BYTE  tmUnderlined)
  (BYTE  tmStruckOut)
  (BYTE  tmPitchAndFamily)
  (BYTE  tmCharSet))


(c-structure TRIVERTEX
  (INT   x)
  (INT   y)
  (SHORT Red)
  (SHORT Green)
  (SHORT Blue)
  (SHORT Alpha))


(c-structure GRADIENT_RECT
  (INT UpperLeft)
  (INT LowerRight))


(c-structure BLENDFUNCTION
  (BYTE BlendOp)
  (BYTE BlendFlags)
  (BYTE SourceConstantAlpha)
  (BYTE AlphaFormat))


(c-structure ENHMETAHEADER
  (DWORD   iType)
  (DWORD   nSize)
  (RECTL   rclBounds)
  (RECTL   rclFrame)
  (DWORD   dSignature)
  (DWORD   nVersion)
  (DWORD   nBytes)
  (DWORD   nRecords)
  (WORD    nHandles)
  (WORD    sReserved)
  (DWORD   nDescription)
  (DWORD   offDescription)
  (DWORD   nPalEntries)
  (SIZEL   szlDevice)
  (SIZEL   szlMillimeters)
  (DWORD   cbPixelFormat)
  (DWORD   offPixelFormat)
  (DWORD   bOpenGL))


(c-structure XFORM
  (FLOAT eM11)
  (FLOAT eM12)
  (FLOAT eM21)
  (FLOAT eM22)
  (FLOAT eDx)
  (FLOAT eDy))


(definition GetGlyphIndex
  (c-function (HDC WORD) WORD
    "WORD res = 0;
     WORD str[2] = {___arg2, 0};
     GetGlyphIndicesW( ___arg1, str, 1, &res, 0 );
     ___result = res;"))

;;;
;;;; Externals
;;;

(c-external HDC             (ResetDC                                 HDC DEVMODE*))
(c-external BOOL            (MoveToEx                                HDC INT INT POINT*))
(c-external BOOL            (LineTo                                  HDC INT INT))
(c-external BOOL            (TextOut                                 HDC INT INT LPCWSTR INT)                                                                            "TextOutW")
(c-external BOOL            (BitBlt                                  HDC INT INT INT INT HDC INT INT DWORD))
;;(c-external BOOL            (StretchBlt                              INT INT INT INT INT INT INT INT INT INT INT))
(c-external HANDLE             (SelectObject                            HDC HANDLE))
(c-external BOOL            (DeleteObject                            HGDIOBJ))
;;(c-external INT             (GetCurrentObject                        INT INT))
;;(c-external bool            (DeleteDC                                INT))
(c-external HGDIOBJ         (GetStockObject                          INT))
;;(c-external INT             (SetBkMode                               INT INT))
;;(c-external INT             (SetBkColor                              INT INT))
;;(c-external INT             (SetROP2                                 INT INT))
;;(c-external INT             (SetTextColor                            INT INT))
(c-external HRGN             (CreateRectRgn                           INT INT INT INT))
(c-external HRGN             (CreateRectRgnIndirect                   LPCRECT))
;;(c-external INT             (CreateEllipticRgn                       INT INT INT INT))
(c-external INT             (CombineRgn                              HRGN HRGN HRGN INT))
(c-external INT             (OffsetRgn                               HRGN INT INT))
(c-external INT             (GetRgnBox                               HRGN LPRECT))
;;(c-external bool            (FillRgn                                 INT INT INT))
;;(c-external bool            (Ellipse                                 INT INT INT INT INT))
;;(c-external INT             (CreateDC                                string string string record)                                                                       "CreateDCW")
(c-external HDC             (CreateCompatibleDC                      HDC))
(c-external HBITMAP         (CreateCompatibleBitmap                  HDC INT INT))
;;(c-external INT             (CreatePen                               INT INT INT))
;;(c-external INT             (ExtCreatePen                            INT INT LOGBRUSH& INT INT))
;;(c-external INT             (CreateSolidBrush                        INT))
;;(c-external INT             (CreateHatchBrush                        INT INT))
;;(c-external bool            (Rectangle                               INT INT INT INT INT))
;;(c-external bool            (RoundRect                               INT INT INT INT INT INT INT))
(c-external HFONT           (CreateFont                              INT INT INT INT INT DWORD DWORD DWORD DWORD DWORD DWORD DWORD DWORD LPCWSTR)                        "CreateFontW")
(c-external HFONT           (CreateFontIndirect                      LOGFONTW*))
;;(c-external INT             (ExcludeClipRect                         INT INT INT INT INT))
;;(c-external INT             (IntersectClipRect                       INT INT INT INT INT))
(c-external INT             (GetObject                               HGDIOBJ INT PVOID)                                                                                    "GetObjectW")
;;(c-external bool            (GetBitmapDimensionEx                    INT SIZE&))
;;(c-external INT             (GetGraphicsMode                         INT))
;;(c-external INT             (SetGraphicsMode                         INT INT))
;;(c-external INT             (GetMapMode                              INT))
;;(c-external INT             (SetMapMode                              INT INT))
(c-external INT             (GetDeviceCaps                           HDC INT))
;;(c-external bool            (GetWindowOrgEx                          INT POINT&))
;;(c-external bool            (SetWindowOrgEx                          INT INT INT POINT&))
;;(c-external bool            (GetWindowExtEx                          INT SIZE&))
;;(c-external bool            (SetWindowExtEx                          INT INT INT SIZE&))
;;(c-external bool            (GetViewportOrgEx                        INT POINT&))
;;(c-external bool            (SetViewportOrgEx                        INT INT INT POINT&))
;;(c-external bool            (GetViewportExtEx                        INT SIZE&))
;;(c-external bool            (SetViewportExtEx                        INT INT INT SIZE&))
;;(c-external bool            (GetWorldTransform                       INT XFORM&))
;;(c-external bool            (SetWorldTransform                       INT XFORM&))
;;(c-external bool            (GetDCOrgEx                              INT POINT&))
;;(c-external bool            (SetBrushOrgEx                           INT INT INT POINT&))
;;(c-external INT             (GetMetaRgn                              INT INT))
;;(c-external INT             (GetClipRgn                              INT INT))
;;(c-external INT             (GetClipBox                              INT RECT&))
(c-external INT             (SelectClipRgn                           HDC HRGN))
;;(c-external INT             (OffsetClipRgn                           INT INT INT))
;;(c-external INT             (CreateEnhMetaFile                       INT string RECT& string)                                                                           "CreateEnhMetaFileW")
;;(c-external INT             (CloseEnhMetaFile                        INT))
;;(c-external bool            (DeleteEnhMetaFile                       INT))
;;(c-external INT             (GetEnhMetaFile                          string)                                                                                            "GetEnhMetaFileW")
;;(c-external INT             (GetEnhMetaFileHeader                    INT INT ENHMETAHEADER&))
;;(c-external INT             (PlayEnhMetaFile                         INT INT RECT&))
;;(c-external bool            (LPtoDP                                  INT record INT))
;;(c-external bool            (DPtoLP                                  INT record INT))
;;(c-external bool            (GetTextMetrics                          INT TEXTMETRIC&)                                                                                   "GetTextMetricsW")
;;(c-external bool            (GetTextExtentPoINT32                    INT string INT SIZE&)                                                                              "GetTextExtentPoINT32W")
;;(c-external bool            (GetCharWidth32                          INT INT INT array)                                                                                 "GetCharWidth32W")
(c-external BOOL            (RectInRegion                            HRGN LPCRECT))
(c-external INT             (StartDoc                                HDC DOCINFO*)                                                                                      "StartDocW")
(c-external INT             (EndDoc                                  HDC))
(c-external INT             (StartPage                               HDC))
(c-external INT             (EndPage                                 HDC))
)
