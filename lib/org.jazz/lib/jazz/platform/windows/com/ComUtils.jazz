;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; COM Utils
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Stephane Le Cornec.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.platform.windows.com.ComUtils jazz


(import (jazz.library)
        (jazz.platform.types)
        (jazz.platform.windows.WinTypes)
        (jazz.platform.windows.WinKernel)
        (jazz.platform.windows.com.ComTypes))


;;;
;;;; COM Functions
;;;


(definition com-initialized? #f)
(definition (initialize-com)
  ;; (unless com-initialized?
  (LoadLibrary "ole32")
  (CoInitializeEx #f COINIT_APARTMENTTHREADED))
  ;; (set! com-initialized? #t)


(definition last-hresult 0)
(definition (validate-hresult hresult)
  (case hresult
    ((0 1) ; S_OK or S_FALSE
     hresult)
    ((#x80004002)
     (error "ERROR - E_NOINTERFACE" hresult))
    ((#x80040154)
     (error "ERROR - class not registered?" hresult))
    ((#x800401f0)
     (error "ERROR - CO_E_NOTINITIALIZED" hresult))
    ((#x80070057)
     (error "ERROR - E_INVALIDARG" hresult))
    ((#x800a0d5d)
     (error "ERROR - wrong value type" hresult))
    (else
     (error (string-append "ERROR - " (number->string hresult 16))))))


(definition COINIT_APARTMENTTHREADED 2)
(definition CLSCTX_SERVER (+ 1 4 16))


(definition (CoInitializeEx n/a flags)
  (let ((proc (c-function (VOID* DWORD) HRESULT "CoInitializeEx")))
    (validate-hresult (proc #f flags))))


(definition (CoCreateInstance class interface)
  (let ((class-guid (GUID-encode class))
        (interface-guid (GUID-encode interface))
        (coptr* (IUnknown*-enref #f))
        (proc (c-function (GUID* IUnknown* DWORD GUID* LPVOID*) HRESULT "CoCreateInstance")))
    (validate-hresult (proc class-guid #f CLSCTX_SERVER interface-guid coptr*))
    (GUID-free class-guid)
    (GUID-free interface-guid)
    (IUnknown*-deref coptr*)))


(definition public (cocreate coclass)
  (let ((class-guid (car coclass))
        (interface-guid (cdr coclass)))
    (CoCreateInstance class-guid interface-guid)))


(definition public (corelease coptr)
  (CoRelease$ coptr)))
