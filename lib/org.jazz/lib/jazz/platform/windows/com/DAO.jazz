;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; DAO
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Stephane Le Cornec.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.platform.windows.com.DAO jazz


(import (jazz.platform.types)
        (jazz.platform.windows)
        (jazz.platform.windows.com))


;; patch - need a direct ref to ole32
(definition (patch-link class aggregate context interface coptr*)
  (c-function (GUID* IUnknown* DWORD GUID* LPVOID*) HRESULT "CoCreateInstance"))


@w(


;;;
;;;; DAO
;;;


(definition DBEngine-class
  (cons "00000100-0000-0010-8000-00aa006d2ea4" "00000021-0000-0010-8000-00aa006d2ea4"))


; _DBEngine
(coexternal 15 HRESULT (get-Workspaces$ (out LPVOID*)))
;(get-Workspaces coptr)

; Workspaces
(coexternal 12 HRESULT (get-Item$ (in VARIANT) (out LPVOID*)))
;(get-Item coptr n)

; Workspace
(coexternal 22 HRESULT (OpenDatabase$ (in BSTR) (in VARIANT) (in VARIANT) (in VARIANT) (out LPVOID*)))
;(OpenDatabase coptr name options read-only connect-string)

; Database
(coexternal 22 HRESULT (Close$))
;(Close coptr)


(definition (get-Workspaces coptr) ; _DBEngine
  (let ((p1 (IUnknown*-enref #f)))
    (let ((res (get-Workspaces$ coptr p1)))
      (validate-hresult res)
      (IUnknown*-deref p1))))


(definition (get-Item coptr in1) ; Workspaces
  (let ((p1 (VARIANT-encode in1))
        (p2 (IUnknown*-enref #f)))
    (let ((res (get-Item$ coptr p1 p2)))
      (validate-hresult res)
      (VARIANT-free p1)
      (IUnknown*-deref p2))))


(definition (OpenDatabase coptr in1 in2 in3 in4) ; Workspace
  (let ((p1 (BSTR-encode in1))
        (p2 (VARIANT-encode in2))
        (p3 (VARIANT-encode in3))
        (p4 (VARIANT-encode in4))
        (p5 (IUnknown*-enref #f)))
    (let ((res (OpenDatabase$ coptr p1 p2 p3 p4 p5)))
      (validate-hresult res)
      (BSTR-free p1)
      (VARIANT-free p2)
      (VARIANT-free p3)
      (VARIANT-free p4)
      (IUnknown*-deref p5))))


(definition (Close coptr) ; Database
  (let ((res (Close$ coptr)))
    (validate-hresult res)))

))
