(library jazz.profile jazz


(export (jazz.profile.autoload))
(import (jazz.profile.autoload)
        (jazz.catalog)
        (jazz.io)
        (jazz.utilities))


;;;
;;;; Profiles
;;;


(definition Profile-Classes
  (make-table test: eq?))


(definition public (get-profile-class name)
  (table-ref Profile-Classes name #f))


(definition public (require-profile-class name)
  (or (get-profile-class name)
      (jazz.error "Unable to find profile class: {s}" name)))


(definition public (set-profile-class name class)
  (table-set! Profile-Classes name class))


(definition public (register-profile-class class)
  (set-profile-class (identifier-name (type-name class)) class))


(definition public (load-profile-class module)
  (load-module module)
  (require-profile-class (identifier-name module)))


;;;
;;;; Catalogs
;;;


(definition public (setup-catalog name directory extensions)
  (let ((cataloguer (get-cataloguer~ (get-application)))
        (output (new-file~ {Directory Profile "catalogs"} (format "{a}.jcat" name))))
    (let ((catalog (new Indexed-Catalog name output directory extensions #t #t #t)))
      (add-catalog~ cataloguer catalog)
      (load-content~ catalog)))))
