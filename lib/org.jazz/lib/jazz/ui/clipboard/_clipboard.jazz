;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Clipboard
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.clipboard jazz


(export (jazz.ui.clipboard.platform.windows (cond windows))
        (jazz.ui.clipboard.platform.x11 (cond x11)))


;;;
;;;; Jazz
;;;


(definition jazz-formatted-text
  "JAZZ_FORMATTED_TEXT")

(definition jazz-parcels
  "JAZZ_PARCELS")


(definition (prefixed-format format)
  (unimplemented 'prefixed-format)
  @platform-dependant
  (append (clipboard-prefix~ (get-application)) format))


(definition public (register-jazz-clipboard-formats)
  (unimplemented 'register-jazz-clipboard-formats)
  @platform-dependant (
  (register-clipboard-format :jazz-formatted-text (prefixed-format jazz-formatted-text))
  (register-clipboard-format :jazz-parcels (prefixed-format jazz-parcels))))


(definition public (get-jazz-clipboard format)
  (unimplemented 'get-jazz-clipboard)
  @platform-dependant
  (get-clipboard-text format: format))


(definition public (set-jazz-clipboard format text)
  (unimplemented 'set-jazz-clipboard)
  @platform-dependant
  (set-clipboard-text text format: format))


(definition public (get-jazz-parcels)
  (unimplemented 'get-jazz-parcels)
  @platform-dependant
  (when (clipboard-format-available? :jazz-parcels))
  (read-string-element (get-jazz-clipboard :jazz-parcels)))


;;;
;;;; Clipboard-Parcel
;;;


(class Clipboard-Parcel extends Object
  
  
  (slot process-id)
  (slot object-id)
  (slot content)
  
  
  @convert-literal
  (method meta (construct-literal context process-id object-id content)
    (new self process-id object-id content))
  
  
  (method (initialize process-id object-id content)
    (nextmethod)
    (set! process-id~self process-id)
    (set! object-id~self object-id)
    (set! content~self content))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-process-id)
    process-id)
  
  
  (method public (get-object-id)
    object-id)
  
  
  (method public (get-content)
    content)))
