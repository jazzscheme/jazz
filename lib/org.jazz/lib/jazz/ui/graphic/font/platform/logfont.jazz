;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Logfont Definitions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.graphic.font.platform.logfont jazz


(import (jazz.platform)
        (jazz.platform.cairo))


(definition (create-font-handle (name: name {})
                                (font-name: font-name {})
                                (height: height {})
                                (bold?: bold? #f)
                                (italic?: italic? #f)
                                (underline?: underline? #f)
                                (monospace?: monospace? #f))
  (CreateFont height 0 0 0 (if bold? FW_BOLD FW_NORMAL) (if italic? 1 0) (if underline? 1 0) 0 ANSI_CHARSET OUT_DEFAULT_PRECIS CLIP_DEFAULT_PRECIS DEFAULT_QUALITY DEFAULT_PITCH font-name))


(definition (create-cairo-font-handle handle)
  (cairo_win32_font_face_create_for_logfontw (get-logfont handle)))


(definition (get-logfont handle)
  (let ((info (LOGFONTW-make)))
    (GetObject handle (size-of-LOGFONTW) (LOGFONTW*->PVOID info))
    info))


(definition (destroy-font-handle handle)
  (DeleteObject handle))


(definition (destroy-cairo-font-handle handle)
  (cairo_font_face_destroy handle))


@old-stuff
(definition (fill-info logfont)
  (set! font-name (LOGFONTW-lfFaceName-ref logfont))
  (set! point-size (calculate-point-size (LOGFONTW-lfHeight-ref logfont)))
  (set! bold? (>= (LOGFONTW-lfWeight-ref logfont) FW_BOLD))
  (set! italic? (/= (LOGFONTW-lfItalic-ref logfont) 0))
  (set! underline? (/= (LOGFONTW-lfUnderline-ref logfont) 0))
  (set! monospace? #f)))