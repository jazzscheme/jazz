;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Stage Root
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.view.Stage-Root jazz


(import (jazz.jml)
        (jazz.ui)
        (jazz.literals)
        (jazz.library)
        (jazz.utilities))


(class Stage-Root extends Root-View
  
  
  (form
    (<install>               background: {Color name: Dark}
      (<!>     name: content visible?: #f)))

  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method (size-change size)
    (nextmethod size)
    (invalidate-border insets: {Rect 2 2 2 2}))
  
  
  (method (mouse-activate)
    (acquire-focus))
    

  ;;;
  ;;;; Layout
  ;;;
  
  
  (method (layout)
    (let ((width (get-width))
          (height (get-height)))
      (let ((content (get-content)))
        (set-position~ content {Point 2 2})
        (set-size~ content (new Dimension (- width 4) (- height 4))))))

  
  ;;;
  ;;;; Backgound
  ;;;


  (method public virtual (install-wallpaper)
    )))
