;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Workspaces
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.workspace jazz


(import (jazz.jml)
        (jazz.platform)
        (jazz.ui)
        (jazz.ui.window)
        (jazz.library)
        (jazz.utilities))


(definition Selected-Workspace
  {})

(definition Locked-Activations?
  #f)


(definition public (get-workspace name)
  (either (find-component~ (get-preferences 'workspaces) name)
          (error "Unknown workspace: {t}" name)))


(definition public (selected-workspace)
  Selected-Workspace)

(definition public (set-selected-workspace workspace)
  (set! Selected-Workspace workspace))


(definition public (get-locked-activations?)
  Locked-Activations?)

(definition public (set-locked-activations? flag)
  (set! Locked-Activations? flag))


(definition (close-palettes)
  (let ((toplevel (get-toplevel)))
    (for-each (function (child)
                (when (and (is? child Host-Palette) (get-visible?~ child))
                  (set-visible?~ child #f)
                  @wait-docked/palette-unification!? (client-deactivate~ child)))
              (get-children~ toplevel)))))
