(library test.carbon jazz


(import (jazz.platform.carbon)
	(jazz.platform.carbon.carbon-types))


(definition (process handle event data)
  (let ((type (GetEventKind event)))
    (cond
     ((= type kEventWindowClose)
      (QuitApplicationEventLoop)
      noErr)
     ((= type kEventWindowBoundsChanged)
      noErr)
     (else
      eventNotHandledErr))))


(set-process-window-message process)


(definition (test)
  (let ((rect (Rect-make)))
    (Rect-left-set! rect 100)
    (Rect-top-set! rect 100)
    (Rect-bottom-set! rect 500)
    (Rect-right-set! rect 500)
    (TransformProcessType)
    (let ((win (CreateNewWindow kDocumentWindowClass 
				(bitwise-ior kWindowStandardDocumentAttributes
					     kWindowStandardHandlerAttribute
					     kWindowLiveResizeAttribute)
				rect)))
      (ShowWindow win)
      (InstallWindowEventHandler win)
      (RunApplicationEventLoop)))))