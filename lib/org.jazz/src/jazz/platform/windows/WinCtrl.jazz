;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Windows Common Controls
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.platform.windows.WinCtrl jazz


  ;;;
  ;;;; Constants
  ;;;


  (constant TME_HOVER                    #x00000001)
  (constant TME_LEAVE                    #x00000002)
  (constant TME_QUERY                    #x40000000)
  (constant TME_CANCEL                   #x80000000)

  (constant HOVER_DEFAULT                #xFFFFFFFF)

  (constant CLR_NONE                     #xFFFFFFFF)
  (constant CLR_DEFAULT                  #xFF000000)

  (constant ILC_MASK                     #x0001)
  (constant ILC_COLOR                    #x0000)
  (constant ILC_COLORDDB                 #x00FE)
  (constant ILC_COLOR4                   #x0004)
  (constant ILC_COLOR8                   #x0008)
  (constant ILC_COLOR16                  #x0010)
  (constant ILC_COLOR24                  #x0018)
  (constant ILC_COLOR32                  #x0020)

  (constant ILD_NORMAL                   #x0000)
  (constant ILD_TRANSPARENT              #x0001)
  (constant ILD_MASK                     #x0010)
  (constant ILD_IMAGE                    #x0020)
  (constant ILD_ROP                      #x0040)
  (constant ILD_BLEND25                  #x0002)
  (constant ILD_BLEND50                  #x0004)
  (constant ILD_OVERLAYMASK              #x0F00)
  (constant ILD_SELECTED                 ILD_BLEND50)
  (constant ILD_FOCUS                    ILD_BLEND25)
  (constant ILD_BLEND                    ILD_BLEND50)


  ;;;
  ;;;; Externals
  ;;;


 @old-externals(
  (winexternal Comctl int             (ImageList_Create                        int int int int int))
  (winexternal Comctl bool            (ImageList_Destroy                       int))
  (winexternal Comctl int             (ImageList_LoadImage                     int string int int int int int)                                                              "ImageList_LoadImageW")
  (winexternal Comctl int             (ImageList_Add                           int int int))
  (winexternal Comctl int             (ImageList_AddMasked                     int int int))
  (winexternal Comctl int             (ImageList_ReplaceIcon                   int int int))
  (winexternal Comctl bool            (ImageList_Draw                          int int int int int int))
  (winexternal Comctl bool            (ImageList_DrawEx                        int int int int int int int int int int))
  (winexternal Comctl bool            (ImageList_BeginDrag                     int int int int))
  (winexternal Comctl int             (ImageList_SetBkColor                    int int))
  (winexternal Comctl bool            (ImageList_SetDragCursorImage            int int int int))
  (winexternal Comctl bool            (ImageList_DragEnter                     int int int))
  (winexternal Comctl bool            (ImageList_DragMove                      int int))
  (winexternal Comctl bool            (ImageList_DragLeave                     int))
  (winexternal Comctl bool            (ImageList_DragShowNolock                bool))
  (winexternal Comctl bool            (ImageList_EndDrag))
  (winexternal Comctl int             (ImageList_GetIcon                       int int int))
  (winexternal Comctl bool            (ImageList_GetIconSize                   int <out> int& <out> int&))
  (winexternal Comctl int             (ImageList_GetImageCount                 int))))