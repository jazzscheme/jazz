;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Preview Page
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.print.Preview-Page jazz


(import (jazz.library)
        (jazz.platform)
        (jazz.ui)
        (jazz.ui.view)
        (jazz.ui.window)
        (jazz.utilities))


(class Preview-Page extends View


  (property client initialize {} getter get-client setter set-client)
  (property no     initialize {} getter get-no     setter set-no)
  
  
  (slot dragging?      initialize #f)
  (slot start-position initialize {})
  
  
  ;;;
  ;;;; Access
  ;;;


  (method public (get-client)
    client)


  (method public (set-client value)
    (set! client value)
    (invalidate-view))


  (method public (get-no)
    no)


  (method public (set-no value)
    (set! no value)
    (invalidate-view))
  
  
  (method (get-pane)
    (get-guest))
  
  
  ;;;
  ;;;; Cursor
  ;;;
  
  
  (method (cursor-update pos)
    (let* ((pane (get-pane))
           (scrollee (locate~ pane 'scrollee)))
      (if (or (vscroll-needed?~ scrollee) (hscroll-needed?~ scrollee))
          (if (get-mouse-down?)
              (set-cursor :closed-hand)
            (set-cursor :opened-hand))
        (set-cursor :arrow))))
  
  
  ;;;
  ;;;; Mouse
  ;;;
  
  
  (method (mouse-down pos)
    (set! dragging? #t)
    (set! start-position pos)
    (acquire-capture))
  
  
  (method (drag-move pos)
    (when dragging?
      (let* ((delta (nu- pos start-position))
             (pane (get-pane))
             (scrollee (locate~ pane 'scrollee)))
        (scroll~ scrollee delta))))
  
  
  (method (drag-up pos . rest)
    (when dragging?
      (release-capture)
      (set! dragging? #f)))
  
  
  (method (double-click pos)
    (let ((pane (get-pane))
          (toplevel (get-toplevel)))
      (set-zoom~ pane 1.0)
      (set-value~ (locate~ (find-palette~ toplevel Preview-Toolbar) 'zoom) 1.0)
      (set-start~ pane no)))
  
  
  ;;;
  ;;;; Drawing
  ;;;
  
  
  (method (draw surface context update lh lv)
    (let* ((pane (get-pane))
           (job (get-job~ pane))
           (page (get-page~ job no)))
      (print-page~ job surface lh lv page no)))))
