;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; org.jedi Documentation
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(<Product-Doc> name: org.jedi title: "Jedi IDE"
  (<description>
    (<p> "Jedi is a full featured IDE for the Jazz programming language built entirely in Jazz"))
  (<Section-Doc> name: jedi.ide title: "Working with the IDE"
    (<Section-Doc> name: jedi.workspaces title: "Workspaces"
      (<description>
        "Workspaces are groups of related windows, tools, ... that are activated together. "
        (<p>)
        "The buttons located at the right-hand side of the Jedi toolbar can be used to switch the active workspace. "
        (<p>)
        "Jedi comes with the following workspaces installed:"
        (<node>
          "Home"
          "Text"
          "Debugger"
          "Groupware")))
    (<Section-Doc> name: jedi.bindings title: "Bindings"
      (<description>
        "The following bindings are predefined:"
        (<p>)
        (<node>
          "Jazz"
          "Emacs (basic)"
          "Mac (todo)"
          "Windows")))
    (<Section-Doc> name: jedi.properties title: "Properties"
      (<description>
        "This window is used to visually edit properties of components. "
        (<p>)
        "Mainly used by the workbench at the moment."))
    (<Section-Doc> name: jedi.preferences title: "Preferences")
    (<Section-Doc> name: jedi.help title: "Getting Help")
    (<Section-Doc> name: jedi.eclipse title: "Eclipse Glossary"
    (<description>
      "Here is a very informal correspondance between some Eclipse and Jazz concepts where applicable."
      (<p>)
      (<table>
        (<tr> (<td> "Eclipse") (<td> "Jazz"))
        (<tr> (<td> "workspace") (<td> "profile"))
        (<tr> (<td> "feature") (<td> "package"))
        (<tr> (<td> "project") (<td> "project / product"))
        (<tr> (<td> "perspective") (<td> "workspace"))))))
  (<Section-Doc> name: jedi.projects title: "Managing Projects"
    (<Section-Doc> name: jedi.workbench title: "Workbench"
      (<description>
        "The workbench is the window used to manage source files. "
        (<p>)
        (<img> src: "screenshots/workbench.png")))
    (<Section-Doc> name: jedi.project title: "Project"
      (<description>
        "Projects are workbench entities that contain source files and resources. "
        (<p>)
        "For every project, Jedi will build a full cross-reference database (its catalog) of every source file in that project. "
        (<p>)
        "You update your project's catalog either by using the 'Update Catalog' context menu item or through the 'Catalogs Manager' window found in the 'Tools' menu. "
        (<p>)
        "Once you catalog is up-to-date, you can:"
        (<node>
          "edit a symbol's definitions by using alt-period on it"
          "list all definitions that reference a certain symbol by pressing ctrl-alt-period on it")
        (<p>)
        "Note that projects can contain source code from any language. Jedi will only catalog the source files that it knows about. "
        (<p>)
        "At the moment the following languages are fully supported:"
        (<node>
          "Scheme"
          "JazzScheme"
          "CommonLisp")
        (<p>)
        "Those are partially supported:"
        (<node>
          "C"
          "C++"
          "Java"
          "Lua"
          "Python"
          "CSS")))
    (<Section-Doc> name: jedi.catalog title: "Catalog"
      (<description>
        "A catalog is a full cross-reference database of a set of source files. "
        "Catalogs can be created manually but the easiest way to manage catalogs is through projects as each project automatically creates a catalog of it's source files. "
        (<p>)
        "Note that a new profile comes with projects for all Jazz packages pre-installed in the workbench. "
        "An easy way to update the catalogs of all these projects is through the Catalogs Manager window that can be invoked using Tools / Catalogs / Catalogs Manager. "
        "In the catalog manager, if no project is selected, pressing the Update button will update all catalogs. "
        (<p>)
        "Languages supported  at the moment:"
        (<node>
          "CommonLisp"
          "Scheme"
          "Jazz"
          "C (very basic)"
          "CSS (very basic)"
          "Java (very basic)"
          "JavaScript (very basic)"
          "Lua-Parser (very basic)"
          "Properties (very basic)"
          "Python (very basic)"))))
  (<Section-Doc> name: jedi.producs title: "Product Development"
    (<Section-Doc> name: jedi.product title: "Product"
      (<description>
        "Products are workbench entities used to build and run code. "
        (<p>)
        "There are two kinds of products at the moment:"
        (<node>
          "Gambit (in development)"
          "Jazz"))))
  (<Section-Doc> name: jedi.code title: "Source Code"
    (<Section-Doc> name: jedi.text title: "Text"
      (<description>
        (<node>
          "Edit definitions : alt-."
          "Edit references : ctrl-alt-."
          "Browser metaphor navigation : ctrl-[ ctrl-]"
          "Syntax coloring"
          "Customisable code completion"
          "Textual macro recording : ctrl-( ctrl-) control-click alt-E"
          "Mouse copying : alt-click"
          "Unlimited undo / redo : ctrl-Z ctrl-shift-Z"
          "Clipboard stack : alt-V"
          "Code tabulation : tab"))
      (<Section-Doc> name: jedi.undo title: "Undo / Redo")
      (<Section-Doc> name: jedi.coloring title: "Syntax coloring")
      (<Section-Doc> name: jedi.recording  title: "Macro recording")
      (<Section-Doc> name: jedi.mouse-copy title: "Mouse copy")
      (<Section-Doc> name: jedi.completion title: "Symbol completion")
      (<Section-Doc> name: jedi.navigation title: "Navigation")
      (<Section-Doc> name: jedi.text.eval title: "Eval"
        (<description>
          "In a Jazz text, use ctrl-enter to evaluate the current definition. "
          "Note that Jazz will need to know to what debuggee to send the code for evaluation. "
          "You can right-click on any debuggee in the Processed window and select 'Focus' to focus this debuggee so it will be the one that gets the code evaluations. ")))
    (<Section-Doc> name: jedi.search title: "Search"
      (<description>
        (<img> src: "screenshots/search_replace.png")
        (<p>)
        (<node>
          "Alt-W : Toggle Whole Words"
          "Alt-I : Toggle Ignore Case"
          "Alt-C : Toggle Preserve Case"
          "Alt-R : Toggle Play Recording"))))
  (<Section-Doc> name: jedi.debugging title: "Debugging"
    (<Section-Doc> name: jedi.debugger title: "Debugger"
      (<description>
        "The Jazz debugger is a remote debugger. "
        "This means that the debugger will debug one or more remote 'debuggee' that are automatically connected to it via TCP/IP. "
        "Note that Jedi also a debuggee that is debugged by itself so that should an error occur inside the IDE, the debugger can be used to debug it. "
        (<p>)
        "A great advantage of remote debugging is that you are debugging your application exactly as itself with all its features: windows, menus, connections, ports, threads, ... instead of simulating inside the IDE it's various features. "
        "With a remote debugger it is even possible to debug a game running remotely on a gaming console. "
        (<p>)
        "The Jazz kernel supports debugging of Jazz code. "
        "But it really is a Gambit debugger and can be used to debug any Gambit code. "
        "All you need to do is create a product that will load your Gambit code and then run your product using the Debug command. "
        (<p>))
      (<Section-Doc> name: jedi.restart title: "Restart"
        (<description>
          "Jazz supports a concept of restarts similar to CommonLisp. "
          "The debugger will automatically propose all restarts when displaying an exception or break point. ")))
    (<Section-Doc> name: jedi.console title: "Console"
      (<description>
        "The console is where the debuggee interact with the debugger usually through a read-eval-print loop. "
        (<p>)
        "Each thread that throws an exception will open it's own console and start a repl at that point. "
        (<p>)
        "Note that Jedi automatically opens a console when it starts to enable experimenting. "
        "Expression entered in that console are evaluation inside the IDE's primordial thread. "
        "Beware that if you built Jedi in release safety, Gambit's safe mode is disabled so that code entered in that console can crash the IDE. "))
    (<Section-Doc> name: jedi.terminal title: "Terminal"
      (<description>
        "The terminal represent's Gambit console. "
        "The terminal name was choose to distinguish it from Jedi's own console. ")))
  (<Section-Doc> name: jedi.profiling title: "Profiling"
    (<Section-Doc> name: jedi.profiler title: "Profiler"))
  (<Section-Doc> name: jedi.collaboration title: "Collaboration"
    (<Section-Doc> name: jedi.compare-directories title: "Compare directories"
      (<description>
        ))
    (<Section-Doc> name: jedi.compare-files title: "Compare files"
      (<description>
        )))
  (<Section-Doc> name: jedi.web title: "Web Development"
    )
  (<Section-Doc> name: jedi.user title: "User Preferences"
    (<Section-Doc> name: launch title: "Launch Parameters"
      (<description>
        (<p> "Jedi supports the following launch parameters in addition to the ones supported by the kernel:")
        (<properties>
          (<prop> "/profile" "automatic profile name used for loggin"))
        (<p>)
        (<p> "Example:")
        (<p> (<xmp> #"jazz.exe -run jedi -profile Guillaume"#))))
    (<Section-Doc> name: profile title: "Profile"
    (<description>
      "A profile is a set of Jedi preferences. "
      (<p>)
      "Profiles are located in the org.jedi.profiles package inside the User repository. "
      "For example, if a 'Me' profile is created, it will contain the following files: "
      (<p>)
      (<xmp> #"HOME
  .jazz
    .jazzini
    lib
      org.jedi.profiles
        profile
          Me
            _Me.jazz
            Me-Project.jazz
            settings
              Bindings.jml
              Preferences.jml
              WebServers.jml
              Workbench.jml"#)
      (<p>)
      "The reason profiles reside inside a package is that they contain Jazz code. "
      "In the example above, the _Me.jazz module contains a Me class that can be used to customize the IDE, experiment with code, ..."
      (<p>)
      "One nice way of using your profile is to test your code there is a very Lispish interactive fashion and when it is functional, migrate it to it's own module. "
      ))
    (<Section-Doc> name: Settings
      (<Section-Doc> name: Preferences)))
  (<Section-Doc> name: jedi.samples title: "Samples"
    (<description>
      "To build / run / test a sample, open it's project in the workbench and double-click it's product icon (the ruler with a pen icon). "
      "This will activate the product and make it the current product. "
      "You can then use the Product menu to interact with it. "
      (<p>)
      "Note that there is no need to build a sample before running it. "
      "Jazz support running any module interpreted. "
      "The only exception is modules containing FFI code but no sample uses any FFI at the moment. ")
    (<Section-Doc> name: jedi.sample.world title: "World"
      (<description>
        "The classical hello world sample. "))
    (<Section-Doc> name: jedi.sample.mandelbrot title: "Mandelbrot"
      (<description>
        "A simple window to explain how Mandelbrot sets are calculated that I did with my son. "
        (<p>)
        "Use the Test menu item to create a new Mandelbrot window. "))
    (<Section-Doc> name: jedi.sample.c4 title: "C4"
      (<description>
        "The Connect-4 game with a simple minimax AI. "
        (<p>)
        "Winner is first one to put 4 circles in a line. "))
    (<Section-Doc> name: jedi.sample.gomoku title: "Gomoku"
      (<description>
        "The classic japanese game with a simple minimax AI. "
        (<p>)
        "Winner is first one to put 5 stones in a line. "))
    (<Section-Doc> name: jedi.sample.game-server title: "Game Server"
      (<description>
        "A sample web server."
        (<p>)
        "You can launch the game server using either of the following methods :"
        (<p>)
        (<node>
          (<span>
            "Select the Game Server product by double-clicking it and then launch the product using the Product / Debug command. "
            "You can use the game server console to control the server. "
            "Type help for help. ")
          (<span>
            "Select the Servers window and double click the Game row to start the server inside the IDE."))
        (<p>)
        "To try the server enter the following address in any browser :"
        (<p>)
        (<a> href: "http://localhost:8080/Games"))))))))
