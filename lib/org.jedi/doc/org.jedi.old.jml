;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; org.jedi Documentation
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(<Product-Doc> name: org.jedi title: "Jedi"
  (<description>
    (<p> "Jedi is a full featured IDE for the Jazz programming language built entirely using the Jazz language"))
  (<Section-Doc> name: jedi.installation title: "Installation")
  (<Section-Doc> name: jedi.boot title: "Boot Process"
    (<description>
      (<p> "IDE starting steps")
      (<p>)
      (<p> "When the IDE (Jedi) is launched, the jazz environment is created in the following steps:")
      (<p>)
      (<ol>
        (<li> "Hardcoded C++: The underlaying compiled C++.")
        (<li> "Settings: Mostly for memory allocation")
        (<li> "Command arguments:")
        (<li> "System properties: The jazz classes are loaded.")
        (<li> "Manifest: The manifest is applied.")
        (<li> "Preferences: The Preference.jml file is loaded."))))
  (<Section-Doc> name: jedi.console title: "Console"
    (<description>
      (<p> #"Les modes private sont overrides par le mode "superuser" en mode console (interprete) ou en mode test (test0, test1, etc) : ceci est concu pour pouvoir tester toutes les methods sans etre bloque par le "private"."#)))
  (<Section-Doc> name: jedi.debugger title: "Debugger"
    (<description>
      (<p> #"Remote debugger"#)
      (<p> #"Every Jazz process has an associated Jazz-Process instance that can be obtained by the (get-process) method of the running process. For Jedi, this is an instance of the Jedi-Process derived class"#)
      (<p> #"A running Jedi application also creates an instance of the Debugger class that remote processes will call"#)
      (<p> #"Also, every debugged process (including Jedi) will have a controller (the Jedi that launched it) and a debugger (the debugger in the controlling Jedi). Note that in general for Jedi these will point to its local versions but if a Jedi is remotly debugging another Jedi, they can point to the remote Jedi acting as the debugger. In both cases, a get-local-debugger method can be used to retreive the local version of the debugger even if the local Jedi is beeing remotly debugged"#)
      (<p> #"The debugger uses basically two remote classes into the debugged process: Jazz-Process to call the remote process and Execution-Thread to represent a thread in the debugged process.  Also, the base class Execution-Frame and its derived classes are used when a remote execution thread returns a list of its stack frames (these are not remote classes, they are basic classes that can be marshalled by value)."#)
      (<p> #"An advantage of pretty-printed code is the ability to debug code that was generated programmatically"#)
      (<p> #"The Debugger class is used locally and the Jedi-Debugger class is the one that gets called remotely by debugged processes"#)))
  (<Section-Doc> name: jedi.designer title: "Designer"
    (<description>
      (<p> "The visual GUI designer is at a prototype stage at best. "
        "Because the emphasis has always been on enabling the code to do everything in a clean reusable fashion, not much work was done to complete the Designer.")))
  (<Section-Doc> name: jedi.groupware title: "Groupware"
    (<description>
      (<p> "Compare files.")
      (<p> "Compare directories.")
      (<p> "Source safe integration")
      (<p>)))
  (<Section-Doc> name: jedi.profiler title: "Profiler")
  (<Section-Doc> name: jedi.projects title: "Projects"
    (<description>
      (<p> "Manifest")
      (<p>)
      (<p> "At build time, Jazz files are converted to C++ files, then to object files and finally assembled into the application (or library). Each object file contains the modification date of its Jazz file.")
      (<p>)
      (<p> ".jazz -> .cpp -> .obj }")
      (<p> ".jazz -> .cpp -> .obj } .exe or .dll")
      (<p> ".jazz -> .cpp -> .obj }")
      (<p>)
      (<p> "When the Interpreter module is included  in the compiled version, the application is still able to evaluate Jazz code. We can take advantage of that to replace parts of the code without having to recompile the whole project.")
      (<p>)
      (<p> "By default, the application will look into some files and folders for more recent code, using the modification date. The priority order is:")
      (<p>)
      (<ol>
        (<li> "Manifest file")
        (<li> "Patches file")
        (<li> "Debug folder")
        (<li> "Support folder"))
      (<p>)
      (<p> "As there's no semantic distinctions between interpreted and compiled code, a deployed application can then be updated by simply using the new code.")
      (<p>)))
  (<Section-Doc> name: jedi.search title: "Search"
    (<description>
      (<img> src: "screenshots/search_replace.png")))
  (<Section-Doc> name: jedi.sql title: "SQL"
    (<description>
      (<p>)))
  (<Section-Doc> name: jedi.text title: "Text"
    (<Section-Doc> name: jedi.undo title: "Undo / Redo")
    (<Section-Doc> name: jedi.coloring title: "Syntax coloring")
    (<Section-Doc> name: jedi.recording  title: "Macro recording")
    (<Section-Doc> name: jedi.mouse-copy title: "Mouse copy")
    (<Section-Doc> name: jedi.completion title: "Symbol completion")
    (<Section-Doc> name: jedi.navigation title: "Navigation"))
  (<Section-Doc> name: jedi.printing title: "Printing")
  (<Section-Doc> name: jedi.user title: "User"
    (<Section-Doc> name: Settings
      (<Section-Doc> name: Preferences)))
  (<Section-Doc> name: jedi.workbench title: "Workbench"
    (<description>
      (<img> src: "screenshots/workbench.png")))
  (<Section-Doc> name: jedi.workspaces title: "Workspaces")
  (<Section-Doc> name: jedi.windows title: "Windows"
    (<Section-Doc> name: jedi.com title: "COM"
      )))
