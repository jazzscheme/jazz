;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Jedi Product
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jedi.product jazz


;;;
;;;; Run
;;;


(definition (run)
  (let ((appl (new (module-autoload 'jedi 'Jedi))))
    (boot-environment~ appl '())))


;;;
;;;; Update
;;;


(definition Jedi-Critical-Modules
  '(;; utilities
    jazz.io
    jazz.literals
    jazz.utilities
    time.implementation
    
    ;; component
    jazz.library.component.Component
    jazz.library.component.Branch
    jazz.library.component.Form
    
    ;; view
    jazz.ui.dialog
    jazz.ui.view
    jazz.ui.layout.Figure
    jazz.ui.view.Drawing
    jazz.ui.view.View
    jazz.ui.view.Scrollbar
    jazz.ui.view.Layout-View
    jazz.ui.view.Container
    jazz.ui.view.Root-View
    jazz.ui.view.Caption-Root
    jazz.ui.view.Frame-Root
    jazz.ui.view.Docked-Root
    jazz.ui.view.Toplevel-Root
    jazz.ui.view.Image-Tool
    jazz.ui.view.Tool-Button
    jazz.ui.window
    jazz.ui.window.Window
    jazz.ui.window.View-Player
    jazz.ui.window.Frame
    jazz.ui.window.Stage
    jazz.ui.window.Pad-Window
    jazz.ui.offscreen
    jazz.ui.graphic.Color
    jazz.ui.graphic.Pen
    jazz.ui.graphic.Surface
    jazz.ui.image.Image
    jazz.ui.image.Portfolio
    jazz.platform
    
    ;; explorer
    jazz.ui.text.Text-Explorer
    jazz.ui.text.Code-Explorer
    jazz.language.jazz.text.Jazz-Explorer
    jazz.language.lisp.text.Lisp-Explorer
    jazz.language.scheme.text.Scheme-Explorer
    
    ;; text
    jazz.ui.graphic.font.Font
    jazz.ui.graphic.Font-Metrics
    jazz.library.node
    jazz.library.exemplar
    jazz.ui.text.Format
    jazz.ui.text.Paragraph
    jazz.ui.text.Line
    jazz.ui.text.Run
    jazz.ui.text.Style
    jazz.ui.text.Text-Style
    jazz.ui.outline.Outline-Row
    jazz.ui.outline.Outline-View
    jazz.ui.text.Text-View
    jazz.ui.text.Code-Text-View
    jazz.ui.text.Text-Colorizer
    jazz.language.jazz.text.Jazz-Text-View
    jazz.language.lisp.text.Lisp-Text-View
    
    ;; catalog
    jazz.catalog.catalog.Catalog
    jazz.catalog.catalog.Filing-Catalog
    jazz.catalog.catalog.Indexed-Catalog
    jazz.catalog.entry.Catalog-Entry
    jazz.catalog.entry.Indexed-Entry
    jazz.catalog.entry.File-Entry
    jazz.catalog.parser.File-Parser
    jazz.language.lisp.catalog.Lisp-Entry
    jazz.language.lisp.catalog.Lisp-File-Entry
    jazz.language.lisp.parser.Lisp-Parser
    jazz.language.scheme.parser.Scheme-Parser
    jazz.language.jazz.parser.Jazz-Parser
    
    ;; tree
    jazz.ui.tree.Tree-View
    jazz.ui.tree.Tree-Column
    jazz.ui.tree.Tree-Row
    
    ;; application
    jazz.system.process.Process
    jazz.system.application.Application
    jazz.ui.workspace
    jazz.ui.workspace.Workspace-Preferences
    jazz.ide.IDE
    jedi.application.Jedi
    
    ;; jml
    jazz.jml
    jazz.jml.parser.JML-Parser
    jazz.jml.model.JML-Node
    jazz.jml.model.JML-Element
    jazz.jml.model.JML-Text
    
    ;; compare
    jazz.groupware.compare.Compare-Directories
    jazz.groupware.compare.Compare-Text-View
    jazz.groupware.compare.Compare-Texts
    jazz.groupware.compare.Compare-Trees
    jazz.groupware.compare.Directory-Comparer
    jazz.groupware.compare.Text-Comparer
    jazz.groupware.compare.Tree-Comparer))


(cond-expand
  (windows
    (definition Jedi-Critical-Platform-Modules
      '(jazz.ui.window.platform.windows)))
  (x11
    (definition Jedi-Critical-Platform-Modules
      '(jazz.ui.window.platform.x11)))
  (else
    (definition Jedi-Critical-Platform-Modules
      '())))


(definition (update)
  (build-platform)
  (for-each compile-module Jedi-Critical-Modules)
  (for-each compile-module Jedi-Critical-Platform-Modules)
  (build-module 'jedi)
  (build-module 'jedi.product))


;;;
;;;; Build
;;;


(definition (build)
  (update)
  (build-executable 'jedi))


;;;
;;;; Register
;;;


(register-product 'jedi
  title: "Jedi"
  icon: "Jedi"
  run: run
  update: update
  build: build))
