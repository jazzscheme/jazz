;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.project))


(form
  (<Project>                     name: scheme description-file: {File :context ".package"}
    (<Project-Directory>                      directory: {Directory :context "src"}
      (<Project-Directory>                    directory: {Directory :context "src" "scheme"}
        (<Project-Directory>                  directory: {Directory :context "src" "scheme" "dialect"}
          (<Project-Directory>                directory: {Directory :context "src" "scheme" "dialect" "runtime"}
            (<Project-File>                   source: {File :context "src" "scheme" "dialect" "runtime" "_runtime.scm"})
            (<Project-File>                   source: {File :context "src" "scheme" "dialect" "runtime" "classes.scm"})
            (<Project-File>                   source: {File :context "src" "scheme" "dialect" "runtime" "kernel.scm"})
            (<Project-File>                   source: {File :context "src" "scheme" "dialect" "runtime" "syntax.scm"}))
          (<Project-Directory>                directory: {Directory :context "src" "scheme" "dialect" "syntax"}
            (<Project-Directory>              directory: {Directory :context "src" "scheme" "dialect" "syntax" "backend"}
              (<Project-File>                 source: {File :context "src" "scheme" "dialect" "syntax" "backend" "gambit.scm"}))
            (<Project-Directory>              directory: {Directory :context "src" "scheme" "dialect" "syntax" "walker"}
              (<Project-File>                 source: {File :context "src" "scheme" "dialect" "syntax" "walker" "runtime.scm"})
              (<Project-File>                 source: {File :context "src" "scheme" "dialect" "syntax" "walker" "syntax.scm"}))
            (<Project-File>                   source: {File :context "src" "scheme" "dialect" "syntax" "_syntax.scm"}))
          (<Project-File>                     source: {File :context "src" "scheme" "dialect" "_dialect.scm"}))
        (<Project-Directory>                  directory: {Directory :context "src" "scheme" "syntax-rules"}
          (<Project-File>                     source: {File :context "src" "scheme" "syntax-rules" "_syntax-rules.scm"}))
        (<Project-File>                       source: {File :context "src" "scheme" "_scheme.scm"}))))))
