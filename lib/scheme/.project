;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Project
;;;


(data jazz.ide.data.project


(import (jazz.project))


(form
  (<Project>                   name: scheme description-file: {File :context ".package"}
    (<Project-Directory>                    directory: {Directory :context "src"}
      (<Project-Directory>                  directory: {Directory :context "src" "scheme"}
        (<Project-Directory>                directory: {Directory :context "src" "scheme" "dialect"}
          (<Project-File>                   source: {File :context "src" "scheme" "dialect" "_dialect.scm"})
          (<Project-File>                   source: {File :context "src" "scheme" "dialect" "runtime.scm"})
          (<Project-File>                   source: {File :context "src" "scheme" "dialect" "syntax.scm"}))
        (<Project-Directory>                directory: {Directory :context "src" "scheme" "language"}
          (<Project-Directory>              directory: {Directory :context "src" "scheme" "language" "runtime"}
            (<Project-File>                 source: {File :context "src" "scheme" "language" "runtime" "_runtime.scm"})
            (<Project-File>                 source: {File :context "src" "scheme" "language" "runtime" "kernel.scm"}))
          (<Project-Directory>              directory: {Directory :context "src" "scheme" "language" "syntax-rules"}
            (<Project-File>                 source: {File :context "src" "scheme" "language" "syntax-rules" "_syntax-rules.scm"})))
        (<Project-File>                     source: {File :context "src" "scheme" "_scheme.scm"}))))))
