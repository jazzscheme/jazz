;;; Scheme Raytracer v0.1
;;;
;;; Vec
;;;
;;; 10/04/2007
;;; James Long

(library raytrace.vec jazz

;;; Utility stuff to help with math
(class vec2d extends Object
  
  (slot x <fl> getter generate)
  (slot y <fl> getter generate)
  
  (method (initialize x y)
    (nextmethod)
    (set! x~self x)
    (set! y~self y)))

(definition (make-vec2d x y)
  (new vec2d x y))

(definition (vec2d-x v)
  (get-x~ v))
(definition (vec2d-y v)
  (get-y~ v))

(class vec3d extends Object
  
  (slot x <fl> getter generate)
  (slot y <fl> getter generate)
  (slot z <fl> getter generate)
  
  (method (initialize x y z)
    (nextmethod)
    (set! x~self x)
    (set! y~self y)
    (set! z~self z)))

(definition (make-vec3d x y z)
  (new vec3d x y z))

(definition (vec3d-x v)
  (get-x~ v))
(definition (vec3d-y v)
  (get-y~ v))
(definition (vec3d-z v)
  (get-z~ v))

(definition (vec3d-op v1 v2 op)
  (make-vec3d (op (vec3d-x v1) (vec3d-x v2))
              (op (vec3d-y v1) (vec3d-y v2))
              (op (vec3d-z v1) (vec3d-z v2))))
(definition (vec3d-add v1 v2)
  (make-vec3d (+ (vec3d-x v1) (vec3d-x v2))
              (+ (vec3d-y v1) (vec3d-y v2))
              (+ (vec3d-z v1) (vec3d-z v2))))
(definition (vec3d-sub v1 v2)
  (make-vec3d (- (vec3d-x v1) (vec3d-x v2))
              (- (vec3d-y v1) (vec3d-y v2))
              (- (vec3d-z v1) (vec3d-z v2))))
;(definition (vec3d-add v1 v2)
;  (vec3d-op v1 v2 +))
;(definition (vec3d-sub v1 v2)
;  (vec3d-op v1 v2 -))
(definition (vec3d-component-mul v1 v2)
  (make-vec3d (* (vec3d-x v1) (vec3d-x v2))
              (* (vec3d-y v1) (vec3d-y v2))
              (* (vec3d-z v1) (vec3d-z v2))))
(definition (vec3d-scalar-mul v1 f)
  (make-vec3d (* (vec3d-x v1) f)
              (* (vec3d-y v1) f)
              (* (vec3d-z v1) f)))
(definition (vec3d-inverse v1)
  (vec3d-scalar-mul v1 -1.0))
(definition (vec3d-length v1)
  (sqrt (vec3d-dot v1 v1)))
(definition (vec3d-unit v1)
  (let ((l (vec3d-length v1)))
    (make-vec3d (/ (vec3d-x v1) l)
                (/ (vec3d-y v1) l)
                (/ (vec3d-z v1) l))))
(definition (vec3d-dot v1 v2)
  (+ (* (vec3d-x v1) (vec3d-x v2))
     (* (vec3d-y v1) (vec3d-y v2))
     (* (vec3d-z v1) (vec3d-z v2))))
(definition (vec3d-cross v1 v2)
  (make-vec3d (- (* (vec3d-y v1) (vec3d-z v2))
                 (* (vec3d-z v1) (vec3d-y v2)))
              (- (* (vec3d-z v1) (vec3d-x v2))
                 (* (vec3d-x v1) (vec3d-z v2)))
              (- (* (vec3d-x v1) (vec3d-y v2))
                 (* (vec3d-y v1) (vec3d-x v2)))))

(definition (saturate n)
  (min 1.0 (max 0.0 n))))
