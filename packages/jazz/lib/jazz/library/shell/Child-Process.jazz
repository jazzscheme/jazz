;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Child Processes
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.library.shell.Child-Process jazz


(import (jazz.library)
        (jazz.utilities))


(class Child-Process extends Object uses (Utilities System WinDef WinBase WinKernel WinShell WinUser)
  
  
  (slot process-id)
  (slot process-handle)
  (slot input-pipe)
  (slot output-pipe)
  (slot error-pipe)
  
  
  (method (initialize handle id input output error)
    (nextmethod)
    (set! process-handle handle)
    (set! process-id id)
    (set! input-pipe input)
    (set! output-pipe output)
    (set! error-pipe error)
    (destroy-mandatory))
  
  
  (method (destroy)
    (close~ input-pipe)
    (close~ output-pipe)
    (close~ error-pipe)
    (nextmethod))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-process-handle)
    process-handle)
  
  
  (method public (get-process-id)
    process-id)
  
  
  (method public (get-input-pipe)
    input-pipe)
  
  
  (method public (get-output-pipe)
    output-pipe)
  
  
  (method public (get-error-pipe)
    error-pipe)
  
  
  (method public (get-standard-input)
    (get-printer~ input-pipe))
  
  
  (method public (get-standard-output)
    (get-reader~ output-pipe))
  
  
  (method public (get-standard-error)
    (get-reader~ error-pipe))))
