;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; State View
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(in state)


(class State-View extends Image-View
  
  
  (constant Bitmaps
    '({Bitmap-Resource "Up"}
      {Bitmap-Resource "Going"}
      {Bitmap-Resource "Down"}))
  
  
  (definition Current-Bitmap
    0)


  (slot changer)
  (slot slowdown initialize 5000)
  (slot done?    initialize #f)
  
  
  (form
    (<install>                    size: {Dimension 32 32} portfolio: :large-icons image-name: {Bitmap-Resource "Up"} mouse-down-handler: {Event-Handler (form: mover) on-mouse-down} drag-move-handler: {Event-Handler (form: mover) on-drag-move} drag-up-handler: {Event-Handler (form: mover) on-drag-up} double-click-handler: {Event-Handler form: on-double-click}
      (<Figure-Mover> name: mover client: :toplevel)))


  (method (install rest)
    (nextmethod rest)
    (install-changer))
  
  
  (method (install-changer)
    (unimplemented)
    @convert-thread
    (set! changer
          (new Thread
            context: self
            execute: (function (thread)
                       (while (not done?)
                         (sleep slowdown)
                         (set! Current-Bitmap (modulo (+ Current-Bitmap 1) (length Bitmaps)))
                        (set-image-name (element Bitmaps Current-Bitmap)))))))
  
  
  ;;;
  ;;;; Events
  ;;;


  (method (on-double-click evt)
    (exit-process~ (get-process))))
