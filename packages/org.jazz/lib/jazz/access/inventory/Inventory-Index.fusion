;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Inventory Index
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.access.inventory.Inventory-Index jazz


(import (jazz.access)
        (jazz.library)
        (jazz.utilities))


(class Inventory-Index extends Object
  
  
  (slot inventory)
  (slot parent)
  
  
  (method (initialize inventory parent)
    (nextmethod)
    (set! inventory~self inventory)
    (set! parent~self parent))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-inventory)
    inventory)
  
  
  (method public (get-parent)
    parent)
  
  
  ;;;
  ;;;; Database
  ;;;


  (method public virtual (get-title)
    )  
  
  
  (method public virtual (get-unique?)
    #f)
  
  
  (method public virtual (set-unique? value)
    )
    
  
  (method public virtual (get-required?)
    #f)
  
  
  (method public virtual (get-ignore-nulls?)
    #f)
  
  
  (method public virtual (get-fields)
    )
  
  
  (method public virtual (get-fields/orders)
    (with-closed ((fields (get-fields)))
      (map (function dynamic (field)
             (list (get-title~ field) (get-order~ field)))
           fields)))
  
  
  (method public virtual (set-fields/orders value)
    )
  
  
  (method public virtual (get-ignore-duplicates?)
    #f)
  
        
  (method public virtual (get-clustered?)
    #f)
  
          
  (method public virtual (get-pad-index?)
    #f)        
     
  
  (method public virtual (get-recompute-statistics?)
    #t)
  
  
  (method public virtual (get-fill-factor)
    0)))
