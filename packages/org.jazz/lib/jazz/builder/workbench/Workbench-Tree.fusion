;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Workbench Tree
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.builder.workbench.Workbench-Tree jazz


(import (jazz.designer)
        (jazz.builder)
        (jazz.jml)
        (jazz.library)
        (jazz.platform)
        (jazz.utilities))


(class Workbench-Tree extends Descendants-Tree
  
  
  (form
    (<install> portfolio: :icons draggable?: #t editable?: #f reorderable?: #t show-branches?: #f))
  

  (method (focus-actions)
    (cons (find-actions 'workbench-tree)
          (nextmethod)))
  
  
  (method (on-add-file evt)
    (add-file~ (get-manager)))
  
  
  (method (on-add-group evt)
    (add-group~ (get-manager)))
  
  
  (method (get-manager)
    (get-guest~ player))

  
  (method (context-menu pos)
    (let ((manager (get-manager)))
      (with-context-click pos
        (function dynamic ()
          (let ((menu (new-menu~ manager)))
            (when menu
              (track-popup-menu menu pos)))))))
  
  
  ;; This is a big patch, to go around the fact that if a user copy pastes a Jazz-File, there is
  ;; not yet an advance test to check for name duplications so that the error is detected only partway
  ;; through the recursion and that leaves the workbench in an unstable state.
  (method (can-copy?)
    false)
  
  
  (method (can-paste-properties?)
    false)
  
  
  (method (get-draggable?)
    ;; until bug fix in the tree selection update
    false)
  
  
  (method (update-selection expand-state selected-components)
    )
  
  
  (method (use-add-menu?)
    false)
  
  
  (method (row-state component update? level)
    (if update?
        (if (< level 1) 'expanded 'collapsed)
      'collapsed))
  
  
  (method (double-click pos)
    (let ((manager (get-manager))
          (component (selected-component)))
      (if (is? component Project)
          (activate-selection~ manager)
        (nextmethod pos)
        (unless (or (is? component Product) (is? component Group))
          (launch-selection~ manager)))))
  
  
  (method (return-press key)
    (let ((manager (get-manager))
          (component (selected-component)))
      (if (is? component Project)
          (activate-selection~ manager)
        (unless (is? component Group)
          (launch-selection~ manager)))))
  
  
  (method (receive-files pos pathnames)
    (let* ((cell (view->tree pos))
           (data (if (not cell) (get-workbench) (get-user-data~ (get-row [row cell]))))
           (manager (get-manager)))
      (if (or (is? data Product)
              (is? data Product-Group))
          (import-pathnames~ manager (ascendant-product~ manager data) pathnames data)
        (bell))))
  
  
  (method (addable-root-classes)
    (list
      Group
      {}
      Project
      Module))))
