;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; HTML Viewer
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.html.html.HTML-Viewer jazz


(import (jazz.html)
        (jazz.jml)
        (jazz.ui)
        (jazz.library)
        (jazz.utilities))


(class HTML-Viewer extends Layout-View uses (Utilities System COM WinDef WinUser WinOLE SHDocVw)


  (property directory initialize {} getter get-directory setter set-directory)
  (property text      initialize {} getter get-text      setter set-text)

  
  (slot rendering-file initialize {})
    
  
  (form
    (<install>                      title: "HTML View" layout-type: fill
      (<Browser-View> name: browser)))
  
  
  ;;;
  ;;;; Initialization
  ;;;
  
  
  (method (finish rest)
    (nextmethod rest)
    (setup-rendering)
    (destroy-mandatory))
  
  
  (method (install-in-host host)
    (nextmethod host)
    (setup))
  
  
  (method public (setup)
    (setup~ (get-browser))
    (when text
      (render-text)))
  
  
  (method public (show-browser)
    (set-visible?~ (get-window~ (get-browser)) #t))
  
  
  (method (destroy)
    (when rendering-file
      (delete-file~ rendering-file)
      (set! rendering-file {}))
    (nextmethod))
    
  
  ;;;
  ;;;; Access
  ;;;


  (method public (get-directory)
    directory)


  (method public (set-directory value)
    (set! directory value))


  (method public (get-text)
    text)


  (method public (set-text value)
    (set! text value)
    (when (get-site)
      (render-text)))
  
  
  (method public (get-browser)
    (locate 'browser))
  
  
  (method (get-site)
    (get-site~ (get-browser)))
    
  
  ;;;
  ;;;; Events (patch)
  ;;;
  
  
  (method (show)
    (nextmethod)
    (set-visible?~ (get-browser) #t))
  
  
  (method (hide)
    (nextmethod)
    (set-visible?~ (get-browser) #f))
    
  
  ;;;
  ;;;; Rendering
  ;;;
  
  
  (method (setup-rendering)
    (set! rendering-file (create-temporary-file directory: directory)))
  
  
  (method (render-text)
    (call-with-output-file rendering-file
      (lambda (printer)
        (format printer "{a}" text)))
    (render-html))

  
  (method (render-html)
    (let ((site (get-site)))
      (navigate~ site rendering-file)))))
