;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Jazz Text Actions
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.language.jazz.text.Jazz-Text-Actions jazz


(import (jazz.language.jazz)
        (jazz.jml)
        (jazz.library)
        (jazz.ui)
        (jazz.utilities))


(class Jazz-Text-Actions extends Actions
  
  
  (form
    (<install>
      (<Action-Item> name: evaluate              action-handler: {Event-Handler :focus on-evaluate} shortcut: {Shortcut :control Return})
      @waiting
      (<Action-Item> name: design-form           action-handler: {Event-Handler :focus on-design-form} shortcut: {Shortcut :control #\D})
      (<Action-Item> name: present-documentation action-handler: {Event-Handler :focus on-present-documentation} shortcut: {Shortcut F1})
      (<Action-Item> name: edit-documentation    action-handler: {Event-Handler :focus on-edit-documentation} shortcut: {Shortcut :control :shift F12})
      @waiting
      (<Action-Item> name: add-break             action-handler: {Event-Handler :focus on-add-break} shortcut: {Shortcut F9})
      @waiting
      (<Action-Item> name: remove-break          action-handler: {Event-Handler :focus on-remove-break} shortcut: {Shortcut :shift F9})
      (<Action-Item> name: set-read/write        action-handler: {Event-Handler :focus on-set-read/write})
      (<Action-Item> name: insert-properties     action-handler: {Event-Handler :focus on-insert-properties})))))
