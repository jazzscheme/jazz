;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Internet Object Reference
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.library.utility.IOR jazz


(import (jazz.library))


(class IOR extends Object
  
  
  (slot host)
  (slot port)
  (slot remotable)
  (slot reference)
  
  
  (method (initialize host port remotable reference)
    (nextmethod)
    (set! host~self host)
    (set! port~self port)
    (set! remotable~self remotable)
    (set! reference~self reference))


  (method (compare-object target)
    (cond ((is-not? target IOR)
           :incompatible)
          ((and (= host (get-host~ target))
                (= port (get-port~ target))
                (= remotable (get-remotable~ target))
                (= reference (get-reference~ target)))
           :equal)
          (else
           :not-equal)))
  
  
  (method (fold-literal)
    `(new IOR ',host ',port ',remotable ',reference))
  
  
  (method (print printer readably)
    (format printer "~{{a} {s} {s} {s} {s}}"
            (identifier-name (type-name (class-of self)))
            host
            port
            remotable
            reference))
  
  
  (method (unmarshal)
    (unmarshal-ior~ (get-proxy-dispatcher~ (get-process)) self))
  
  
  ;;;
  ;;;; Access
  ;;;


  (method public (get-host)
    host)


  (method public (get-port)
    port)


  (method public (get-remotable)
    remotable)


  (method public (get-reference)
    reference)))
