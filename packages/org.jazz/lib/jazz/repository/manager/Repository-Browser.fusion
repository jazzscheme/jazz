;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Repository Browser
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.repository.manager.Repository-Browser jazz


(import (jazz.repository)
        (jazz.library)
        (jazz.utilities))


(class Repository-Browser extends Directory-Browser

  
  (property expand-state initialize {} getter get-expand-state setter set-expand-state)
  
  
  @convert-external
  (method meta (external-name . rest)
    'repository-browser)
  
  
  @convert-guest
  (method meta (palette-title)
    "Repository")
  
  
  @convert-guest
  (method meta (palette-icon)
    {Bitmap-Resource "Repository"})
  
  
  (method (install rest)
    (nextmethod rest)
    (let ((repository (get-repository~ Repository)))
      (set-directory (essay repository (get-base-directory~ repository)))))


  ;;;
  ;;;; Repository
  ;;;
  
  
  (method (get-repository)
    (get-repository~ Repository))


  ;;;
  ;;;; Access
  ;;;


  (method public (get-expand-state)
    (get-expand-state~ (locate 'tree)))


  (method public (set-expand-state state)
    (set-expand-state~ (locate 'tree) state))


  ;;;
  ;;;; Session
  ;;;
  
  
  (method (confirm-close . rest)
    (save-session))
  
  
  (method (save-session)
    @to-convert
    (let ((info
           (list (external-name)
                 position:     (get-position)
                 size:         (get-size)
                 expand-state: (get-expand-state))))
      (push-property~ properties 'Opened-Windows info)))


  ;;;
  ;;;; Update
  ;;;
  
  
  (method (update-title)
    (set-title "Repository"))
  
  
  (method (get-moniker-image moniker)
    (let* ((repository (require-repository~ Repository))
           (item (get-item~ repository moniker error?: false)))
      (if item
          (case (get-status~ item)
            ((checked-in) {Bitmap-Resource "CheckedIn"})
            ((checked-out) {Bitmap-Resource "CheckedOut"})
            ((checked-out-me) {Bitmap-Resource "CheckedOutMe"}))
        (let ((ext (get-extension~ moniker)))
          (if (= ext "jar")
              {Bitmap-Resource "External"}
            {Bitmap-Resource "Document"})))))))
