;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; VSS Repository Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.repository.providers.vss.VSS-Repository-Preferences jazz


(import (jazz.designer)
        (jazz.repository)
        (jazz.library)
        (jazz.utilities))


(class VSS-Repository-Preferences extends Repository-Preferences
  

  (property ini-file initialize {} accessors generate)
  (property username initialize {} accessors generate)
  (property password initialize {} accessors generate)


  ;;;
  ;;;; Repository
  ;;;
  
  
  (method (repository-class)
    VSS-Repository)
  
  
  (method (install-preferences designer initargs)
    (nextmethod designer initargs)
    (set-property~ designer self 'ini-file (getf initargs :ini-file))
    (set-property~ designer self 'username (getf initargs username:))
    (set-property~ designer self 'password (getf initargs password:)))
  
  
  (method (install-concrete designer pref)
    (set-property~ designer pref 'concrete-type 'vss)
    (set-property~ designer pref 'concrete-initargs (gather-concrete-initargs)))
  
  
  (method (gather-concrete-initargs)
    (list
     :base-project base-project
     :base-directory base-directory
     :ini-file ini-file
     username: username
     password: password))


  ;;;
  ;;;; Editor
  ;;;
  
  
  (method meta (editor-class)
    VSS-Repository-Editor)


  ;;;
  ;;;; Designer
  ;;;
  
  
  @convert-descriptor
  (method meta (get-class-presentation)
    "VSS Repository")
  
  
  @convert-descriptor
  (method meta (get-class-image)
    {Bitmap-Resource "Repository"})
  
  
  @convert-descriptor
  (method meta (property-presentation property)
    (case (field-name property)
      ((ini-file) "srcsafe.ini File")
      ((username) "Username")
      ((password) "Password")
      (else (nextmethod property))))
  
  
  (method (get-row-instance property)
    (case (field-name property)
      ((ini-file) (new File-Row mode: 'open parameters: '(:extensions (("SourceSafe Databases (srcsafe.ini)" . "srcsafe.ini")))))
      ((username) (new String-Row :nullable? false))
      ((password) (new Password-Row :nullable? false))
      (else (nextmethod property))))
  
  
  (method (get-categorized-properties)
    '(ini-file
      username
      password
      base-project
      base-directory
      active?))))
