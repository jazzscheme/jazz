;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Selection Events
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.event.Selection-Event jazz


(import (jazz.library)
        (jazz.utilities))


(class Selection-Event extends Event
  
  
  (slot old)
  (slot selection)
  (slot origin)
  (slot force-parent?)
  (slot force?)
  (slot user-origin?)


  (method (initialize kind sender old selection (origin: origin {}) (force-parent?: force-parent? false) (force?: force? false) (user-origin?: user-origin? false))
    (nextmethod kind sender)
    (set! [old self] old)
    (set! [selection self] selection)
    (set! [origin self] origin)
    (set! [force-parent? self] force-parent?)
    (set! [force? self] force?)
    (set! [user-origin? self] user-origin?))


  (method (print printer readably)
    (format printer "~{{a} {s} {s} {s}{? {l}~}}"
            (identifier-name (type-name (class-of self)))
            kind
            old
            selection
            properties))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-old)
    old)
  
  
  (method public (get-selection)
    selection)
  
  
  (method public (get-origin)
    origin)
  
  
  (method public (get-force-parent?)
    force-parent?)
  
  
  (method public (get-force?)
    force?)
  
  
  (method public (get-user-origin?)
    user-origin?)))
