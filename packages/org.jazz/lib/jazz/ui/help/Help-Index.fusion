;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Help Contents
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.help.Help-Index jazz


(import (jazz.jml)
        (jazz.platform)
        (jazz.ui)
        (jazz.designer)
        (jazz.literals)
        (jazz.library)
        (jazz.utilities))


(class Help-Contents extends Editor-View


  (form
    (<install>                                size: {Dimension 650 400} layout-type: border layout-insets: {Rect 0 2 0 0}
      (<Layout-View>        name: tools       size: {Dimension 300 33} layout-type: flow layout-insets: {Rect 0 6 0 0} location: north
        (<Push-Tool>        name: synchronize size: {Dimension 22 22} tooltip?: #t tooltip-text: "Synchronize Contents" image-name: {Bitmap-Resource "Synchronize"} portfolio: :icons action-handler: {Event-Handler form: on-synchronize}))
      (<Descendants-Editor> name: descendants location: center
        (<!>                name: scroller    flat?: #t
          (<!>              name: content
            (<!>            name: header
              (<!>          name: content
                (<!>        name: tree        show-header?: #f highlight-edited?: #f
                  (<!>      name: descendant)))))))))


  @old
  (form
    (<install>                                                  size: {Dimension 650 400} layout-type: border layout-insets: {Rect 0 2 0 0}
      (<Layout-View>                   name: tools              size: {Dimension 300 33} layout-type: flow layout-insets: {Rect 0 6 0 0} location: north
        (<Push-Tool>                   name: synchronize        size: {Dimension 22 22} tooltip?: #t tooltip-text: "Synchronize Contents" image-name: {Bitmap-Resource "Synchronize"} portfolio: :icons action-handler: {Event-Handler form: on-synchronize}))
      (<Center-View>                   name: center             size: {Dimension 650 367} location: center
        (<Tab-View>                    name: tab                position: {Point 1 0} size: {Dimension 285 366} selection-handler: {Event-Handler form: on-selection}
          (<Tab-Sheet>                 name: contents-sheet     title: "Contents"
            (<!>                       name: content
              (<Border-View>           name: descendants-border position: {Point 4 4} size: {Dimension 276 338} border-type: edge
                (<Descendants-Editor>  name: descendants
                  (<!>                 name: scroller
                    (<!>               name: content
                      (<!>             name: header
                        (<!>           name: content
                          (<!>         name: tree               highlight-edited?: #f
                            (<!>       name: descendant         title: "Entity"))))))))))
          (<Tab-Sheet>                 name: index-sheet        title: "Index"
            (<!>                       name: content
              (<Border-View>           name: index-border       position: {Point 4 4} size: {Dimension 276 338} border-type: edge
                (<Scroller-View>                                hscroll?: #t vscroll?: #t
                  (<!>                 name: content            layout-type: fill
                    (<Tree-Header>
                      (<!>             name: content
                        (<Index-Tree>  name: index
                          (<!>         name: descendant         title: "Entity" width: 160)))))))))
          (<Tab-Sheet>                 name: search-sheet       title: "Search"
            (<!>                       name: content
              (<Label-View>                                     title: "Find:" position: {Point 8 12} size: {Dimension 60 16})
              (<Border-View>           name: find-border        position: {Point 40 9} size: {Dimension 238 19} border-type: edge
                (<Scroller-View>                                hscroll?: #f vscroll?: #f
                  (<!>                 name: content            layout-type: fill
                    (<Plain-Text-View> name: find               accepts-returns?: #f focus-selects-all?: #t show-unfocused-selection?: #f left-padding: 2 top-padding: 2 return-press-handler: {Event-Handler form: on-return-press}))))
              (<Border-View>           name: search-border      position: {Point 4 35} size: {Dimension 276 307} border-type: edge
                (<Scroller-View>                                hscroll?: #t vscroll?: #t
                  (<!>                 name: content            layout-type: fill
                    (<Tree-Header>
                      (<!>             name: content
                        (<Search-Tree> name: search
                          (<!>         name: descendant         title: "Entity" width: 160)))))))))))))
   

  ;;;
  ;;;; Palette
  ;;;
  
  
  @convert-guest
  (method meta (palette-class)
    Tool-Palette)
  
  
  @convert-guest
  (method meta (palette-icon)
    {Bitmap-Resource "Doc"})
  
  
  @convert-guest
  (method meta (palette-title)
    "Doc")
  
  
  ;;;
  ;;;; Docked
  ;;;
  
  
  (method (get-tools)
    (locate 'tools))

  
  ;;;
  ;;;; Preferences
  ;;;
  
  
  (method (tool-preferences)
    (get-preferences '(tools help-index)))

  
  ;;;
  ;;;; Component
  ;;;

  
  (method (install rest)
    (nextmethod rest)
    (set-shown?~ (locate '(descendants header)) false)
    (set-editor~ (locate 'descendants) self)
    @w(set-editor~ (locate 'index) self)
    @w(set-editor~ (locate 'search) self))
  
  
  (method (client-update)
    (nextmethod)
    (set-client~ (locate 'index) client)
    (set-client~ (locate 'search) client))

  
  (method (focus-document)
    (acquire-focus~ (locate '(descendants tree))))
  
  
  ;;;
  ;;;; Document
  ;;;
    
  
  (method (document-status)
    "Help Contents")

  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method protected virtual (resize-center dh dv)
    @w(size-figure~ (locate 'tab) 0 dv)
    (size-figure~ (locate 'descendants-border) 0 dv)
    @w(size-figure~ (locate 'index-border) 0 dv)
    @w(size-figure~ (locate 'search-border) 0 dv))
  
  
  (method public (on-splitter-move evt)
    (let ((sender (get-sender~ evt))
          (delta (get-property~ evt :delta)))
      (case (get-name~ sender)
        ((right)
         (size-figure~ (locate 'tab) delta 0)
         (size-figure~ (locate 'descendants-border) delta 0)
         (size-figure~ (locate 'index-border) delta 0)
         (size-figure~ (locate 'find-border) delta 0)
         (size-figure~ (locate 'search-border) delta 0)))
      (update-view)))
  
  
  (method public (on-selection evt)
    (let ((tab (locate 'tab)))
      (when (= (get-selection-name~ tab) 'search-sheet)
        (let ((text (locate 'find)))
          (acquire-focus~ text)
          (select-all~ text)))))
  
  
  ;;;
  ;;;; Synchronize
  ;;;
  
  
  (method (synchronize-tree component)
    (let* ((tree (locate '(descendants tree)))
           (row (component-row~ tree component)))
      (if (null? row)
          (bell)
        (ensure-expanded~ tree row)
        (set-single-selection~ tree (row-rank~ tree row))
        (set-selection-name~ (locate 'tab) 'contents-sheet))))
  
  
  ;;;
  ;;;; Search
  ;;;
  
  
  (method (search target)
    (set-target~ (locate 'search) target))))
