;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Quick Find
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.ide.Quick-Find jazz


(import (jazz.jml)
        (jazz.platform)
        (jazz.ui)
        (jazz.library)
        (jazz.utilities))


(class Quick-Find extends Layout-View
  
  
  (form
    (<install>                        layout-type: fill
      (<Scroller-View> name: scroller hscroll?: #f vscroll?: #f
        (<!>           name: content  layout-type: fill))))

  
  (method (install rest)
    (nextmethod rest)
    (let ((text (new-text)))
      (set-client~ (locate 'scroller) text)
      (set-tool?~ (get-controller~ text) true)))
  
  
  (method (new-text)
    (new IDE-Text-View
      parent: (get-content~ (locate 'scroller))
      name: 'text
      :focus-selects-all? true
      :show-unfocused-selection? false
      :accepts-returns? false
      :left-padding 2
      :top-padding 2
      :tooltip? true
      :tooltip-text "Quick Find"
      :return-press-handler (new Event-Handler :target self :method-name on-return-press)))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-text)
    (child~ (get-content~ (locate 'scroller)) 'text))
  
  
  (method public (get-string-content)
    (get-string-content~ (get-text)))
  
  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method (on-return-press evt)
    (let* ((key (get-key~ evt))
           (control? (get-control?~ evt))
           (shift? (get-shift?~ evt))
           (stage (get-stage))
           (frame (first-child~ stage)))
      (if (is-not? frame View-Host)
          (bell)
        (let ((guest (get-guest~ frame)))
          (if (is-not? guest Document)
              (bell)
            (let* ((text (get-text-view~ guest))
                   (content (get-string-content))
                   (targets (list content)))
              (if (not text)
                  (bell)
                (if (not shift?)
                    (select-next~ text targets)
                  (select-previous~ text targets)))))))))))
