;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Root Views
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.view.Root-View jazz


(import (jazz.jml)
        (jazz.library)
        (jazz.literals)
        (jazz.ui)
        (jazz.ui.view)
        (jazz.utilities))


(class Root-View extends Container
  
  
  (form
    (<install> position: {Point 0 0} background: {Color name: Medium} offscreen?: #t layout-type: fill))

  
  ;;;
  ;;;; Activation
  ;;;
  
  
  (method public (call-activate)
    (unless (eq? (get-focused-root) self)
      (set-focused-root self)
      (root-activate)
      (let ((host (get-host)))
        (when (is? host View-Host)
          (root-activated~ (get-guest~ host))))))
  
  
  (method public (call-deactivate)
    (when (eq? (get-focused-root) self)
      (set-previously-focused-root~ (get-overlapped) (get-focused-root))
      (set-focused-root {})
      (root-deactivate)
      (let ((host (get-host)))
        (when (is? host View-Host)
          (let ((guest (get-guest~ host)))
            (when guest
              (root-deactivated~ guest)))))))
  
  
  (method public virtual (mouse-activate)
    )
  
  
  (method public virtual (root-activate)
    )
  
  
  (method public virtual (root-deactivate)
    )


  ;;;
  ;;;; Update
  ;;;
  
  
  (method public virtual (invalidate-caption)
    )

  
  ;;;
  ;;;; Designer
  ;;;
  
  
  (method (get-parent-component)
    (get-player))))
