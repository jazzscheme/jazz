;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Jedi Status
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jedi.application.Jedi-Status jazz


(import (jazz.jml)
        (jazz.library)
        (jazz.ui)
        (jazz.ui.activity)
        (jedi))


(class Jedi-Status extends IDE-Status


  (form
    (<install>
      (<Status-Label> name: debugger   size: {Dimension 20 20} tooltip?: #t tooltip-text: "Current Debuggee" mouse-down-handler: {Event-Handler form: on-mouse-down} context-menu-handler: {Event-Handler form: on-context-menu})
      (<Status-Label> name: message    size: {Dimension 782 20} location: center)
      (<Status-Label> name: workspace  title: "Default" size: {Dimension 150 20} location: tail icon: {Bitmap-Resource "Workspace"} mouse-down-handler: {Event-Handler form: on-mouse-down} context-menu-handler: {Event-Handler form: on-context-menu})
      (<Status-Label> name: activities title: "No registered activities" size: {Dimension 250 20} location: tail icon: {Bitmap-Resource "Task"} mouse-down-handler: {Event-Handler form: on-mouse-down} context-menu-handler: {Event-Handler form: on-context-menu})
      (<Status-Label> name: locales    title: "English" size: {Dimension 100 20} location: tail icon: {Bitmap-Resource "Branch"} mouse-down-handler: {Event-Handler form: on-mouse-down} context-menu-handler: {Event-Handler form: on-context-menu})
      (<Status-Label> name: look       title: "Look" size: {Dimension 100 20} location: tail icon: {Bitmap-Resource "Branch"} mouse-down-handler: {Event-Handler form: on-mouse-down} context-menu-handler: {Event-Handler form: on-context-menu})
      (<Status-Label> name: mode       size: {Dimension 90 20} location: tail icon: {Bitmap-Resource "Script"} mouse-down-handler: {Event-Handler form: on-mouse-down} context-menu-handler: {Event-Handler form: on-context-menu})))


  (method (install rest)
    (nextmethod rest)
    @convert
    (let* ((process (get-process))
           (icon (process-icon~ process)))
      (set-icon~ (locate 'debugger) icon)))

  
  ;;;
  ;;;; Palette
  ;;;
  
  
  @convert-guest
  (method meta (palette-class)
    Tool-Palette)
  
  
  @convert-guest
  (method meta (palette-icon)
    {Bitmap-Resource "Document"})
  

  @convert-guest
  (method meta (palette-title)
    "Status")

  
  ;;;
  ;;;; Events
  ;;;


  @convert/wait
  (method (on-context-menu evt)
    (let* ((sender (get-sender~ evt))
           (name (get-name~ sender))
           (pos (acquire sender (get-position~ evt))))
      (case name
        ((debugger) (track-popup-menu (new Debugger-Menu) pos))
        ((workspace) (popup-menu Workspaces-Menu self pos))
        ((activities) (track-popup-menu (new Activities-Menu) pos))
        ((locales) (track-popup-menu (new Locales-Menu) pos))
        ((look) (track-popup-menu (new Look-Menu) pos))
        (else (nextmethod evt)))))
  
  
  @convert/wait
  (method (on-mouse-down evt)
    (let* ((sender (get-sender~ evt))
           (name (get-name~ sender))
           (pos (acquire sender (get-position~ evt))))
      (case name
        ((debugger) (select-debugger-workspace))
        ((workspace) (popup-menu Workspaces-Menu self pos))
        ((activities) (toggle-visible?~ (get-activity-manager)))
        ((locales) (track-popup-menu (new Locales-Menu) pos))
        ((look) (track-popup-menu (new Look-Menu) pos))
        (else (nextmethod evt)))))))
