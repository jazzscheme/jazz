;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; JDBC Inventory Column
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.access.providers.inventory.jdbc.JDBC-Inventory-Column jazz


(import (jazz.access)
        (jazz.library)
        (jazz.utilities))


(class JDBC-Inventory-Column extends Inventory-Column
  
  
  (slot title    initialize {})
  (slot datatype initialize {})
  
  
  (method (initialize inventory parent resultset)
    ;; the false is temporary of course
    (nextmethod inventory parent false)
    (set! title (getString~ resultset "COLUMN_NAME"))
    (set! datatype (column-datatype resultset)))
  
  
  (method (column-datatype resultset)
    (let ((type (datatype-name~ JDBC-Datatype (getInt~ resultset "DATA_TYPE")))
          (size (getInt~ resultset "COLUMN_SIZE")))
      (new-datatype~ JDBC-Datatype type size)))
  
  
  ;;;
  ;;;; Database
  ;;;
  
  
  (method (get-title)
    title)
  
  
  (method (get-datatype)
    datatype)
  
  
  (method (get-size)
    (get-size~ datatype))
  

  ;; todo
  (method (get-ordinal-position)
    0)))
