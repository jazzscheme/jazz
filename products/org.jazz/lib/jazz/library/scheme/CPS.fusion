;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Continuation Passing Style
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library CPS jazz


@WAIT (
  
  
  @w (define f null)
  @w (define g null)
  @w (define a null)
  @w (define b null)
  @w (define c null)
  
  
  @waiting
  (define test
    (lambda (k13)
      (let ((k14 (##core#lambda
                     (r15)
                   (let ((t4 r15))
                     (let ((k17 (##core#lambda
                                    (r18)
                                  (let ((t5 r18))
                                    (let ((t20 (set! f
                                                     (lambda (k22)
                                                       (let ((k23 (##core#lambda
                                                                      (r24)
                                                                    (k22 r24))))
                                                         (let ((k27 (##core#lambda
                                                                        (r28)
                                                                      (let ((a26 r28))
                                                                        (let ((k31 (##core#lambda
                                                                                       (r32)
                                                                                     (let ((a30 r32))
                                                                                       (let ((k35 (##core#lambda
                                                                                                      (r36)
                                                                                                    (let ((a34 r36))
                                                                                                      (g k23
                                                                                                         a26
                                                                                                         a30
                                                                                                         a34)))))
                                                                                         (c k35))))))
                                                                          (b k31))))))
                                                           (a k27)))))))
                                      (let ((t6 t20))
                                        (let ((t38 (set! a
                                                         (lambda (k40) (k40 '1)))))
                                          (let ((t7 t38))
                                            (let ((t41 (set! b
                                                             (lambda (k43) (k43 '2)))))
                                              (let ((t8 t41))
                                                (let ((t44 (set! c
                                                                 (lambda (k46)
                                                                   (k46 '3)))))
                                                  (let ((t9 t44))
                                                    (let ((t47 (set! g
                                                                     (lambda (k49
                                                                              x0
                                                                              y1
                                                                              z2)
                                                                       (let ((k50 (##core#lambda
                                                                                      (r51)
                                                                                    (k49 r51))))
                                                                         (+ k50
                                                                            x0
                                                                            y1
                                                                            z2))))))
                                                      (let ((t10 t47))
                                                        (let ((k53 (##core#lambda
                                                                       (r54)
                                                                     (let ((t11 r54))
                                                                       (let ((k56 (##core#lambda
                                                                                      (r57)
                                                                                    (k13 r57))))
                                                                         (let ((k59 (##core#lambda
                                                                                        (r60)
                                                                                      (r60 k56))))
                                                                           (##sys#implicit-exit-handler
                                                                            k59)))))))
                                                          (let ((k63 (##core#lambda
                                                                         (r64)
                                                                       (let ((a62 r64))
                                                                         (debug k53
                                                                                a62)))))
                                                            (f k63)))))))))))))))))
                       (##core#callunit "eval" k17))))))
        (##core#callunit "library" k14)))))
)