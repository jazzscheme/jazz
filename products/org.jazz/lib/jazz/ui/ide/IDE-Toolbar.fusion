;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; IDE Toolbar
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.ide.IDE-Toolbar jazz


(import (jazz.platform)
        (jazz.ui)
        (jazz.ui.clipboard)
        (jazz.library)
        (jazz.utilities))


(class IDE-Toolbar extends Toolbar
  
  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method (on-clipboard-menu evt)
    (let* ((sender (get-sender~ evt))
           (pos (+ (get-position~ sender) (new Point 0 [height (get-size~ sender)])))
           (clipboards (cons (get-clipboard) (get-clipboard-stack~ (get-application)))))
      (track-popup-menu (new Clipboards-Menu :clipboards clipboards) pos)))
  
  
  (method (on-backward-menu evt)
    (let* ((sender (get-sender~ evt))
           (initiator (get-combo~ sender)))
      (track~ History-Menu sender initiator (get-history-manager~ (get-application)) 'backward)))
  
  
  (method (on-forward-menu evt)
    (let* ((sender (get-sender~ evt))
           (initiator (get-combo~ sender)))
      (track~ History-Menu sender initiator (get-history-manager~ (get-application)) 'forward))))


;;;
;;;; Clipboards-Menu
;;;


(class Clipboards-Menu extends Context-Menu
  
  
  (property clipboards accessors generate)
  
  
  (method (finish rest)
    (nextmethod rest)
    (bind (clipboard . others) clipboards
      (insert-item clipboard)
      (when others
        (new Separator-Item parent: self)
        (for-each insert-item others))))
  
  
  (method (insert-item item)
    (new Label-Item parent: self :title item :action-handler (new Event-Handler :target self :method-name 'on-action :properties (list :string item))))
  
  
  (method (on-action evt)
    (let ((focus (get-focus)))
      (if (is-not? focus Text-View)
          (bell)
        (let ((string (get-property~ evt :string)))
          (paste-clipboard-string~ focus string)))))))
