;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Splitter Preferences
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.preferences.Splitter-Preferences jazz


(import (jazz.jml)
        (jazz.ui)
        (jazz.library)
        (jazz.utilities))


(class Splitter-Preferences-Class extends Class
  
  
  (method (get-class-image)
    {Bitmap-Resource "Splitter"}))


(class Splitter-Preferences metaclass Splitter-Preferences-Class extends Figure-Preferences


  (property separator   initialize 'resize        accessors generate)
  (property state       initialize {}             accessors generate)
  (property zoomed      initialize {}             accessors generate)
  (property orientation initialize 'horz          accessors generate)
  (property mode        initialize 'absolute      accessors generate)
  (property division    initialize {}             accessors generate)
  (property insets      initialize {Rect 0 0 0 0} accessors generate)
  
  
  (form
    (<install> title: "Splitter" icon: {Bitmap-Resource "Splitter"}))

  
  ;;;
  ;;;; Applying
  ;;;
  
  
  (method (apply-preferences . rest)
    (bind-optionals ((parent null)) rest
      (assert parent)
      (apply-to (new Splitter-Window parent: parent))))
  
  
  (method public (apply-to splitter)
    (remove-children~ splitter)
    (set-separator~ splitter separator)
    (set-state~ splitter state)
    (set-orientation~ splitter orientation)
    (set-mode~ splitter mode)
    (set-division~ splitter division)
    (set-insets~ splitter insets)
    (set-visible?~ splitter (get-visible?))
    (unless (is? splitter Workspace-Splitter)
      (set-location~ splitter location))
    (for-each (function dynamic (pref)
                (apply-preferences~ pref splitter))
              children)
    (for-each (function dynamic (child)
                (when (is? child View-Host)
                  (host-activate~ (get-guest~ child))))
              (get-children~ splitter))
    (layout-window~ splitter)
    (when zoomed
      (let ((zoomed-child (find-child-located~ splitter zoomed)))
        (zoom~ splitter zoomed-child))))


  ;;;
  ;;;; Designer
  ;;;
  
  
  (method (get-categorized-properties)
    '(location state orientation mode division insets))
  
  
  (method (get-addable-classes)
    (list
      Splitter-Preferences
      Pad-Preferences
      null
      Docked-Preferences
      Stage-Preferences))))
