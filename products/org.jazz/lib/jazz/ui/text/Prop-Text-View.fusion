;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Prop Text View
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2007
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(library jazz.ui.text.Prop-Text-View jazz


(import (jazz.ui)
        (jazz.library)
        (jazz.utilities))


(class Prop-Text-View extends Code-Text-View
  
  
  (method (install rest)
    (nextmethod rest)
    (let ((pref (preferences)))
      (add-style (new Text-Style name: 'Title   :base 'Default :color (get-title-color~ pref)))
      (add-style (new Text-Style name: 'Comment :base 'Default :color (get-comment-color~ pref)))))
  
  
  @convert-external
  (method meta (external-name . rest)
    'prop-text)
  
  
  ;;;
  ;;;; Coloring
  ;;;
    
  
  (definition default-preferences
    (form>>
      (<Prop-Text-Preferences>)))
  
  
  (method (preferences)
    (get-preferences '(documents prop-text)))
  
  
  (method (colorize-syntax . rest)
    (colorize-comments))

  
  (method (colorize-comments . rest)
    (let ((expl (new Jazz-Explorer self :end (text-beginning))))
      (for-each-comment~ expl
       (function dynamic (start end title?)
         (if (not title?)
             (apply-style 'Comment start)
           (apply-style 'Comment start (+ start 4))
           (apply-style 'Title (+ start 4)))))))


  (method (recolorize-text start end-row)
    (let ((range (naturals [row start] (+ end-row 1))))
      (for-each recolorize-row range)))

  
  (method (recolorize-row row)
    (recolorize-comments row))
  
  
  (method (recolorize-comments row)
    (let* ((line (paragraph-string row))
           (len (length line))
           (comment (search (comment-string~ syntax) line)))
      (when (and comment (<= comment 20))
        (let ((title-end (+ comment 4)))
          (if (and (< title-end len) (= (subseq line comment title-end) (title-comment-string~ syntax)))
              (begin
                (apply-style 'Comment (new Cell row comment) (new Cell row title-end))
                (apply-style 'Title (new Cell row title-end)))
            (apply-style 'Comment (new Cell row comment)))))))))
